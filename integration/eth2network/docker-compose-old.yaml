services:
  geth:
    image: ethereum/client-go:v1.15.5
    ports:
      - "127.0.0.1:8545:8545"
      - "127.0.0.1:8551:8551"
      - "127.0.0.1:8546:8546"
      - "127.0.0.1:30303:30303"
    volumes:
      - "gethdir:/datadir"
      - "l1keystore:/keystore"
      - "./config:/config"
      - "./config/jwt.hex:/jwt.hex"
      - "./config/password.txt:/password.txt"
    command:
      - --keystore=/keystore
      - --datadir=/datadir
      - --http
      - --http.addr=0.0.0.0
      - --http.vhosts=*
      - --http.api=engine,eth,net,web3
      - --http.corsdomain=*
      - --authrpc.addr=0.0.0.0
      - --authrpc.port=8558
      - --authrpc.vhosts=*
      - --authrpc.jwtsecret=/jwt.hex
      - --ws
      - --ws.addr=0.0.0.0
      - --ws.api=eth,net,web3,debug,txpool
      - --allow-insecure-unlock
      - --password=/password.txt
      - --nodiscover
      - --syncmode=full
      - --state.scheme=hash
      - --mine
      - --miner.etherbase=0x3f1Eae7D46d88F08fc2F8ed27FCb2AB183EB2d0E
      - --gcmode=archive
    healthcheck:
      test: ["CMD", "geth", "attach", "--exec", "eth.blockNumber", "/datadir/geth.ipc"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - eth2network

  # Initialize Geth with the genesis configuration
  init_geth:
    image: ethereum/client-go:v1.15.5
    command: init --state.scheme hash --datadir /datadir/ /config/genesis-init.json
    volumes:
      - "gethdir:/datadir"
      - "./config:/config"
    networks:
      - eth2network

  # Creates a genesis state for the beacon chain using a YAML configuration file and
  # a deterministic set of validators
  create_beacon_chain_genesis:
    image: "gcr.io/prysmaticlabs/prysm/cmd/prysmctl:latest"
    command:
      - testnet
      - generate-genesis
      - --fork=deneb
      - --num-validators=2
      - --genesis-time-delay=15
      - --output-ssz=/consensus/genesis.ssz
      - --chain-config-file=/config/config.yaml
      - --geth-genesis-json-in=/config/genesis-init.json
    volumes:
      - "consensus:/consensus"
      - "./config:/config"
    networks:
      - eth2network

  # First, we need to clear the database
  clear_beacon_db:
    image: "alpine:latest"
    command: ["rm", "-rf", "/consensus/beacondata"]
    volumes:
      - "consensus:/consensus"
    networks:
      - eth2network

  # Runs a Prysm beacon chain from a specified genesis state created in the previous step
  # and connects to go-ethereum in the same network as the execution client.
  # The account used in go-ethereum is set as the suggested fee recipient for transactions
  # proposed via the validators attached to the beacon node.
  prysm_beacon_chain:
    image: "gcr.io/prysmaticlabs/prysm/beacon-chain:stable"
    command:
      - --datadir=/consensus/beacondata
      - --rpc-port=5000
      - --min-sync-peers=0
      - --genesis-state=/consensus/genesis.ssz
      - --interop-eth1data-votes
      - --bootstrap-node=
      - --chain-config-file=/config/config.yaml
      - --rpc-host=0.0.0.0
      - --grpc-gateway-host=0.0.0.0
      - --chain-id=1337
      - --execution-endpoint=geth:8551
      - --accept-terms-of-use
      - --jwt-secret=/jwt.hex
      - --suggested-fee-recipient=0x000000000000000000000000000000000000dEaD
    volumes:
      - "consensus:/consensus"
      - "./config:/config"
      - "./config/jwt.hex:/jwt.hex"
    depends_on:
      geth:
        condition: service_healthy
      create_beacon_chain_genesis:
        condition: service_completed_successfully
      clear_beacon_db:
        condition: service_completed_successfully
    ports:
      - "127.0.0.1:5000:5000"
      - "127.0.0.1:3500:3500"
    networks:
      - eth2network

  # We run a validator client with 2 deterministically-generated keys that match
  # The validator keys present in the beacon chain genesis state generated a few steps above.
  prysm_validator:
    image: "gcr.io/prysmaticlabs/prysm/validator:stable"
    command:
      - --beacon-rpc-provider=prysm_beacon_chain:5000
      - --datadir=/consensus/validatordata
      - --accept-terms-of-use
      - --interop-num-validators=64
      - --interop-start-index=0
      - --chain-config-file=/config/config.yaml
    depends_on:
      prysm_beacon_chain:
        condition: service_started
    volumes:
      - "consensus:/consensus"
      - "./config:/config"
    networks:
      - eth2network

networks:
  eth2network:
    driver: bridge

volumes:
  gethdir:
  l1keystore:
  consensus: