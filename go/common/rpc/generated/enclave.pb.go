// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: enclave.proto

package generated

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EnclavePublicConfigRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EnclavePublicConfigRequest) Reset() {
	*x = EnclavePublicConfigRequest{}
	mi := &file_enclave_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnclavePublicConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnclavePublicConfigRequest) ProtoMessage() {}

func (x *EnclavePublicConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_enclave_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnclavePublicConfigRequest.ProtoReflect.Descriptor instead.
func (*EnclavePublicConfigRequest) Descriptor() ([]byte, []int) {
	return file_enclave_proto_rawDescGZIP(), []int{0}
}

type EnclavePublicConfigResponse struct {
	state                           protoimpl.MessageState `protogen:"open.v1"`
	L2MessageBusAddress             []byte                 `protobuf:"bytes,1,opt,name=l2MessageBusAddress,proto3" json:"l2MessageBusAddress,omitempty"`
	TransactionPostProcessorAddress []byte                 `protobuf:"bytes,2,opt,name=transactionPostProcessorAddress,proto3" json:"transactionPostProcessorAddress,omitempty"`
	SystemContractsUpgraderAddress  []byte                 `protobuf:"bytes,3,opt,name=systemContractsUpgraderAddress,proto3" json:"systemContractsUpgraderAddress,omitempty"`
	PublicSystemContracts           map[string][]byte      `protobuf:"bytes,4,rep,name=publicSystemContracts,proto3" json:"publicSystemContracts,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	SystemError                     *SystemError           `protobuf:"bytes,5,opt,name=systemError,proto3" json:"systemError,omitempty"`
	unknownFields                   protoimpl.UnknownFields
	sizeCache                       protoimpl.SizeCache
}

func (x *EnclavePublicConfigResponse) Reset() {
	*x = EnclavePublicConfigResponse{}
	mi := &file_enclave_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnclavePublicConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnclavePublicConfigResponse) ProtoMessage() {}

func (x *EnclavePublicConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_enclave_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnclavePublicConfigResponse.ProtoReflect.Descriptor instead.
func (*EnclavePublicConfigResponse) Descriptor() ([]byte, []int) {
	return file_enclave_proto_rawDescGZIP(), []int{1}
}

func (x *EnclavePublicConfigResponse) GetL2MessageBusAddress() []byte {
	if x != nil {
		return x.L2MessageBusAddress
	}
	return nil
}

func (x *EnclavePublicConfigResponse) GetTransactionPostProcessorAddress() []byte {
	if x != nil {
		return x.TransactionPostProcessorAddress
	}
	return nil
}

func (x *EnclavePublicConfigResponse) GetSystemContractsUpgraderAddress() []byte {
	if x != nil {
		return x.SystemContractsUpgraderAddress
	}
	return nil
}

func (x *EnclavePublicConfigResponse) GetPublicSystemContracts() map[string][]byte {
	if x != nil {
		return x.PublicSystemContracts
	}
	return nil
}

func (x *EnclavePublicConfigResponse) GetSystemError() *SystemError {
	if x != nil {
		return x.SystemError
	}
	return nil
}

type GetBatchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	KnownHead     []byte                 `protobuf:"bytes,1,opt,name=knownHead,proto3" json:"knownHead,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBatchRequest) Reset() {
	*x = GetBatchRequest{}
	mi := &file_enclave_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBatchRequest) ProtoMessage() {}

func (x *GetBatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_enclave_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBatchRequest.ProtoReflect.Descriptor instead.
func (*GetBatchRequest) Descriptor() ([]byte, []int) {
	return file_enclave_proto_rawDescGZIP(), []int{2}
}

func (x *GetBatchRequest) GetKnownHead() []byte {
	if x != nil {
		return x.KnownHead
	}
	return nil
}

type GetBatchBySeqNoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SeqNo         uint64                 `protobuf:"varint,1,opt,name=seqNo,proto3" json:"seqNo,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBatchBySeqNoRequest) Reset() {
	*x = GetBatchBySeqNoRequest{}
	mi := &file_enclave_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBatchBySeqNoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBatchBySeqNoRequest) ProtoMessage() {}

func (x *GetBatchBySeqNoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_enclave_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBatchBySeqNoRequest.ProtoReflect.Descriptor instead.
func (*GetBatchBySeqNoRequest) Descriptor() ([]byte, []int) {
	return file_enclave_proto_rawDescGZIP(), []int{3}
}

func (x *GetBatchBySeqNoRequest) GetSeqNo() uint64 {
	if x != nil {
		return x.SeqNo
	}
	return 0
}

type GetBatchResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Batch         []byte                 `protobuf:"bytes,1,opt,name=batch,proto3" json:"batch,omitempty"`
	SystemError   *SystemError           `protobuf:"bytes,2,opt,name=systemError,proto3" json:"systemError,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBatchResponse) Reset() {
	*x = GetBatchResponse{}
	mi := &file_enclave_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBatchResponse) ProtoMessage() {}

func (x *GetBatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_enclave_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBatchResponse.ProtoReflect.Descriptor instead.
func (*GetBatchResponse) Descriptor() ([]byte, []int) {
	return file_enclave_proto_rawDescGZIP(), []int{4}
}

func (x *GetBatchResponse) GetBatch() []byte {
	if x != nil {
		return x.Batch
	}
	return nil
}

func (x *GetBatchResponse) GetSystemError() *SystemError {
	if x != nil {
		return x.SystemError
	}
	return nil
}

type GetRollupDataRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hash          []byte                 `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRollupDataRequest) Reset() {
	*x = GetRollupDataRequest{}
	mi := &file_enclave_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRollupDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRollupDataRequest) ProtoMessage() {}

func (x *GetRollupDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_enclave_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRollupDataRequest.ProtoReflect.Descriptor instead.
func (*GetRollupDataRequest) Descriptor() ([]byte, []int) {
	return file_enclave_proto_rawDescGZIP(), []int{5}
}

func (x *GetRollupDataRequest) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

type GetRollupDataResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Msg           *PublicRollupDataMsg   `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	SystemError   *SystemError           `protobuf:"bytes,2,opt,name=systemError,proto3" json:"systemError,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRollupDataResponse) Reset() {
	*x = GetRollupDataResponse{}
	mi := &file_enclave_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRollupDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRollupDataResponse) ProtoMessage() {}

func (x *GetRollupDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_enclave_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRollupDataResponse.ProtoReflect.Descriptor instead.
func (*GetRollupDataResponse) Descriptor() ([]byte, []int) {
	return file_enclave_proto_rawDescGZIP(), []int{6}
}

func (x *GetRollupDataResponse) GetMsg() *PublicRollupDataMsg {
	if x != nil {
		return x.Msg
	}
	return nil
}

func (x *GetRollupDataResponse) GetSystemError() *SystemError {
	if x != nil {
		return x.SystemError
	}
	return nil
}

type PublicRollupDataMsg struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StartSeq      uint64                 `protobuf:"varint,1,opt,name=startSeq,proto3" json:"startSeq,omitempty"`
	Timestamp     uint64                 `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublicRollupDataMsg) Reset() {
	*x = PublicRollupDataMsg{}
	mi := &file_enclave_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublicRollupDataMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicRollupDataMsg) ProtoMessage() {}

func (x *PublicRollupDataMsg) ProtoReflect() protoreflect.Message {
	mi := &file_enclave_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicRollupDataMsg.ProtoReflect.Descriptor instead.
func (*PublicRollupDataMsg) Descriptor() ([]byte, []int) {
	return file_enclave_proto_rawDescGZIP(), []int{7}
}

func (x *PublicRollupDataMsg) GetStartSeq() uint64 {
	if x != nil {
		return x.StartSeq
	}
	return 0
}

func (x *PublicRollupDataMsg) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type StreamL2UpdatesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamL2UpdatesRequest) Reset() {
	*x = StreamL2UpdatesRequest{}
	mi := &file_enclave_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamL2UpdatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamL2UpdatesRequest) ProtoMessage() {}

func (x *StreamL2UpdatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_enclave_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamL2UpdatesRequest.ProtoReflect.Descriptor instead.
func (*StreamL2UpdatesRequest) Descriptor() ([]byte, []int) {
	return file_enclave_proto_rawDescGZIP(), []int{8}
}

type EncodedUpdateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Batch         []byte                 `protobuf:"bytes,1,opt,name=batch,proto3" json:"batch,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EncodedUpdateResponse) Reset() {
	*x = EncodedUpdateResponse{}
	mi := &file_enclave_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EncodedUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncodedUpdateResponse) ProtoMessage() {}

func (x *EncodedUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_enclave_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncodedUpdateResponse.ProtoReflect.Descriptor instead.
func (*EncodedUpdateResponse) Descriptor() ([]byte, []int) {
	return file_enclave_proto_rawDescGZIP(), []int{9}
}

func (x *EncodedUpdateResponse) GetBatch() []byte {
	if x != nil {
		return x.Batch
	}
	return nil
}

type Pagination struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Offset        int32                  `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Size          int32                  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Pagination) Reset() {
	*x = Pagination{}
	mi := &file_enclave_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Pagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pagination) ProtoMessage() {}

func (x *Pagination) ProtoReflect() protoreflect.Message {
	mi := &file_enclave_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pagination.ProtoReflect.Descriptor instead.
func (*Pagination) Descriptor() ([]byte, []int) {
	return file_enclave_proto_rawDescGZIP(), []int{10}
}

func (x *Pagination) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *Pagination) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

type SystemError struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ErrorCode     int32                  `protobuf:"varint,1,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
	ErrorString   string                 `protobuf:"bytes,2,opt,name=errorString,proto3" json:"errorString,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SystemError) Reset() {
	*x = SystemError{}
	mi := &file_enclave_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemError) ProtoMessage() {}

func (x *SystemError) ProtoReflect() protoreflect.Message {
	mi := &file_enclave_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemError.ProtoReflect.Descriptor instead.
func (*SystemError) Descriptor() ([]byte, []int) {
	return file_enclave_proto_rawDescGZIP(), []int{11}
}

func (x *SystemError) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *SystemError) GetErrorString() string {
	if x != nil {
		return x.ErrorString
	}
	return ""
}

type GetTotalContractCountRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTotalContractCountRequest) Reset() {
	*x = GetTotalContractCountRequest{}
	mi := &file_enclave_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTotalContractCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTotalContractCountRequest) ProtoMessage() {}

func (x *GetTotalContractCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_enclave_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTotalContractCountRequest.ProtoReflect.Descriptor instead.
func (*GetTotalContractCountRequest) Descriptor() ([]byte, []int) {
	return file_enclave_proto_rawDescGZIP(), []int{12}
}

type GetTotalContractCountResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Count         int64                  `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	SystemError   *SystemError           `protobuf:"bytes,2,opt,name=systemError,proto3" json:"systemError,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTotalContractCountResponse) Reset() {
	*x = GetTotalContractCountResponse{}
	mi := &file_enclave_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTotalContractCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTotalContractCountResponse) ProtoMessage() {}

func (x *GetTotalContractCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_enclave_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTotalContractCountResponse.ProtoReflect.Descriptor instead.
func (*GetTotalContractCountResponse) Descriptor() ([]byte, []int) {
	return file_enclave_proto_rawDescGZIP(), []int{13}
}

func (x *GetTotalContractCountResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GetTotalContractCountResponse) GetSystemError() *SystemError {
	if x != nil {
		return x.SystemError
	}
	return nil
}

type DebugTraceTransactionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TxHash        []byte                 `protobuf:"bytes,1,opt,name=txHash,proto3" json:"txHash,omitempty"`
	Config        []byte                 `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DebugTraceTransactionRequest) Reset() {
	*x = DebugTraceTransactionRequest{}
	mi := &file_enclave_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DebugTraceTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebugTraceTransactionRequest) ProtoMessage() {}

func (x *DebugTraceTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_enclave_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebugTraceTransactionRequest.ProtoReflect.Descriptor instead.
func (*DebugTraceTransactionRequest) Descriptor() ([]byte, []int) {
	return file_enclave_proto_rawDescGZIP(), []int{14}
}

func (x *DebugTraceTransactionRequest) GetTxHash() []byte {
	if x != nil {
		return x.TxHash
	}
	return nil
}

func (x *DebugTraceTransactionRequest) GetConfig() []byte {
	if x != nil {
		return x.Config
	}
	return nil
}

type DebugTraceTransactionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Msg           string                 `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	SystemError   *SystemError           `protobuf:"bytes,2,opt,name=systemError,proto3" json:"systemError,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DebugTraceTransactionResponse) Reset() {
	*x = DebugTraceTransactionResponse{}
	mi := &file_enclave_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DebugTraceTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebugTraceTransactionResponse) ProtoMessage() {}

func (x *DebugTraceTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_enclave_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebugTraceTransactionResponse.ProtoReflect.Descriptor instead.
func (*DebugTraceTransactionResponse) Descriptor() ([]byte, []int) {
	return file_enclave_proto_rawDescGZIP(), []int{15}
}

func (x *DebugTraceTransactionResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *DebugTraceTransactionResponse) GetSystemError() *SystemError {
	if x != nil {
		return x.SystemError
	}
	return nil
}

type CreateBatchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SkipIfEmpty   bool                   `protobuf:"varint,1,opt,name=skipIfEmpty,proto3" json:"skipIfEmpty,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateBatchRequest) Reset() {
	*x = CreateBatchRequest{}
	mi := &file_enclave_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateBatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBatchRequest) ProtoMessage() {}

func (x *CreateBatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_enclave_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBatchRequest.ProtoReflect.Descriptor instead.
func (*CreateBatchRequest) Descriptor() ([]byte, []int) {
	return file_enclave_proto_rawDescGZIP(), []int{16}
}

func (x *CreateBatchRequest) GetSkipIfEmpty() bool {
	if x != nil {
		return x.SkipIfEmpty
	}
	return false
}

type CreateBatchResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateBatchResponse) Reset() {
	*x = CreateBatchResponse{}
	mi := &file_enclave_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateBatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBatchResponse) ProtoMessage() {}

func (x *CreateBatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_enclave_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBatchResponse.ProtoReflect.Descriptor instead.
func (*CreateBatchResponse) Descriptor() ([]byte, []int) {
	return file_enclave_proto_rawDescGZIP(), []int{17}
}

func (x *CreateBatchResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type CreateRollupRequest struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	FromSequenceNumber *uint64                `protobuf:"varint,1,opt,name=fromSequenceNumber,proto3,oneof" json:"fromSequenceNumber,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *CreateRollupRequest) Reset() {
	*x = CreateRollupRequest{}
	mi := &file_enclave_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRollupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRollupRequest) ProtoMessage() {}

func (x *CreateRollupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_enclave_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRollupRequest.ProtoReflect.Descriptor instead.
func (*CreateRollupRequest) Descriptor() ([]byte, []int) {
	return file_enclave_proto_rawDescGZIP(), []int{18}
}

func (x *CreateRollupRequest) GetFromSequenceNumber() uint64 {
	if x != nil && x.FromSequenceNumber != nil {
		return *x.FromSequenceNumber
	}
	return 0
}

type CreateRollupResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Signature     []byte                 `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Blobs         []*BlobMsg             `protobuf:"bytes,2,rep,name=blobs,proto3" json:"blobs,omitempty"`
	SystemError   *SystemError           `protobuf:"bytes,3,opt,name=systemError,proto3" json:"systemError,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRollupResponse) Reset() {
	*x = CreateRollupResponse{}
	mi := &file_enclave_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRollupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRollupResponse) ProtoMessage() {}

func (x *CreateRollupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_enclave_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRollupResponse.ProtoReflect.Descriptor instead.
func (*CreateRollupResponse) Descriptor() ([]byte, []int) {
	return file_enclave_proto_rawDescGZIP(), []int{19}
}

func (x *CreateRollupResponse) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *CreateRollupResponse) GetBlobs() []*BlobMsg {
	if x != nil {
		return x.Blobs
	}
	return nil
}

func (x *CreateRollupResponse) GetSystemError() *SystemError {
	if x != nil {
		return x.SystemError
	}
	return nil
}

type ExportCrossChainDataRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FromSeqNo     uint64                 `protobuf:"varint,1,opt,name=fromSeqNo,proto3" json:"fromSeqNo,omitempty"`
	ToSeqNo       uint64                 `protobuf:"varint,2,opt,name=toSeqNo,proto3" json:"toSeqNo,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExportCrossChainDataRequest) Reset() {
	*x = ExportCrossChainDataRequest{}
	mi := &file_enclave_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExportCrossChainDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportCrossChainDataRequest) ProtoMessage() {}

func (x *ExportCrossChainDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_enclave_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportCrossChainDataRequest.ProtoReflect.Descriptor instead.
func (*ExportCrossChainDataRequest) Descriptor() ([]byte, []int) {
	return file_enclave_proto_rawDescGZIP(), []int{20}
}

func (x *ExportCrossChainDataRequest) GetFromSeqNo() uint64 {
	if x != nil {
		return x.FromSeqNo
	}
	return 0
}

func (x *ExportCrossChainDataRequest) GetToSeqNo() uint64 {
	if x != nil {
		return x.ToSeqNo
	}
	return 0
}

type ExportCrossChainDataResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Msg           []byte                 `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExportCrossChainDataResponse) Reset() {
	*x = ExportCrossChainDataResponse{}
	mi := &file_enclave_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExportCrossChainDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportCrossChainDataResponse) ProtoMessage() {}

func (x *ExportCrossChainDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_enclave_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportCrossChainDataResponse.ProtoReflect.Descriptor instead.
func (*ExportCrossChainDataResponse) Descriptor() ([]byte, []int) {
	return file_enclave_proto_rawDescGZIP(), []int{21}
}

func (x *ExportCrossChainDataResponse) GetMsg() []byte {
	if x != nil {
		return x.Msg
	}
	return nil
}

type StatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatusRequest) Reset() {
	*x = StatusRequest{}
	mi := &file_enclave_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusRequest) ProtoMessage() {}

func (x *StatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_enclave_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusRequest.ProtoReflect.Descriptor instead.
func (*StatusRequest) Descriptor() ([]byte, []int) {
	return file_enclave_proto_rawDescGZIP(), []int{22}
}

type StatusResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	StatusCode        int32                  `protobuf:"varint,1,opt,name=statusCode,proto3" json:"statusCode,omitempty"`
	L1Head            []byte                 `protobuf:"bytes,2,opt,name=l1Head,proto3" json:"l1Head,omitempty"`       // hash for the L1 head block in enclave's view of the canonical chain
	L2Head            []byte                 `protobuf:"bytes,3,opt,name=l2Head,proto3" json:"l2Head,omitempty"`       // seq number (big.Int) for the L2 head batch that the enclave has seen
	EnclaveID         []byte                 `protobuf:"bytes,4,opt,name=enclaveID,proto3" json:"enclaveID,omitempty"` // enclave ID derived from the public key
	IsActiveSequencer bool                   `protobuf:"varint,5,opt,name=isActiveSequencer,proto3" json:"isActiveSequencer,omitempty"`
	SystemError       *SystemError           `protobuf:"bytes,6,opt,name=systemError,proto3" json:"systemError,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *StatusResponse) Reset() {
	*x = StatusResponse{}
	mi := &file_enclave_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusResponse) ProtoMessage() {}

func (x *StatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_enclave_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusResponse.ProtoReflect.Descriptor instead.
func (*StatusResponse) Descriptor() ([]byte, []int) {
	return file_enclave_proto_rawDescGZIP(), []int{23}
}

func (x *StatusResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *StatusResponse) GetL1Head() []byte {
	if x != nil {
		return x.L1Head
	}
	return nil
}

func (x *StatusResponse) GetL2Head() []byte {
	if x != nil {
		return x.L2Head
	}
	return nil
}

func (x *StatusResponse) GetEnclaveID() []byte {
	if x != nil {
		return x.EnclaveID
	}
	return nil
}

func (x *StatusResponse) GetIsActiveSequencer() bool {
	if x != nil {
		return x.IsActiveSequencer
	}
	return false
}

func (x *StatusResponse) GetSystemError() *SystemError {
	if x != nil {
		return x.SystemError
	}
	return nil
}

type MakeActiveRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MakeActiveRequest) Reset() {
	*x = MakeActiveRequest{}
	mi := &file_enclave_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MakeActiveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MakeActiveRequest) ProtoMessage() {}

func (x *MakeActiveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_enclave_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MakeActiveRequest.ProtoReflect.Descriptor instead.
func (*MakeActiveRequest) Descriptor() ([]byte, []int) {
	return file_enclave_proto_rawDescGZIP(), []int{24}
}

type MakeActiveResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SystemError   *SystemError           `protobuf:"bytes,1,opt,name=systemError,proto3" json:"systemError,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MakeActiveResponse) Reset() {
	*x = MakeActiveResponse{}
	mi := &file_enclave_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MakeActiveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MakeActiveResponse) ProtoMessage() {}

func (x *MakeActiveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_enclave_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MakeActiveResponse.ProtoReflect.Descriptor instead.
func (*MakeActiveResponse) Descriptor() ([]byte, []int) {
	return file_enclave_proto_rawDescGZIP(), []int{25}
}

func (x *MakeActiveResponse) GetSystemError() *SystemError {
	if x != nil {
		return x.SystemError
	}
	return nil
}

type AttestationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AttestationRequest) Reset() {
	*x = AttestationRequest{}
	mi := &file_enclave_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AttestationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttestationRequest) ProtoMessage() {}

func (x *AttestationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_enclave_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttestationRequest.ProtoReflect.Descriptor instead.
func (*AttestationRequest) Descriptor() ([]byte, []int) {
	return file_enclave_proto_rawDescGZIP(), []int{26}
}

type AttestationResponse struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	AttestationReportMsg *AttestationReportMsg  `protobuf:"bytes,1,opt,name=attestationReportMsg,proto3" json:"attestationReportMsg,omitempty"`
	SystemError          *SystemError           `protobuf:"bytes,2,opt,name=systemError,proto3" json:"systemError,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *AttestationResponse) Reset() {
	*x = AttestationResponse{}
	mi := &file_enclave_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AttestationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttestationResponse) ProtoMessage() {}

func (x *AttestationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_enclave_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttestationResponse.ProtoReflect.Descriptor instead.
func (*AttestationResponse) Descriptor() ([]byte, []int) {
	return file_enclave_proto_rawDescGZIP(), []int{27}
}

func (x *AttestationResponse) GetAttestationReportMsg() *AttestationReportMsg {
	if x != nil {
		return x.AttestationReportMsg
	}
	return nil
}

func (x *AttestationResponse) GetSystemError() *SystemError {
	if x != nil {
		return x.SystemError
	}
	return nil
}

type GenerateSecretRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenerateSecretRequest) Reset() {
	*x = GenerateSecretRequest{}
	mi := &file_enclave_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateSecretRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateSecretRequest) ProtoMessage() {}

func (x *GenerateSecretRequest) ProtoReflect() protoreflect.Message {
	mi := &file_enclave_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateSecretRequest.ProtoReflect.Descriptor instead.
func (*GenerateSecretRequest) Descriptor() ([]byte, []int) {
	return file_enclave_proto_rawDescGZIP(), []int{28}
}

type GenerateSecretResponse struct {
	state                        protoimpl.MessageState `protogen:"open.v1"`
	EncryptedSharedEnclaveSecret []byte                 `protobuf:"bytes,1,opt,name=encryptedSharedEnclaveSecret,proto3" json:"encryptedSharedEnclaveSecret,omitempty"`
	SystemError                  *SystemError           `protobuf:"bytes,2,opt,name=systemError,proto3" json:"systemError,omitempty"`
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *GenerateSecretResponse) Reset() {
	*x = GenerateSecretResponse{}
	mi := &file_enclave_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateSecretResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateSecretResponse) ProtoMessage() {}

func (x *GenerateSecretResponse) ProtoReflect() protoreflect.Message {
	mi := &file_enclave_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateSecretResponse.ProtoReflect.Descriptor instead.
func (*GenerateSecretResponse) Descriptor() ([]byte, []int) {
	return file_enclave_proto_rawDescGZIP(), []int{29}
}

func (x *GenerateSecretResponse) GetEncryptedSharedEnclaveSecret() []byte {
	if x != nil {
		return x.EncryptedSharedEnclaveSecret
	}
	return nil
}

func (x *GenerateSecretResponse) GetSystemError() *SystemError {
	if x != nil {
		return x.SystemError
	}
	return nil
}

type InitEnclaveRequest struct {
	state                        protoimpl.MessageState `protogen:"open.v1"`
	EncryptedSharedEnclaveSecret []byte                 `protobuf:"bytes,1,opt,name=encryptedSharedEnclaveSecret,proto3" json:"encryptedSharedEnclaveSecret,omitempty"`
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *InitEnclaveRequest) Reset() {
	*x = InitEnclaveRequest{}
	mi := &file_enclave_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitEnclaveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitEnclaveRequest) ProtoMessage() {}

func (x *InitEnclaveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_enclave_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitEnclaveRequest.ProtoReflect.Descriptor instead.
func (*InitEnclaveRequest) Descriptor() ([]byte, []int) {
	return file_enclave_proto_rawDescGZIP(), []int{30}
}

func (x *InitEnclaveRequest) GetEncryptedSharedEnclaveSecret() []byte {
	if x != nil {
		return x.EncryptedSharedEnclaveSecret
	}
	return nil
}

type InitEnclaveResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SystemError   *SystemError           `protobuf:"bytes,1,opt,name=systemError,proto3" json:"systemError,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InitEnclaveResponse) Reset() {
	*x = InitEnclaveResponse{}
	mi := &file_enclave_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitEnclaveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitEnclaveResponse) ProtoMessage() {}

func (x *InitEnclaveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_enclave_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitEnclaveResponse.ProtoReflect.Descriptor instead.
func (*InitEnclaveResponse) Descriptor() ([]byte, []int) {
	return file_enclave_proto_rawDescGZIP(), []int{31}
}

func (x *InitEnclaveResponse) GetSystemError() *SystemError {
	if x != nil {
		return x.SystemError
	}
	return nil
}

type EnclaveIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EnclaveIDRequest) Reset() {
	*x = EnclaveIDRequest{}
	mi := &file_enclave_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnclaveIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnclaveIDRequest) ProtoMessage() {}

func (x *EnclaveIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_enclave_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnclaveIDRequest.ProtoReflect.Descriptor instead.
func (*EnclaveIDRequest) Descriptor() ([]byte, []int) {
	return file_enclave_proto_rawDescGZIP(), []int{32}
}

type EnclaveIDResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EnclaveID     []byte                 `protobuf:"bytes,1,opt,name=enclaveID,proto3" json:"enclaveID,omitempty"`
	SystemError   *SystemError           `protobuf:"bytes,2,opt,name=systemError,proto3" json:"systemError,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EnclaveIDResponse) Reset() {
	*x = EnclaveIDResponse{}
	mi := &file_enclave_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnclaveIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnclaveIDResponse) ProtoMessage() {}

func (x *EnclaveIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_enclave_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnclaveIDResponse.ProtoReflect.Descriptor instead.
func (*EnclaveIDResponse) Descriptor() ([]byte, []int) {
	return file_enclave_proto_rawDescGZIP(), []int{33}
}

func (x *EnclaveIDResponse) GetEnclaveID() []byte {
	if x != nil {
		return x.EnclaveID
	}
	return nil
}

func (x *EnclaveIDResponse) GetSystemError() *SystemError {
	if x != nil {
		return x.SystemError
	}
	return nil
}

type RPCEncryptionKeyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RPCEncryptionKeyRequest) Reset() {
	*x = RPCEncryptionKeyRequest{}
	mi := &file_enclave_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RPCEncryptionKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RPCEncryptionKeyRequest) ProtoMessage() {}

func (x *RPCEncryptionKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_enclave_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RPCEncryptionKeyRequest.ProtoReflect.Descriptor instead.
func (*RPCEncryptionKeyRequest) Descriptor() ([]byte, []int) {
	return file_enclave_proto_rawDescGZIP(), []int{34}
}

type RPCEncryptionKeyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RpcPubKey     []byte                 `protobuf:"bytes,1,opt,name=rpcPubKey,proto3" json:"rpcPubKey,omitempty"`
	SystemError   *SystemError           `protobuf:"bytes,2,opt,name=systemError,proto3" json:"systemError,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RPCEncryptionKeyResponse) Reset() {
	*x = RPCEncryptionKeyResponse{}
	mi := &file_enclave_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RPCEncryptionKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RPCEncryptionKeyResponse) ProtoMessage() {}

func (x *RPCEncryptionKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_enclave_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RPCEncryptionKeyResponse.ProtoReflect.Descriptor instead.
func (*RPCEncryptionKeyResponse) Descriptor() ([]byte, []int) {
	return file_enclave_proto_rawDescGZIP(), []int{35}
}

func (x *RPCEncryptionKeyResponse) GetRpcPubKey() []byte {
	if x != nil {
		return x.RpcPubKey
	}
	return nil
}

func (x *RPCEncryptionKeyResponse) GetSystemError() *SystemError {
	if x != nil {
		return x.SystemError
	}
	return nil
}

type StartRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EncodedBlock  []byte                 `protobuf:"bytes,1,opt,name=encodedBlock,proto3" json:"encodedBlock,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartRequest) Reset() {
	*x = StartRequest{}
	mi := &file_enclave_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartRequest) ProtoMessage() {}

func (x *StartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_enclave_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartRequest.ProtoReflect.Descriptor instead.
func (*StartRequest) Descriptor() ([]byte, []int) {
	return file_enclave_proto_rawDescGZIP(), []int{36}
}

func (x *StartRequest) GetEncodedBlock() []byte {
	if x != nil {
		return x.EncodedBlock
	}
	return nil
}

type StartResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SystemError   *SystemError           `protobuf:"bytes,1,opt,name=systemError,proto3" json:"systemError,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartResponse) Reset() {
	*x = StartResponse{}
	mi := &file_enclave_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartResponse) ProtoMessage() {}

func (x *StartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_enclave_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartResponse.ProtoReflect.Descriptor instead.
func (*StartResponse) Descriptor() ([]byte, []int) {
	return file_enclave_proto_rawDescGZIP(), []int{37}
}

func (x *StartResponse) GetSystemError() *SystemError {
	if x != nil {
		return x.SystemError
	}
	return nil
}

type SubmitBlockRequest struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	EncodedBlock         []byte                 `protobuf:"bytes,1,opt,name=encodedBlock,proto3" json:"encodedBlock,omitempty"`
	EncodedProcessedData []byte                 `protobuf:"bytes,2,opt,name=encodedProcessedData,proto3" json:"encodedProcessedData,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *SubmitBlockRequest) Reset() {
	*x = SubmitBlockRequest{}
	mi := &file_enclave_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitBlockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitBlockRequest) ProtoMessage() {}

func (x *SubmitBlockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_enclave_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitBlockRequest.ProtoReflect.Descriptor instead.
func (*SubmitBlockRequest) Descriptor() ([]byte, []int) {
	return file_enclave_proto_rawDescGZIP(), []int{38}
}

func (x *SubmitBlockRequest) GetEncodedBlock() []byte {
	if x != nil {
		return x.EncodedBlock
	}
	return nil
}

func (x *SubmitBlockRequest) GetEncodedProcessedData() []byte {
	if x != nil {
		return x.EncodedProcessedData
	}
	return nil
}

type SubmitBlockResponse struct {
	state                   protoimpl.MessageState      `protogen:"open.v1"`
	BlockSubmissionResponse *BlockSubmissionResponseMsg `protobuf:"bytes,1,opt,name=blockSubmissionResponse,proto3" json:"blockSubmissionResponse,omitempty"`
	SystemError             *SystemError                `protobuf:"bytes,2,opt,name=systemError,proto3" json:"systemError,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *SubmitBlockResponse) Reset() {
	*x = SubmitBlockResponse{}
	mi := &file_enclave_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitBlockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitBlockResponse) ProtoMessage() {}

func (x *SubmitBlockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_enclave_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitBlockResponse.ProtoReflect.Descriptor instead.
func (*SubmitBlockResponse) Descriptor() ([]byte, []int) {
	return file_enclave_proto_rawDescGZIP(), []int{39}
}

func (x *SubmitBlockResponse) GetBlockSubmissionResponse() *BlockSubmissionResponseMsg {
	if x != nil {
		return x.BlockSubmissionResponse
	}
	return nil
}

func (x *SubmitBlockResponse) GetSystemError() *SystemError {
	if x != nil {
		return x.SystemError
	}
	return nil
}

type EncCallRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	EncryptedParams []byte                 `protobuf:"bytes,1,opt,name=encryptedParams,proto3" json:"encryptedParams,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *EncCallRequest) Reset() {
	*x = EncCallRequest{}
	mi := &file_enclave_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EncCallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncCallRequest) ProtoMessage() {}

func (x *EncCallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_enclave_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncCallRequest.ProtoReflect.Descriptor instead.
func (*EncCallRequest) Descriptor() ([]byte, []int) {
	return file_enclave_proto_rawDescGZIP(), []int{40}
}

func (x *EncCallRequest) GetEncryptedParams() []byte {
	if x != nil {
		return x.EncryptedParams
	}
	return nil
}

type EncCallResponse struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	EncodedEnclaveResponse []byte                 `protobuf:"bytes,1,opt,name=encodedEnclaveResponse,proto3" json:"encodedEnclaveResponse,omitempty"`
	SystemError            *SystemError           `protobuf:"bytes,2,opt,name=systemError,proto3" json:"systemError,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *EncCallResponse) Reset() {
	*x = EncCallResponse{}
	mi := &file_enclave_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EncCallResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncCallResponse) ProtoMessage() {}

func (x *EncCallResponse) ProtoReflect() protoreflect.Message {
	mi := &file_enclave_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncCallResponse.ProtoReflect.Descriptor instead.
func (*EncCallResponse) Descriptor() ([]byte, []int) {
	return file_enclave_proto_rawDescGZIP(), []int{41}
}

func (x *EncCallResponse) GetEncodedEnclaveResponse() []byte {
	if x != nil {
		return x.EncodedEnclaveResponse
	}
	return nil
}

func (x *EncCallResponse) GetSystemError() *SystemError {
	if x != nil {
		return x.SystemError
	}
	return nil
}

type SubmitBatchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Batch         *ExtBatchMsg           `protobuf:"bytes,1,opt,name=batch,proto3" json:"batch,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitBatchRequest) Reset() {
	*x = SubmitBatchRequest{}
	mi := &file_enclave_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitBatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitBatchRequest) ProtoMessage() {}

func (x *SubmitBatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_enclave_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitBatchRequest.ProtoReflect.Descriptor instead.
func (*SubmitBatchRequest) Descriptor() ([]byte, []int) {
	return file_enclave_proto_rawDescGZIP(), []int{42}
}

func (x *SubmitBatchRequest) GetBatch() *ExtBatchMsg {
	if x != nil {
		return x.Batch
	}
	return nil
}

type SubmitBatchResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SystemError   *SystemError           `protobuf:"bytes,1,opt,name=systemError,proto3" json:"systemError,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitBatchResponse) Reset() {
	*x = SubmitBatchResponse{}
	mi := &file_enclave_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitBatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitBatchResponse) ProtoMessage() {}

func (x *SubmitBatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_enclave_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitBatchResponse.ProtoReflect.Descriptor instead.
func (*SubmitBatchResponse) Descriptor() ([]byte, []int) {
	return file_enclave_proto_rawDescGZIP(), []int{43}
}

func (x *SubmitBatchResponse) GetSystemError() *SystemError {
	if x != nil {
		return x.SystemError
	}
	return nil
}

type StopRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopRequest) Reset() {
	*x = StopRequest{}
	mi := &file_enclave_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopRequest) ProtoMessage() {}

func (x *StopRequest) ProtoReflect() protoreflect.Message {
	mi := &file_enclave_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopRequest.ProtoReflect.Descriptor instead.
func (*StopRequest) Descriptor() ([]byte, []int) {
	return file_enclave_proto_rawDescGZIP(), []int{44}
}

type StopResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SystemError   *SystemError           `protobuf:"bytes,1,opt,name=systemError,proto3" json:"systemError,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopResponse) Reset() {
	*x = StopResponse{}
	mi := &file_enclave_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopResponse) ProtoMessage() {}

func (x *StopResponse) ProtoReflect() protoreflect.Message {
	mi := &file_enclave_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopResponse.ProtoReflect.Descriptor instead.
func (*StopResponse) Descriptor() ([]byte, []int) {
	return file_enclave_proto_rawDescGZIP(), []int{45}
}

func (x *StopResponse) GetSystemError() *SystemError {
	if x != nil {
		return x.SystemError
	}
	return nil
}

type GetCodeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       []byte                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	BlockNrOrHash []byte                 `protobuf:"bytes,2,opt,name=blockNrOrHash,proto3" json:"blockNrOrHash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCodeRequest) Reset() {
	*x = GetCodeRequest{}
	mi := &file_enclave_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCodeRequest) ProtoMessage() {}

func (x *GetCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_enclave_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCodeRequest.ProtoReflect.Descriptor instead.
func (*GetCodeRequest) Descriptor() ([]byte, []int) {
	return file_enclave_proto_rawDescGZIP(), []int{46}
}

func (x *GetCodeRequest) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *GetCodeRequest) GetBlockNrOrHash() []byte {
	if x != nil {
		return x.BlockNrOrHash
	}
	return nil
}

type GetCodeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          []byte                 `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	SystemError   *SystemError           `protobuf:"bytes,2,opt,name=systemError,proto3" json:"systemError,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCodeResponse) Reset() {
	*x = GetCodeResponse{}
	mi := &file_enclave_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCodeResponse) ProtoMessage() {}

func (x *GetCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_enclave_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCodeResponse.ProtoReflect.Descriptor instead.
func (*GetCodeResponse) Descriptor() ([]byte, []int) {
	return file_enclave_proto_rawDescGZIP(), []int{47}
}

func (x *GetCodeResponse) GetCode() []byte {
	if x != nil {
		return x.Code
	}
	return nil
}

func (x *GetCodeResponse) GetSystemError() *SystemError {
	if x != nil {
		return x.SystemError
	}
	return nil
}

type SubscribeRequest struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	Id                    []byte                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	EncryptedSubscription []byte                 `protobuf:"bytes,2,opt,name=encryptedSubscription,proto3" json:"encryptedSubscription,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *SubscribeRequest) Reset() {
	*x = SubscribeRequest{}
	mi := &file_enclave_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeRequest) ProtoMessage() {}

func (x *SubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_enclave_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeRequest.ProtoReflect.Descriptor instead.
func (*SubscribeRequest) Descriptor() ([]byte, []int) {
	return file_enclave_proto_rawDescGZIP(), []int{48}
}

func (x *SubscribeRequest) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *SubscribeRequest) GetEncryptedSubscription() []byte {
	if x != nil {
		return x.EncryptedSubscription
	}
	return nil
}

type SubscribeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SystemError   *SystemError           `protobuf:"bytes,2,opt,name=systemError,proto3" json:"systemError,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeResponse) Reset() {
	*x = SubscribeResponse{}
	mi := &file_enclave_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeResponse) ProtoMessage() {}

func (x *SubscribeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_enclave_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeResponse.ProtoReflect.Descriptor instead.
func (*SubscribeResponse) Descriptor() ([]byte, []int) {
	return file_enclave_proto_rawDescGZIP(), []int{49}
}

func (x *SubscribeResponse) GetSystemError() *SystemError {
	if x != nil {
		return x.SystemError
	}
	return nil
}

type UnsubscribeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            []byte                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnsubscribeRequest) Reset() {
	*x = UnsubscribeRequest{}
	mi := &file_enclave_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnsubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubscribeRequest) ProtoMessage() {}

func (x *UnsubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_enclave_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubscribeRequest.ProtoReflect.Descriptor instead.
func (*UnsubscribeRequest) Descriptor() ([]byte, []int) {
	return file_enclave_proto_rawDescGZIP(), []int{50}
}

func (x *UnsubscribeRequest) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

type UnsubscribeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SystemError   *SystemError           `protobuf:"bytes,2,opt,name=systemError,proto3" json:"systemError,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnsubscribeResponse) Reset() {
	*x = UnsubscribeResponse{}
	mi := &file_enclave_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnsubscribeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubscribeResponse) ProtoMessage() {}

func (x *UnsubscribeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_enclave_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubscribeResponse.ProtoReflect.Descriptor instead.
func (*UnsubscribeResponse) Descriptor() ([]byte, []int) {
	return file_enclave_proto_rawDescGZIP(), []int{51}
}

func (x *UnsubscribeResponse) GetSystemError() *SystemError {
	if x != nil {
		return x.SystemError
	}
	return nil
}

type HealthCheckResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        bool                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	SystemError   *SystemError           `protobuf:"bytes,2,opt,name=systemError,proto3" json:"systemError,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	mi := &file_enclave_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_enclave_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_enclave_proto_rawDescGZIP(), []int{52}
}

func (x *HealthCheckResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *HealthCheckResponse) GetSystemError() *SystemError {
	if x != nil {
		return x.SystemError
	}
	return nil
}

type EmptyArgs struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EmptyArgs) Reset() {
	*x = EmptyArgs{}
	mi := &file_enclave_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmptyArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyArgs) ProtoMessage() {}

func (x *EmptyArgs) ProtoReflect() protoreflect.Message {
	mi := &file_enclave_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyArgs.ProtoReflect.Descriptor instead.
func (*EmptyArgs) Descriptor() ([]byte, []int) {
	return file_enclave_proto_rawDescGZIP(), []int{53}
}

type AttestationReportMsg struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Report        []byte                 `protobuf:"bytes,1,opt,name=Report,proto3" json:"Report,omitempty"` // The actual report bytes so it can be shared and verified by other nodes
	PubKey        []byte                 `protobuf:"bytes,2,opt,name=PubKey,proto3" json:"PubKey,omitempty"` // Public key to encrypt traffic back to this enclave
	EnclaveID     []byte                 `protobuf:"bytes,3,opt,name=EnclaveID,proto3" json:"EnclaveID,omitempty"`
	HostAddress   string                 `protobuf:"bytes,4,opt,name=HostAddress,proto3" json:"HostAddress,omitempty"` // The IP address on which the host can be contacted by other Obscuro hosts for peer-to-peer communication
	SystemError   *SystemError           `protobuf:"bytes,5,opt,name=systemError,proto3" json:"systemError,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AttestationReportMsg) Reset() {
	*x = AttestationReportMsg{}
	mi := &file_enclave_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AttestationReportMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttestationReportMsg) ProtoMessage() {}

func (x *AttestationReportMsg) ProtoReflect() protoreflect.Message {
	mi := &file_enclave_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttestationReportMsg.ProtoReflect.Descriptor instead.
func (*AttestationReportMsg) Descriptor() ([]byte, []int) {
	return file_enclave_proto_rawDescGZIP(), []int{54}
}

func (x *AttestationReportMsg) GetReport() []byte {
	if x != nil {
		return x.Report
	}
	return nil
}

func (x *AttestationReportMsg) GetPubKey() []byte {
	if x != nil {
		return x.PubKey
	}
	return nil
}

func (x *AttestationReportMsg) GetEnclaveID() []byte {
	if x != nil {
		return x.EnclaveID
	}
	return nil
}

func (x *AttestationReportMsg) GetHostAddress() string {
	if x != nil {
		return x.HostAddress
	}
	return ""
}

func (x *AttestationReportMsg) GetSystemError() *SystemError {
	if x != nil {
		return x.SystemError
	}
	return nil
}

type ExtRollupMetadataResponseMsg struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	CrossChainTree []byte                 `protobuf:"bytes,1,opt,name=CrossChainTree,proto3" json:"CrossChainTree,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ExtRollupMetadataResponseMsg) Reset() {
	*x = ExtRollupMetadataResponseMsg{}
	mi := &file_enclave_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExtRollupMetadataResponseMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtRollupMetadataResponseMsg) ProtoMessage() {}

func (x *ExtRollupMetadataResponseMsg) ProtoReflect() protoreflect.Message {
	mi := &file_enclave_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtRollupMetadataResponseMsg.ProtoReflect.Descriptor instead.
func (*ExtRollupMetadataResponseMsg) Descriptor() ([]byte, []int) {
	return file_enclave_proto_rawDescGZIP(), []int{55}
}

func (x *ExtRollupMetadataResponseMsg) GetCrossChainTree() []byte {
	if x != nil {
		return x.CrossChainTree
	}
	return nil
}

type BlockSubmissionResponseMsg struct {
	state                   protoimpl.MessageState          `protogen:"open.v1"`
	ProducedSecretResponses []*SecretResponseMsg            `protobuf:"bytes,1,rep,name=producedSecretResponses,proto3" json:"producedSecretResponses,omitempty"`
	Error                   *BlockSubmissionErrorMsg        `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"` // todo (@matt) - remove this BlockSubmissionError field once we are using the Status() to update host view of enclave state
	RollupMetadata          []*ExtRollupMetadataResponseMsg `protobuf:"bytes,3,rep,name=rollupMetadata,proto3" json:"rollupMetadata,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *BlockSubmissionResponseMsg) Reset() {
	*x = BlockSubmissionResponseMsg{}
	mi := &file_enclave_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlockSubmissionResponseMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockSubmissionResponseMsg) ProtoMessage() {}

func (x *BlockSubmissionResponseMsg) ProtoReflect() protoreflect.Message {
	mi := &file_enclave_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockSubmissionResponseMsg.ProtoReflect.Descriptor instead.
func (*BlockSubmissionResponseMsg) Descriptor() ([]byte, []int) {
	return file_enclave_proto_rawDescGZIP(), []int{56}
}

func (x *BlockSubmissionResponseMsg) GetProducedSecretResponses() []*SecretResponseMsg {
	if x != nil {
		return x.ProducedSecretResponses
	}
	return nil
}

func (x *BlockSubmissionResponseMsg) GetError() *BlockSubmissionErrorMsg {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *BlockSubmissionResponseMsg) GetRollupMetadata() []*ExtRollupMetadataResponseMsg {
	if x != nil {
		return x.RollupMetadata
	}
	return nil
}

type BlockSubmissionErrorMsg struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cause         string                 `protobuf:"bytes,1,opt,name=cause,proto3" json:"cause,omitempty"`   // error cause description
	L1Head        []byte                 `protobuf:"bytes,2,opt,name=l1Head,proto3" json:"l1Head,omitempty"` // hash for the L1 head block in enclave's view of the canonical chain
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BlockSubmissionErrorMsg) Reset() {
	*x = BlockSubmissionErrorMsg{}
	mi := &file_enclave_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlockSubmissionErrorMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockSubmissionErrorMsg) ProtoMessage() {}

func (x *BlockSubmissionErrorMsg) ProtoReflect() protoreflect.Message {
	mi := &file_enclave_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockSubmissionErrorMsg.ProtoReflect.Descriptor instead.
func (*BlockSubmissionErrorMsg) Descriptor() ([]byte, []int) {
	return file_enclave_proto_rawDescGZIP(), []int{57}
}

func (x *BlockSubmissionErrorMsg) GetCause() string {
	if x != nil {
		return x.Cause
	}
	return ""
}

func (x *BlockSubmissionErrorMsg) GetL1Head() []byte {
	if x != nil {
		return x.L1Head
	}
	return nil
}

type CrossChainMsg struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sender        []byte                 `protobuf:"bytes,1,opt,name=Sender,proto3" json:"Sender,omitempty"`
	Sequence      uint64                 `protobuf:"varint,2,opt,name=Sequence,proto3" json:"Sequence,omitempty"`
	Nonce         uint64                 `protobuf:"varint,3,opt,name=Nonce,proto3" json:"Nonce,omitempty"`
	Topic         uint32                 `protobuf:"varint,4,opt,name=Topic,proto3" json:"Topic,omitempty"`
	Payload       []byte                 `protobuf:"bytes,5,opt,name=Payload,proto3" json:"Payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CrossChainMsg) Reset() {
	*x = CrossChainMsg{}
	mi := &file_enclave_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CrossChainMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrossChainMsg) ProtoMessage() {}

func (x *CrossChainMsg) ProtoReflect() protoreflect.Message {
	mi := &file_enclave_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CrossChainMsg.ProtoReflect.Descriptor instead.
func (*CrossChainMsg) Descriptor() ([]byte, []int) {
	return file_enclave_proto_rawDescGZIP(), []int{58}
}

func (x *CrossChainMsg) GetSender() []byte {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *CrossChainMsg) GetSequence() uint64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *CrossChainMsg) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *CrossChainMsg) GetTopic() uint32 {
	if x != nil {
		return x.Topic
	}
	return 0
}

func (x *CrossChainMsg) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

type ExtBatchMsg struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Header        *BatchHeaderMsg        `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	TxHashes      [][]byte               `protobuf:"bytes,2,rep,name=txHashes,proto3" json:"txHashes,omitempty"`
	Txs           []byte                 `protobuf:"bytes,3,opt,name=txs,proto3" json:"txs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExtBatchMsg) Reset() {
	*x = ExtBatchMsg{}
	mi := &file_enclave_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExtBatchMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtBatchMsg) ProtoMessage() {}

func (x *ExtBatchMsg) ProtoReflect() protoreflect.Message {
	mi := &file_enclave_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtBatchMsg.ProtoReflect.Descriptor instead.
func (*ExtBatchMsg) Descriptor() ([]byte, []int) {
	return file_enclave_proto_rawDescGZIP(), []int{59}
}

func (x *ExtBatchMsg) GetHeader() *BatchHeaderMsg {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *ExtBatchMsg) GetTxHashes() [][]byte {
	if x != nil {
		return x.TxHashes
	}
	return nil
}

func (x *ExtBatchMsg) GetTxs() []byte {
	if x != nil {
		return x.Txs
	}
	return nil
}

type BatchHeaderMsg struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ParentHash       []byte                 `protobuf:"bytes,1,opt,name=ParentHash,proto3" json:"ParentHash,omitempty"`
	Proof            []byte                 `protobuf:"bytes,2,opt,name=Proof,proto3" json:"Proof,omitempty"`
	Root             []byte                 `protobuf:"bytes,3,opt,name=Root,proto3" json:"Root,omitempty"`
	TxHash           []byte                 `protobuf:"bytes,4,opt,name=TxHash,proto3" json:"TxHash,omitempty"`
	Number           uint64                 `protobuf:"varint,5,opt,name=Number,proto3" json:"Number,omitempty"`
	SequencerOrderNo uint64                 `protobuf:"varint,6,opt,name=SequencerOrderNo,proto3" json:"SequencerOrderNo,omitempty"`
	ReceiptHash      []byte                 `protobuf:"bytes,7,opt,name=ReceiptHash,proto3" json:"ReceiptHash,omitempty"`
	Extra            []byte                 `protobuf:"bytes,8,opt,name=Extra,proto3" json:"Extra,omitempty"`
	Signature        []byte                 `protobuf:"bytes,9,opt,name=Signature,proto3" json:"Signature,omitempty"`
	GasLimit         uint64                 `protobuf:"varint,10,opt,name=GasLimit,proto3" json:"GasLimit,omitempty"`
	GasUsed          uint64                 `protobuf:"varint,11,opt,name=GasUsed,proto3" json:"GasUsed,omitempty"`
	Time             uint64                 `protobuf:"varint,12,opt,name=Time,proto3" json:"Time,omitempty"`
	BaseFee          uint64                 `protobuf:"varint,13,opt,name=BaseFee,proto3" json:"BaseFee,omitempty"`
	CrossChainRoot   []byte                 `protobuf:"bytes,17,opt,name=CrossChainRoot,proto3" json:"CrossChainRoot,omitempty"`
	Coinbase         []byte                 `protobuf:"bytes,18,opt,name=Coinbase,proto3" json:"Coinbase,omitempty"`
	CrossChainTree   []byte                 `protobuf:"bytes,19,opt,name=CrossChainTree,proto3" json:"CrossChainTree,omitempty"`
	PayloadHash      []byte                 `protobuf:"bytes,20,opt,name=PayloadHash,proto3" json:"PayloadHash,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *BatchHeaderMsg) Reset() {
	*x = BatchHeaderMsg{}
	mi := &file_enclave_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchHeaderMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchHeaderMsg) ProtoMessage() {}

func (x *BatchHeaderMsg) ProtoReflect() protoreflect.Message {
	mi := &file_enclave_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchHeaderMsg.ProtoReflect.Descriptor instead.
func (*BatchHeaderMsg) Descriptor() ([]byte, []int) {
	return file_enclave_proto_rawDescGZIP(), []int{60}
}

func (x *BatchHeaderMsg) GetParentHash() []byte {
	if x != nil {
		return x.ParentHash
	}
	return nil
}

func (x *BatchHeaderMsg) GetProof() []byte {
	if x != nil {
		return x.Proof
	}
	return nil
}

func (x *BatchHeaderMsg) GetRoot() []byte {
	if x != nil {
		return x.Root
	}
	return nil
}

func (x *BatchHeaderMsg) GetTxHash() []byte {
	if x != nil {
		return x.TxHash
	}
	return nil
}

func (x *BatchHeaderMsg) GetNumber() uint64 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *BatchHeaderMsg) GetSequencerOrderNo() uint64 {
	if x != nil {
		return x.SequencerOrderNo
	}
	return 0
}

func (x *BatchHeaderMsg) GetReceiptHash() []byte {
	if x != nil {
		return x.ReceiptHash
	}
	return nil
}

func (x *BatchHeaderMsg) GetExtra() []byte {
	if x != nil {
		return x.Extra
	}
	return nil
}

func (x *BatchHeaderMsg) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *BatchHeaderMsg) GetGasLimit() uint64 {
	if x != nil {
		return x.GasLimit
	}
	return 0
}

func (x *BatchHeaderMsg) GetGasUsed() uint64 {
	if x != nil {
		return x.GasUsed
	}
	return 0
}

func (x *BatchHeaderMsg) GetTime() uint64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *BatchHeaderMsg) GetBaseFee() uint64 {
	if x != nil {
		return x.BaseFee
	}
	return 0
}

func (x *BatchHeaderMsg) GetCrossChainRoot() []byte {
	if x != nil {
		return x.CrossChainRoot
	}
	return nil
}

func (x *BatchHeaderMsg) GetCoinbase() []byte {
	if x != nil {
		return x.Coinbase
	}
	return nil
}

func (x *BatchHeaderMsg) GetCrossChainTree() []byte {
	if x != nil {
		return x.CrossChainTree
	}
	return nil
}

func (x *BatchHeaderMsg) GetPayloadHash() []byte {
	if x != nil {
		return x.PayloadHash
	}
	return nil
}

type ExtRollupMsg struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Header               *RollupHeaderMsg       `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	BatchPayloads        []byte                 `protobuf:"bytes,2,opt,name=batchPayloads,proto3" json:"batchPayloads,omitempty"`
	CalldataRollupHeader []byte                 `protobuf:"bytes,3,opt,name=calldataRollupHeader,proto3" json:"calldataRollupHeader,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ExtRollupMsg) Reset() {
	*x = ExtRollupMsg{}
	mi := &file_enclave_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExtRollupMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtRollupMsg) ProtoMessage() {}

func (x *ExtRollupMsg) ProtoReflect() protoreflect.Message {
	mi := &file_enclave_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtRollupMsg.ProtoReflect.Descriptor instead.
func (*ExtRollupMsg) Descriptor() ([]byte, []int) {
	return file_enclave_proto_rawDescGZIP(), []int{61}
}

func (x *ExtRollupMsg) GetHeader() *RollupHeaderMsg {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *ExtRollupMsg) GetBatchPayloads() []byte {
	if x != nil {
		return x.BatchPayloads
	}
	return nil
}

func (x *ExtRollupMsg) GetCalldataRollupHeader() []byte {
	if x != nil {
		return x.CalldataRollupHeader
	}
	return nil
}

type RollupHeaderMsg struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	ParentHash          []byte                 `protobuf:"bytes,1,opt,name=ParentHash,proto3" json:"ParentHash,omitempty"`
	CompressionL1Head   []byte                 `protobuf:"bytes,2,opt,name=CompressionL1Head,proto3" json:"CompressionL1Head,omitempty"`
	CompressionL1Number []byte                 `protobuf:"bytes,3,opt,name=CompressionL1Number,proto3" json:"CompressionL1Number,omitempty"`
	ProofNumber         uint64                 `protobuf:"varint,4,opt,name=ProofNumber,proto3" json:"ProofNumber,omitempty"`
	Number              uint64                 `protobuf:"varint,5,opt,name=Number,proto3" json:"Number,omitempty"`
	Time                uint64                 `protobuf:"varint,6,opt,name=Time,proto3" json:"Time,omitempty"`
	EnclaveID           []byte                 `protobuf:"bytes,7,opt,name=EnclaveID,proto3" json:"EnclaveID,omitempty"`
	LastBatchHash       []byte                 `protobuf:"bytes,8,opt,name=LastBatchHash,proto3" json:"LastBatchHash,omitempty"`
	FirstBatchSeqNo     uint64                 `protobuf:"varint,9,opt,name=FirstBatchSeqNo,proto3" json:"FirstBatchSeqNo,omitempty"`
	LastBatchSeqNo      uint64                 `protobuf:"varint,10,opt,name=LastBatchSeqNo,proto3" json:"LastBatchSeqNo,omitempty"`
	CrossChainRoot      []byte                 `protobuf:"bytes,11,opt,name=CrossChainRoot,proto3" json:"CrossChainRoot,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *RollupHeaderMsg) Reset() {
	*x = RollupHeaderMsg{}
	mi := &file_enclave_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RollupHeaderMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollupHeaderMsg) ProtoMessage() {}

func (x *RollupHeaderMsg) ProtoReflect() protoreflect.Message {
	mi := &file_enclave_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollupHeaderMsg.ProtoReflect.Descriptor instead.
func (*RollupHeaderMsg) Descriptor() ([]byte, []int) {
	return file_enclave_proto_rawDescGZIP(), []int{62}
}

func (x *RollupHeaderMsg) GetParentHash() []byte {
	if x != nil {
		return x.ParentHash
	}
	return nil
}

func (x *RollupHeaderMsg) GetCompressionL1Head() []byte {
	if x != nil {
		return x.CompressionL1Head
	}
	return nil
}

func (x *RollupHeaderMsg) GetCompressionL1Number() []byte {
	if x != nil {
		return x.CompressionL1Number
	}
	return nil
}

func (x *RollupHeaderMsg) GetProofNumber() uint64 {
	if x != nil {
		return x.ProofNumber
	}
	return 0
}

func (x *RollupHeaderMsg) GetNumber() uint64 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *RollupHeaderMsg) GetTime() uint64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *RollupHeaderMsg) GetEnclaveID() []byte {
	if x != nil {
		return x.EnclaveID
	}
	return nil
}

func (x *RollupHeaderMsg) GetLastBatchHash() []byte {
	if x != nil {
		return x.LastBatchHash
	}
	return nil
}

func (x *RollupHeaderMsg) GetFirstBatchSeqNo() uint64 {
	if x != nil {
		return x.FirstBatchSeqNo
	}
	return 0
}

func (x *RollupHeaderMsg) GetLastBatchSeqNo() uint64 {
	if x != nil {
		return x.LastBatchSeqNo
	}
	return 0
}

func (x *RollupHeaderMsg) GetCrossChainRoot() []byte {
	if x != nil {
		return x.CrossChainRoot
	}
	return nil
}

type SecretResponseMsg struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Secret        []byte                 `protobuf:"bytes,1,opt,name=Secret,proto3" json:"Secret,omitempty"`
	RequesterID   []byte                 `protobuf:"bytes,2,opt,name=RequesterID,proto3" json:"RequesterID,omitempty"`
	AttesterID    []byte                 `protobuf:"bytes,3,opt,name=AttesterID,proto3" json:"AttesterID,omitempty"`
	HostAddress   string                 `protobuf:"bytes,4,opt,name=HostAddress,proto3" json:"HostAddress,omitempty"`
	Signature     []byte                 `protobuf:"bytes,5,opt,name=Signature,proto3" json:"Signature,omitempty"`
	SystemError   *SystemError           `protobuf:"bytes,6,opt,name=systemError,proto3" json:"systemError,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SecretResponseMsg) Reset() {
	*x = SecretResponseMsg{}
	mi := &file_enclave_proto_msgTypes[63]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SecretResponseMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecretResponseMsg) ProtoMessage() {}

func (x *SecretResponseMsg) ProtoReflect() protoreflect.Message {
	mi := &file_enclave_proto_msgTypes[63]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecretResponseMsg.ProtoReflect.Descriptor instead.
func (*SecretResponseMsg) Descriptor() ([]byte, []int) {
	return file_enclave_proto_rawDescGZIP(), []int{63}
}

func (x *SecretResponseMsg) GetSecret() []byte {
	if x != nil {
		return x.Secret
	}
	return nil
}

func (x *SecretResponseMsg) GetRequesterID() []byte {
	if x != nil {
		return x.RequesterID
	}
	return nil
}

func (x *SecretResponseMsg) GetAttesterID() []byte {
	if x != nil {
		return x.AttesterID
	}
	return nil
}

func (x *SecretResponseMsg) GetHostAddress() string {
	if x != nil {
		return x.HostAddress
	}
	return ""
}

func (x *SecretResponseMsg) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *SecretResponseMsg) GetSystemError() *SystemError {
	if x != nil {
		return x.SystemError
	}
	return nil
}

type WithdrawalMsg struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Amount        []byte                 `protobuf:"bytes,1,opt,name=amount,proto3" json:"amount,omitempty"`
	Recipient     []byte                 `protobuf:"bytes,2,opt,name=recipient,proto3" json:"recipient,omitempty"`
	Contract      []byte                 `protobuf:"bytes,3,opt,name=contract,proto3" json:"contract,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WithdrawalMsg) Reset() {
	*x = WithdrawalMsg{}
	mi := &file_enclave_proto_msgTypes[64]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WithdrawalMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawalMsg) ProtoMessage() {}

func (x *WithdrawalMsg) ProtoReflect() protoreflect.Message {
	mi := &file_enclave_proto_msgTypes[64]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawalMsg.ProtoReflect.Descriptor instead.
func (*WithdrawalMsg) Descriptor() ([]byte, []int) {
	return file_enclave_proto_rawDescGZIP(), []int{64}
}

func (x *WithdrawalMsg) GetAmount() []byte {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *WithdrawalMsg) GetRecipient() []byte {
	if x != nil {
		return x.Recipient
	}
	return nil
}

func (x *WithdrawalMsg) GetContract() []byte {
	if x != nil {
		return x.Contract
	}
	return nil
}

type BlobMsg struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Blob          []byte                 `protobuf:"bytes,1,opt,name=blob,proto3" json:"blob,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BlobMsg) Reset() {
	*x = BlobMsg{}
	mi := &file_enclave_proto_msgTypes[65]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlobMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlobMsg) ProtoMessage() {}

func (x *BlobMsg) ProtoReflect() protoreflect.Message {
	mi := &file_enclave_proto_msgTypes[65]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlobMsg.ProtoReflect.Descriptor instead.
func (*BlobMsg) Descriptor() ([]byte, []int) {
	return file_enclave_proto_rawDescGZIP(), []int{65}
}

func (x *BlobMsg) GetBlob() []byte {
	if x != nil {
		return x.Blob
	}
	return nil
}

var File_enclave_proto protoreflect.FileDescriptor

const file_enclave_proto_rawDesc = "" +
	"\n" +
	"\renclave.proto\x12\tgenerated\"\x1c\n" +
	"\x1aEnclavePublicConfigRequest\"\xde\x03\n" +
	"\x1bEnclavePublicConfigResponse\x120\n" +
	"\x13l2MessageBusAddress\x18\x01 \x01(\fR\x13l2MessageBusAddress\x12H\n" +
	"\x1ftransactionPostProcessorAddress\x18\x02 \x01(\fR\x1ftransactionPostProcessorAddress\x12F\n" +
	"\x1esystemContractsUpgraderAddress\x18\x03 \x01(\fR\x1esystemContractsUpgraderAddress\x12w\n" +
	"\x15publicSystemContracts\x18\x04 \x03(\v2A.generated.EnclavePublicConfigResponse.PublicSystemContractsEntryR\x15publicSystemContracts\x128\n" +
	"\vsystemError\x18\x05 \x01(\v2\x16.generated.SystemErrorR\vsystemError\x1aH\n" +
	"\x1aPublicSystemContractsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value:\x028\x01\"/\n" +
	"\x0fGetBatchRequest\x12\x1c\n" +
	"\tknownHead\x18\x01 \x01(\fR\tknownHead\".\n" +
	"\x16GetBatchBySeqNoRequest\x12\x14\n" +
	"\x05seqNo\x18\x01 \x01(\x04R\x05seqNo\"b\n" +
	"\x10GetBatchResponse\x12\x14\n" +
	"\x05batch\x18\x01 \x01(\fR\x05batch\x128\n" +
	"\vsystemError\x18\x02 \x01(\v2\x16.generated.SystemErrorR\vsystemError\"*\n" +
	"\x14GetRollupDataRequest\x12\x12\n" +
	"\x04hash\x18\x01 \x01(\fR\x04hash\"\x83\x01\n" +
	"\x15GetRollupDataResponse\x120\n" +
	"\x03msg\x18\x01 \x01(\v2\x1e.generated.PublicRollupDataMsgR\x03msg\x128\n" +
	"\vsystemError\x18\x02 \x01(\v2\x16.generated.SystemErrorR\vsystemError\"O\n" +
	"\x13PublicRollupDataMsg\x12\x1a\n" +
	"\bstartSeq\x18\x01 \x01(\x04R\bstartSeq\x12\x1c\n" +
	"\ttimestamp\x18\x02 \x01(\x04R\ttimestamp\"\x18\n" +
	"\x16StreamL2UpdatesRequest\"-\n" +
	"\x15EncodedUpdateResponse\x12\x14\n" +
	"\x05batch\x18\x01 \x01(\fR\x05batch\"8\n" +
	"\n" +
	"Pagination\x12\x16\n" +
	"\x06offset\x18\x01 \x01(\x05R\x06offset\x12\x12\n" +
	"\x04size\x18\x02 \x01(\x05R\x04size\"M\n" +
	"\vSystemError\x12\x1c\n" +
	"\terrorCode\x18\x01 \x01(\x05R\terrorCode\x12 \n" +
	"\verrorString\x18\x02 \x01(\tR\verrorString\"\x1e\n" +
	"\x1cGetTotalContractCountRequest\"o\n" +
	"\x1dGetTotalContractCountResponse\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x03R\x05count\x128\n" +
	"\vsystemError\x18\x02 \x01(\v2\x16.generated.SystemErrorR\vsystemError\"N\n" +
	"\x1cDebugTraceTransactionRequest\x12\x16\n" +
	"\x06txHash\x18\x01 \x01(\fR\x06txHash\x12\x16\n" +
	"\x06config\x18\x02 \x01(\fR\x06config\"k\n" +
	"\x1dDebugTraceTransactionResponse\x12\x10\n" +
	"\x03msg\x18\x01 \x01(\tR\x03msg\x128\n" +
	"\vsystemError\x18\x02 \x01(\v2\x16.generated.SystemErrorR\vsystemError\"6\n" +
	"\x12CreateBatchRequest\x12 \n" +
	"\vskipIfEmpty\x18\x01 \x01(\bR\vskipIfEmpty\"+\n" +
	"\x13CreateBatchResponse\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"a\n" +
	"\x13CreateRollupRequest\x123\n" +
	"\x12fromSequenceNumber\x18\x01 \x01(\x04H\x00R\x12fromSequenceNumber\x88\x01\x01B\x15\n" +
	"\x13_fromSequenceNumber\"\x98\x01\n" +
	"\x14CreateRollupResponse\x12\x1c\n" +
	"\tsignature\x18\x01 \x01(\fR\tsignature\x12(\n" +
	"\x05blobs\x18\x02 \x03(\v2\x12.generated.BlobMsgR\x05blobs\x128\n" +
	"\vsystemError\x18\x03 \x01(\v2\x16.generated.SystemErrorR\vsystemError\"U\n" +
	"\x1bExportCrossChainDataRequest\x12\x1c\n" +
	"\tfromSeqNo\x18\x01 \x01(\x04R\tfromSeqNo\x12\x18\n" +
	"\atoSeqNo\x18\x02 \x01(\x04R\atoSeqNo\"0\n" +
	"\x1cExportCrossChainDataResponse\x12\x10\n" +
	"\x03msg\x18\x01 \x01(\fR\x03msg\"\x0f\n" +
	"\rStatusRequest\"\xe6\x01\n" +
	"\x0eStatusResponse\x12\x1e\n" +
	"\n" +
	"statusCode\x18\x01 \x01(\x05R\n" +
	"statusCode\x12\x16\n" +
	"\x06l1Head\x18\x02 \x01(\fR\x06l1Head\x12\x16\n" +
	"\x06l2Head\x18\x03 \x01(\fR\x06l2Head\x12\x1c\n" +
	"\tenclaveID\x18\x04 \x01(\fR\tenclaveID\x12,\n" +
	"\x11isActiveSequencer\x18\x05 \x01(\bR\x11isActiveSequencer\x128\n" +
	"\vsystemError\x18\x06 \x01(\v2\x16.generated.SystemErrorR\vsystemError\"\x13\n" +
	"\x11MakeActiveRequest\"N\n" +
	"\x12MakeActiveResponse\x128\n" +
	"\vsystemError\x18\x01 \x01(\v2\x16.generated.SystemErrorR\vsystemError\"\x14\n" +
	"\x12AttestationRequest\"\xa4\x01\n" +
	"\x13AttestationResponse\x12S\n" +
	"\x14attestationReportMsg\x18\x01 \x01(\v2\x1f.generated.AttestationReportMsgR\x14attestationReportMsg\x128\n" +
	"\vsystemError\x18\x02 \x01(\v2\x16.generated.SystemErrorR\vsystemError\"\x17\n" +
	"\x15GenerateSecretRequest\"\x96\x01\n" +
	"\x16GenerateSecretResponse\x12B\n" +
	"\x1cencryptedSharedEnclaveSecret\x18\x01 \x01(\fR\x1cencryptedSharedEnclaveSecret\x128\n" +
	"\vsystemError\x18\x02 \x01(\v2\x16.generated.SystemErrorR\vsystemError\"X\n" +
	"\x12InitEnclaveRequest\x12B\n" +
	"\x1cencryptedSharedEnclaveSecret\x18\x01 \x01(\fR\x1cencryptedSharedEnclaveSecret\"O\n" +
	"\x13InitEnclaveResponse\x128\n" +
	"\vsystemError\x18\x01 \x01(\v2\x16.generated.SystemErrorR\vsystemError\"\x12\n" +
	"\x10EnclaveIDRequest\"k\n" +
	"\x11EnclaveIDResponse\x12\x1c\n" +
	"\tenclaveID\x18\x01 \x01(\fR\tenclaveID\x128\n" +
	"\vsystemError\x18\x02 \x01(\v2\x16.generated.SystemErrorR\vsystemError\"\x19\n" +
	"\x17RPCEncryptionKeyRequest\"r\n" +
	"\x18RPCEncryptionKeyResponse\x12\x1c\n" +
	"\trpcPubKey\x18\x01 \x01(\fR\trpcPubKey\x128\n" +
	"\vsystemError\x18\x02 \x01(\v2\x16.generated.SystemErrorR\vsystemError\"2\n" +
	"\fStartRequest\x12\"\n" +
	"\fencodedBlock\x18\x01 \x01(\fR\fencodedBlock\"I\n" +
	"\rStartResponse\x128\n" +
	"\vsystemError\x18\x01 \x01(\v2\x16.generated.SystemErrorR\vsystemError\"l\n" +
	"\x12SubmitBlockRequest\x12\"\n" +
	"\fencodedBlock\x18\x01 \x01(\fR\fencodedBlock\x122\n" +
	"\x14encodedProcessedData\x18\x02 \x01(\fR\x14encodedProcessedData\"\xb0\x01\n" +
	"\x13SubmitBlockResponse\x12_\n" +
	"\x17blockSubmissionResponse\x18\x01 \x01(\v2%.generated.BlockSubmissionResponseMsgR\x17blockSubmissionResponse\x128\n" +
	"\vsystemError\x18\x02 \x01(\v2\x16.generated.SystemErrorR\vsystemError\":\n" +
	"\x0eEncCallRequest\x12(\n" +
	"\x0fencryptedParams\x18\x01 \x01(\fR\x0fencryptedParams\"\x83\x01\n" +
	"\x0fEncCallResponse\x126\n" +
	"\x16encodedEnclaveResponse\x18\x01 \x01(\fR\x16encodedEnclaveResponse\x128\n" +
	"\vsystemError\x18\x02 \x01(\v2\x16.generated.SystemErrorR\vsystemError\"B\n" +
	"\x12SubmitBatchRequest\x12,\n" +
	"\x05batch\x18\x01 \x01(\v2\x16.generated.ExtBatchMsgR\x05batch\"O\n" +
	"\x13SubmitBatchResponse\x128\n" +
	"\vsystemError\x18\x01 \x01(\v2\x16.generated.SystemErrorR\vsystemError\"\r\n" +
	"\vStopRequest\"H\n" +
	"\fStopResponse\x128\n" +
	"\vsystemError\x18\x01 \x01(\v2\x16.generated.SystemErrorR\vsystemError\"P\n" +
	"\x0eGetCodeRequest\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\fR\aaddress\x12$\n" +
	"\rblockNrOrHash\x18\x02 \x01(\fR\rblockNrOrHash\"_\n" +
	"\x0fGetCodeResponse\x12\x12\n" +
	"\x04code\x18\x01 \x01(\fR\x04code\x128\n" +
	"\vsystemError\x18\x02 \x01(\v2\x16.generated.SystemErrorR\vsystemError\"X\n" +
	"\x10SubscribeRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\fR\x02id\x124\n" +
	"\x15encryptedSubscription\x18\x02 \x01(\fR\x15encryptedSubscription\"M\n" +
	"\x11SubscribeResponse\x128\n" +
	"\vsystemError\x18\x02 \x01(\v2\x16.generated.SystemErrorR\vsystemError\"$\n" +
	"\x12UnsubscribeRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\fR\x02id\"O\n" +
	"\x13UnsubscribeResponse\x128\n" +
	"\vsystemError\x18\x02 \x01(\v2\x16.generated.SystemErrorR\vsystemError\"g\n" +
	"\x13HealthCheckResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\bR\x06status\x128\n" +
	"\vsystemError\x18\x02 \x01(\v2\x16.generated.SystemErrorR\vsystemError\"\v\n" +
	"\tEmptyArgs\"\xc0\x01\n" +
	"\x14AttestationReportMsg\x12\x16\n" +
	"\x06Report\x18\x01 \x01(\fR\x06Report\x12\x16\n" +
	"\x06PubKey\x18\x02 \x01(\fR\x06PubKey\x12\x1c\n" +
	"\tEnclaveID\x18\x03 \x01(\fR\tEnclaveID\x12 \n" +
	"\vHostAddress\x18\x04 \x01(\tR\vHostAddress\x128\n" +
	"\vsystemError\x18\x05 \x01(\v2\x16.generated.SystemErrorR\vsystemError\"F\n" +
	"\x1cExtRollupMetadataResponseMsg\x12&\n" +
	"\x0eCrossChainTree\x18\x01 \x01(\fR\x0eCrossChainTree\"\xff\x01\n" +
	"\x1aBlockSubmissionResponseMsg\x12V\n" +
	"\x17producedSecretResponses\x18\x01 \x03(\v2\x1c.generated.SecretResponseMsgR\x17producedSecretResponses\x128\n" +
	"\x05error\x18\x02 \x01(\v2\".generated.BlockSubmissionErrorMsgR\x05error\x12O\n" +
	"\x0erollupMetadata\x18\x03 \x03(\v2'.generated.ExtRollupMetadataResponseMsgR\x0erollupMetadata\"G\n" +
	"\x17BlockSubmissionErrorMsg\x12\x14\n" +
	"\x05cause\x18\x01 \x01(\tR\x05cause\x12\x16\n" +
	"\x06l1Head\x18\x02 \x01(\fR\x06l1Head\"\x89\x01\n" +
	"\rCrossChainMsg\x12\x16\n" +
	"\x06Sender\x18\x01 \x01(\fR\x06Sender\x12\x1a\n" +
	"\bSequence\x18\x02 \x01(\x04R\bSequence\x12\x14\n" +
	"\x05Nonce\x18\x03 \x01(\x04R\x05Nonce\x12\x14\n" +
	"\x05Topic\x18\x04 \x01(\rR\x05Topic\x12\x18\n" +
	"\aPayload\x18\x05 \x01(\fR\aPayload\"n\n" +
	"\vExtBatchMsg\x121\n" +
	"\x06header\x18\x01 \x01(\v2\x19.generated.BatchHeaderMsgR\x06header\x12\x1a\n" +
	"\btxHashes\x18\x02 \x03(\fR\btxHashes\x12\x10\n" +
	"\x03txs\x18\x03 \x01(\fR\x03txs\"\xfe\x03\n" +
	"\x0eBatchHeaderMsg\x12\x1e\n" +
	"\n" +
	"ParentHash\x18\x01 \x01(\fR\n" +
	"ParentHash\x12\x14\n" +
	"\x05Proof\x18\x02 \x01(\fR\x05Proof\x12\x12\n" +
	"\x04Root\x18\x03 \x01(\fR\x04Root\x12\x16\n" +
	"\x06TxHash\x18\x04 \x01(\fR\x06TxHash\x12\x16\n" +
	"\x06Number\x18\x05 \x01(\x04R\x06Number\x12*\n" +
	"\x10SequencerOrderNo\x18\x06 \x01(\x04R\x10SequencerOrderNo\x12 \n" +
	"\vReceiptHash\x18\a \x01(\fR\vReceiptHash\x12\x14\n" +
	"\x05Extra\x18\b \x01(\fR\x05Extra\x12\x1c\n" +
	"\tSignature\x18\t \x01(\fR\tSignature\x12\x1a\n" +
	"\bGasLimit\x18\n" +
	" \x01(\x04R\bGasLimit\x12\x18\n" +
	"\aGasUsed\x18\v \x01(\x04R\aGasUsed\x12\x12\n" +
	"\x04Time\x18\f \x01(\x04R\x04Time\x12\x18\n" +
	"\aBaseFee\x18\r \x01(\x04R\aBaseFee\x12&\n" +
	"\x0eCrossChainRoot\x18\x11 \x01(\fR\x0eCrossChainRoot\x12\x1a\n" +
	"\bCoinbase\x18\x12 \x01(\fR\bCoinbase\x12&\n" +
	"\x0eCrossChainTree\x18\x13 \x01(\fR\x0eCrossChainTree\x12 \n" +
	"\vPayloadHash\x18\x14 \x01(\fR\vPayloadHash\"\x9c\x01\n" +
	"\fExtRollupMsg\x122\n" +
	"\x06header\x18\x01 \x01(\v2\x1a.generated.RollupHeaderMsgR\x06header\x12$\n" +
	"\rbatchPayloads\x18\x02 \x01(\fR\rbatchPayloads\x122\n" +
	"\x14calldataRollupHeader\x18\x03 \x01(\fR\x14calldataRollupHeader\"\x9d\x03\n" +
	"\x0fRollupHeaderMsg\x12\x1e\n" +
	"\n" +
	"ParentHash\x18\x01 \x01(\fR\n" +
	"ParentHash\x12,\n" +
	"\x11CompressionL1Head\x18\x02 \x01(\fR\x11CompressionL1Head\x120\n" +
	"\x13CompressionL1Number\x18\x03 \x01(\fR\x13CompressionL1Number\x12 \n" +
	"\vProofNumber\x18\x04 \x01(\x04R\vProofNumber\x12\x16\n" +
	"\x06Number\x18\x05 \x01(\x04R\x06Number\x12\x12\n" +
	"\x04Time\x18\x06 \x01(\x04R\x04Time\x12\x1c\n" +
	"\tEnclaveID\x18\a \x01(\fR\tEnclaveID\x12$\n" +
	"\rLastBatchHash\x18\b \x01(\fR\rLastBatchHash\x12(\n" +
	"\x0fFirstBatchSeqNo\x18\t \x01(\x04R\x0fFirstBatchSeqNo\x12&\n" +
	"\x0eLastBatchSeqNo\x18\n" +
	" \x01(\x04R\x0eLastBatchSeqNo\x12&\n" +
	"\x0eCrossChainRoot\x18\v \x01(\fR\x0eCrossChainRoot\"\xe7\x01\n" +
	"\x11SecretResponseMsg\x12\x16\n" +
	"\x06Secret\x18\x01 \x01(\fR\x06Secret\x12 \n" +
	"\vRequesterID\x18\x02 \x01(\fR\vRequesterID\x12\x1e\n" +
	"\n" +
	"AttesterID\x18\x03 \x01(\fR\n" +
	"AttesterID\x12 \n" +
	"\vHostAddress\x18\x04 \x01(\tR\vHostAddress\x12\x1c\n" +
	"\tSignature\x18\x05 \x01(\fR\tSignature\x128\n" +
	"\vsystemError\x18\x06 \x01(\v2\x16.generated.SystemErrorR\vsystemError\"a\n" +
	"\rWithdrawalMsg\x12\x16\n" +
	"\x06amount\x18\x01 \x01(\fR\x06amount\x12\x1c\n" +
	"\trecipient\x18\x02 \x01(\fR\trecipient\x12\x1a\n" +
	"\bcontract\x18\x03 \x01(\fR\bcontract\"\x1d\n" +
	"\aBlobMsg\x12\x12\n" +
	"\x04blob\x18\x01 \x01(\fR\x04blob2\xa9\x10\n" +
	"\fEnclaveProto\x12?\n" +
	"\x06Status\x12\x18.generated.StatusRequest\x1a\x19.generated.StatusResponse\"\x00\x12N\n" +
	"\vAttestation\x12\x1d.generated.AttestationRequest\x1a\x1e.generated.AttestationResponse\"\x00\x12W\n" +
	"\x0eGenerateSecret\x12 .generated.GenerateSecretRequest\x1a!.generated.GenerateSecretResponse\"\x00\x12N\n" +
	"\vInitEnclave\x12\x1d.generated.InitEnclaveRequest\x1a\x1e.generated.InitEnclaveResponse\"\x00\x12H\n" +
	"\tEnclaveID\x12\x1b.generated.EnclaveIDRequest\x1a\x1c.generated.EnclaveIDResponse\"\x00\x12]\n" +
	"\x10RPCEncryptionKey\x12\".generated.RPCEncryptionKeyRequest\x1a#.generated.RPCEncryptionKeyResponse\"\x00\x12P\n" +
	"\rSubmitL1Block\x12\x1d.generated.SubmitBlockRequest\x1a\x1e.generated.SubmitBlockResponse\"\x00\x12G\n" +
	"\fEncryptedRPC\x12\x19.generated.EncCallRequest\x1a\x1a.generated.EncCallResponse\"\x00\x12N\n" +
	"\vSubmitBatch\x12\x1d.generated.SubmitBatchRequest\x1a\x1e.generated.SubmitBatchResponse\"\x00\x129\n" +
	"\x04Stop\x12\x16.generated.StopRequest\x1a\x17.generated.StopResponse\"\x00\x12B\n" +
	"\aGetCode\x12\x19.generated.GetCodeRequest\x1a\x1a.generated.GetCodeResponse\"\x00\x12H\n" +
	"\tSubscribe\x12\x1b.generated.SubscribeRequest\x1a\x1c.generated.SubscribeResponse\"\x00\x12N\n" +
	"\vUnsubscribe\x12\x1d.generated.UnsubscribeRequest\x1a\x1e.generated.UnsubscribeResponse\"\x00\x12E\n" +
	"\vHealthCheck\x12\x14.generated.EmptyArgs\x1a\x1e.generated.HealthCheckResponse\"\x00\x12E\n" +
	"\bGetBatch\x12\x1a.generated.GetBatchRequest\x1a\x1b.generated.GetBatchResponse\"\x00\x12S\n" +
	"\x0fGetBatchBySeqNo\x12!.generated.GetBatchBySeqNoRequest\x1a\x1b.generated.GetBatchResponse\"\x00\x12T\n" +
	"\rGetRollupData\x12\x1f.generated.GetRollupDataRequest\x1a .generated.GetRollupDataResponse\"\x00\x12N\n" +
	"\vCreateBatch\x12\x1d.generated.CreateBatchRequest\x1a\x1e.generated.CreateBatchResponse\"\x00\x12Q\n" +
	"\fCreateRollup\x12\x1e.generated.CreateRollupRequest\x1a\x1f.generated.CreateRollupResponse\"\x00\x12i\n" +
	"\x14ExportCrossChainData\x12&.generated.ExportCrossChainDataRequest\x1a'.generated.ExportCrossChainDataResponse\"\x00\x12l\n" +
	"\x15DebugTraceTransaction\x12'.generated.DebugTraceTransactionRequest\x1a(.generated.DebugTraceTransactionResponse\"\x00\x12Z\n" +
	"\x0fStreamL2Updates\x12!.generated.StreamL2UpdatesRequest\x1a .generated.EncodedUpdateResponse\"\x000\x01\x12l\n" +
	"\x15GetTotalContractCount\x12'.generated.GetTotalContractCountRequest\x1a(.generated.GetTotalContractCountResponse\"\x00\x12f\n" +
	"\x13EnclavePublicConfig\x12%.generated.EnclavePublicConfigRequest\x1a&.generated.EnclavePublicConfigResponse\"\x00\x12K\n" +
	"\n" +
	"MakeActive\x12\x1c.generated.MakeActiveRequest\x1a\x1d.generated.MakeActiveResponse\"\x00B\x17Z\x15enclave/rpc/generatedb\x06proto3"

var (
	file_enclave_proto_rawDescOnce sync.Once
	file_enclave_proto_rawDescData []byte
)

func file_enclave_proto_rawDescGZIP() []byte {
	file_enclave_proto_rawDescOnce.Do(func() {
		file_enclave_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_enclave_proto_rawDesc), len(file_enclave_proto_rawDesc)))
	})
	return file_enclave_proto_rawDescData
}

var file_enclave_proto_msgTypes = make([]protoimpl.MessageInfo, 67)
var file_enclave_proto_goTypes = []any{
	(*EnclavePublicConfigRequest)(nil),    // 0: generated.EnclavePublicConfigRequest
	(*EnclavePublicConfigResponse)(nil),   // 1: generated.EnclavePublicConfigResponse
	(*GetBatchRequest)(nil),               // 2: generated.GetBatchRequest
	(*GetBatchBySeqNoRequest)(nil),        // 3: generated.GetBatchBySeqNoRequest
	(*GetBatchResponse)(nil),              // 4: generated.GetBatchResponse
	(*GetRollupDataRequest)(nil),          // 5: generated.GetRollupDataRequest
	(*GetRollupDataResponse)(nil),         // 6: generated.GetRollupDataResponse
	(*PublicRollupDataMsg)(nil),           // 7: generated.PublicRollupDataMsg
	(*StreamL2UpdatesRequest)(nil),        // 8: generated.StreamL2UpdatesRequest
	(*EncodedUpdateResponse)(nil),         // 9: generated.EncodedUpdateResponse
	(*Pagination)(nil),                    // 10: generated.Pagination
	(*SystemError)(nil),                   // 11: generated.SystemError
	(*GetTotalContractCountRequest)(nil),  // 12: generated.GetTotalContractCountRequest
	(*GetTotalContractCountResponse)(nil), // 13: generated.GetTotalContractCountResponse
	(*DebugTraceTransactionRequest)(nil),  // 14: generated.DebugTraceTransactionRequest
	(*DebugTraceTransactionResponse)(nil), // 15: generated.DebugTraceTransactionResponse
	(*CreateBatchRequest)(nil),            // 16: generated.CreateBatchRequest
	(*CreateBatchResponse)(nil),           // 17: generated.CreateBatchResponse
	(*CreateRollupRequest)(nil),           // 18: generated.CreateRollupRequest
	(*CreateRollupResponse)(nil),          // 19: generated.CreateRollupResponse
	(*ExportCrossChainDataRequest)(nil),   // 20: generated.ExportCrossChainDataRequest
	(*ExportCrossChainDataResponse)(nil),  // 21: generated.ExportCrossChainDataResponse
	(*StatusRequest)(nil),                 // 22: generated.StatusRequest
	(*StatusResponse)(nil),                // 23: generated.StatusResponse
	(*MakeActiveRequest)(nil),             // 24: generated.MakeActiveRequest
	(*MakeActiveResponse)(nil),            // 25: generated.MakeActiveResponse
	(*AttestationRequest)(nil),            // 26: generated.AttestationRequest
	(*AttestationResponse)(nil),           // 27: generated.AttestationResponse
	(*GenerateSecretRequest)(nil),         // 28: generated.GenerateSecretRequest
	(*GenerateSecretResponse)(nil),        // 29: generated.GenerateSecretResponse
	(*InitEnclaveRequest)(nil),            // 30: generated.InitEnclaveRequest
	(*InitEnclaveResponse)(nil),           // 31: generated.InitEnclaveResponse
	(*EnclaveIDRequest)(nil),              // 32: generated.EnclaveIDRequest
	(*EnclaveIDResponse)(nil),             // 33: generated.EnclaveIDResponse
	(*RPCEncryptionKeyRequest)(nil),       // 34: generated.RPCEncryptionKeyRequest
	(*RPCEncryptionKeyResponse)(nil),      // 35: generated.RPCEncryptionKeyResponse
	(*StartRequest)(nil),                  // 36: generated.StartRequest
	(*StartResponse)(nil),                 // 37: generated.StartResponse
	(*SubmitBlockRequest)(nil),            // 38: generated.SubmitBlockRequest
	(*SubmitBlockResponse)(nil),           // 39: generated.SubmitBlockResponse
	(*EncCallRequest)(nil),                // 40: generated.EncCallRequest
	(*EncCallResponse)(nil),               // 41: generated.EncCallResponse
	(*SubmitBatchRequest)(nil),            // 42: generated.SubmitBatchRequest
	(*SubmitBatchResponse)(nil),           // 43: generated.SubmitBatchResponse
	(*StopRequest)(nil),                   // 44: generated.StopRequest
	(*StopResponse)(nil),                  // 45: generated.StopResponse
	(*GetCodeRequest)(nil),                // 46: generated.GetCodeRequest
	(*GetCodeResponse)(nil),               // 47: generated.GetCodeResponse
	(*SubscribeRequest)(nil),              // 48: generated.SubscribeRequest
	(*SubscribeResponse)(nil),             // 49: generated.SubscribeResponse
	(*UnsubscribeRequest)(nil),            // 50: generated.UnsubscribeRequest
	(*UnsubscribeResponse)(nil),           // 51: generated.UnsubscribeResponse
	(*HealthCheckResponse)(nil),           // 52: generated.HealthCheckResponse
	(*EmptyArgs)(nil),                     // 53: generated.EmptyArgs
	(*AttestationReportMsg)(nil),          // 54: generated.AttestationReportMsg
	(*ExtRollupMetadataResponseMsg)(nil),  // 55: generated.ExtRollupMetadataResponseMsg
	(*BlockSubmissionResponseMsg)(nil),    // 56: generated.BlockSubmissionResponseMsg
	(*BlockSubmissionErrorMsg)(nil),       // 57: generated.BlockSubmissionErrorMsg
	(*CrossChainMsg)(nil),                 // 58: generated.CrossChainMsg
	(*ExtBatchMsg)(nil),                   // 59: generated.ExtBatchMsg
	(*BatchHeaderMsg)(nil),                // 60: generated.BatchHeaderMsg
	(*ExtRollupMsg)(nil),                  // 61: generated.ExtRollupMsg
	(*RollupHeaderMsg)(nil),               // 62: generated.RollupHeaderMsg
	(*SecretResponseMsg)(nil),             // 63: generated.SecretResponseMsg
	(*WithdrawalMsg)(nil),                 // 64: generated.WithdrawalMsg
	(*BlobMsg)(nil),                       // 65: generated.BlobMsg
	nil,                                   // 66: generated.EnclavePublicConfigResponse.PublicSystemContractsEntry
}
var file_enclave_proto_depIdxs = []int32{
	66, // 0: generated.EnclavePublicConfigResponse.publicSystemContracts:type_name -> generated.EnclavePublicConfigResponse.PublicSystemContractsEntry
	11, // 1: generated.EnclavePublicConfigResponse.systemError:type_name -> generated.SystemError
	11, // 2: generated.GetBatchResponse.systemError:type_name -> generated.SystemError
	7,  // 3: generated.GetRollupDataResponse.msg:type_name -> generated.PublicRollupDataMsg
	11, // 4: generated.GetRollupDataResponse.systemError:type_name -> generated.SystemError
	11, // 5: generated.GetTotalContractCountResponse.systemError:type_name -> generated.SystemError
	11, // 6: generated.DebugTraceTransactionResponse.systemError:type_name -> generated.SystemError
	65, // 7: generated.CreateRollupResponse.blobs:type_name -> generated.BlobMsg
	11, // 8: generated.CreateRollupResponse.systemError:type_name -> generated.SystemError
	11, // 9: generated.StatusResponse.systemError:type_name -> generated.SystemError
	11, // 10: generated.MakeActiveResponse.systemError:type_name -> generated.SystemError
	54, // 11: generated.AttestationResponse.attestationReportMsg:type_name -> generated.AttestationReportMsg
	11, // 12: generated.AttestationResponse.systemError:type_name -> generated.SystemError
	11, // 13: generated.GenerateSecretResponse.systemError:type_name -> generated.SystemError
	11, // 14: generated.InitEnclaveResponse.systemError:type_name -> generated.SystemError
	11, // 15: generated.EnclaveIDResponse.systemError:type_name -> generated.SystemError
	11, // 16: generated.RPCEncryptionKeyResponse.systemError:type_name -> generated.SystemError
	11, // 17: generated.StartResponse.systemError:type_name -> generated.SystemError
	56, // 18: generated.SubmitBlockResponse.blockSubmissionResponse:type_name -> generated.BlockSubmissionResponseMsg
	11, // 19: generated.SubmitBlockResponse.systemError:type_name -> generated.SystemError
	11, // 20: generated.EncCallResponse.systemError:type_name -> generated.SystemError
	59, // 21: generated.SubmitBatchRequest.batch:type_name -> generated.ExtBatchMsg
	11, // 22: generated.SubmitBatchResponse.systemError:type_name -> generated.SystemError
	11, // 23: generated.StopResponse.systemError:type_name -> generated.SystemError
	11, // 24: generated.GetCodeResponse.systemError:type_name -> generated.SystemError
	11, // 25: generated.SubscribeResponse.systemError:type_name -> generated.SystemError
	11, // 26: generated.UnsubscribeResponse.systemError:type_name -> generated.SystemError
	11, // 27: generated.HealthCheckResponse.systemError:type_name -> generated.SystemError
	11, // 28: generated.AttestationReportMsg.systemError:type_name -> generated.SystemError
	63, // 29: generated.BlockSubmissionResponseMsg.producedSecretResponses:type_name -> generated.SecretResponseMsg
	57, // 30: generated.BlockSubmissionResponseMsg.error:type_name -> generated.BlockSubmissionErrorMsg
	55, // 31: generated.BlockSubmissionResponseMsg.rollupMetadata:type_name -> generated.ExtRollupMetadataResponseMsg
	60, // 32: generated.ExtBatchMsg.header:type_name -> generated.BatchHeaderMsg
	62, // 33: generated.ExtRollupMsg.header:type_name -> generated.RollupHeaderMsg
	11, // 34: generated.SecretResponseMsg.systemError:type_name -> generated.SystemError
	22, // 35: generated.EnclaveProto.Status:input_type -> generated.StatusRequest
	26, // 36: generated.EnclaveProto.Attestation:input_type -> generated.AttestationRequest
	28, // 37: generated.EnclaveProto.GenerateSecret:input_type -> generated.GenerateSecretRequest
	30, // 38: generated.EnclaveProto.InitEnclave:input_type -> generated.InitEnclaveRequest
	32, // 39: generated.EnclaveProto.EnclaveID:input_type -> generated.EnclaveIDRequest
	34, // 40: generated.EnclaveProto.RPCEncryptionKey:input_type -> generated.RPCEncryptionKeyRequest
	38, // 41: generated.EnclaveProto.SubmitL1Block:input_type -> generated.SubmitBlockRequest
	40, // 42: generated.EnclaveProto.EncryptedRPC:input_type -> generated.EncCallRequest
	42, // 43: generated.EnclaveProto.SubmitBatch:input_type -> generated.SubmitBatchRequest
	44, // 44: generated.EnclaveProto.Stop:input_type -> generated.StopRequest
	46, // 45: generated.EnclaveProto.GetCode:input_type -> generated.GetCodeRequest
	48, // 46: generated.EnclaveProto.Subscribe:input_type -> generated.SubscribeRequest
	50, // 47: generated.EnclaveProto.Unsubscribe:input_type -> generated.UnsubscribeRequest
	53, // 48: generated.EnclaveProto.HealthCheck:input_type -> generated.EmptyArgs
	2,  // 49: generated.EnclaveProto.GetBatch:input_type -> generated.GetBatchRequest
	3,  // 50: generated.EnclaveProto.GetBatchBySeqNo:input_type -> generated.GetBatchBySeqNoRequest
	5,  // 51: generated.EnclaveProto.GetRollupData:input_type -> generated.GetRollupDataRequest
	16, // 52: generated.EnclaveProto.CreateBatch:input_type -> generated.CreateBatchRequest
	18, // 53: generated.EnclaveProto.CreateRollup:input_type -> generated.CreateRollupRequest
	20, // 54: generated.EnclaveProto.ExportCrossChainData:input_type -> generated.ExportCrossChainDataRequest
	14, // 55: generated.EnclaveProto.DebugTraceTransaction:input_type -> generated.DebugTraceTransactionRequest
	8,  // 56: generated.EnclaveProto.StreamL2Updates:input_type -> generated.StreamL2UpdatesRequest
	12, // 57: generated.EnclaveProto.GetTotalContractCount:input_type -> generated.GetTotalContractCountRequest
	0,  // 58: generated.EnclaveProto.EnclavePublicConfig:input_type -> generated.EnclavePublicConfigRequest
	24, // 59: generated.EnclaveProto.MakeActive:input_type -> generated.MakeActiveRequest
	23, // 60: generated.EnclaveProto.Status:output_type -> generated.StatusResponse
	27, // 61: generated.EnclaveProto.Attestation:output_type -> generated.AttestationResponse
	29, // 62: generated.EnclaveProto.GenerateSecret:output_type -> generated.GenerateSecretResponse
	31, // 63: generated.EnclaveProto.InitEnclave:output_type -> generated.InitEnclaveResponse
	33, // 64: generated.EnclaveProto.EnclaveID:output_type -> generated.EnclaveIDResponse
	35, // 65: generated.EnclaveProto.RPCEncryptionKey:output_type -> generated.RPCEncryptionKeyResponse
	39, // 66: generated.EnclaveProto.SubmitL1Block:output_type -> generated.SubmitBlockResponse
	41, // 67: generated.EnclaveProto.EncryptedRPC:output_type -> generated.EncCallResponse
	43, // 68: generated.EnclaveProto.SubmitBatch:output_type -> generated.SubmitBatchResponse
	45, // 69: generated.EnclaveProto.Stop:output_type -> generated.StopResponse
	47, // 70: generated.EnclaveProto.GetCode:output_type -> generated.GetCodeResponse
	49, // 71: generated.EnclaveProto.Subscribe:output_type -> generated.SubscribeResponse
	51, // 72: generated.EnclaveProto.Unsubscribe:output_type -> generated.UnsubscribeResponse
	52, // 73: generated.EnclaveProto.HealthCheck:output_type -> generated.HealthCheckResponse
	4,  // 74: generated.EnclaveProto.GetBatch:output_type -> generated.GetBatchResponse
	4,  // 75: generated.EnclaveProto.GetBatchBySeqNo:output_type -> generated.GetBatchResponse
	6,  // 76: generated.EnclaveProto.GetRollupData:output_type -> generated.GetRollupDataResponse
	17, // 77: generated.EnclaveProto.CreateBatch:output_type -> generated.CreateBatchResponse
	19, // 78: generated.EnclaveProto.CreateRollup:output_type -> generated.CreateRollupResponse
	21, // 79: generated.EnclaveProto.ExportCrossChainData:output_type -> generated.ExportCrossChainDataResponse
	15, // 80: generated.EnclaveProto.DebugTraceTransaction:output_type -> generated.DebugTraceTransactionResponse
	9,  // 81: generated.EnclaveProto.StreamL2Updates:output_type -> generated.EncodedUpdateResponse
	13, // 82: generated.EnclaveProto.GetTotalContractCount:output_type -> generated.GetTotalContractCountResponse
	1,  // 83: generated.EnclaveProto.EnclavePublicConfig:output_type -> generated.EnclavePublicConfigResponse
	25, // 84: generated.EnclaveProto.MakeActive:output_type -> generated.MakeActiveResponse
	60, // [60:85] is the sub-list for method output_type
	35, // [35:60] is the sub-list for method input_type
	35, // [35:35] is the sub-list for extension type_name
	35, // [35:35] is the sub-list for extension extendee
	0,  // [0:35] is the sub-list for field type_name
}

func init() { file_enclave_proto_init() }
func file_enclave_proto_init() {
	if File_enclave_proto != nil {
		return
	}
	file_enclave_proto_msgTypes[18].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_enclave_proto_rawDesc), len(file_enclave_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   67,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_enclave_proto_goTypes,
		DependencyIndexes: file_enclave_proto_depIdxs,
		MessageInfos:      file_enclave_proto_msgTypes,
	}.Build()
	File_enclave_proto = out.File
	file_enclave_proto_goTypes = nil
	file_enclave_proto_depIdxs = nil
}
