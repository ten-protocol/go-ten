# Base config for all TEN services
#  - this contains sensible defaults where possible
#  - serves as template/documentation for config structure

network:
  chainId: 5443
  # genesis JSON for prefunded accounts and predeployed contracts (e.g., WETH9)
  genesis: |
    {
      "accounts": [],
      "contracts": [
        {
          "address": "0x1000000000000000000000000000000000000042",
          "bytecode": "0x6080604052600436106100bc5760003560e01c8063313ce56711610074578063a9059cbb1161004e578063a9059cbb146102cb578063d0e30db0146100bc578063dd62ed3e14610311576100bc565b8063313ce5671461024b57806370a082311461027657806395d89b41146102b6576100bc565b806318160ddd116100a557806318160ddd146101aa57806323b872dd146101d15780632e1a7d4d14610221576100bc565b806306fdde03146100c6578063095ea7b314610150575b6100c4610359565b005b3480156100d257600080fd5b506100db6103a8565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101155781810151838201526020016100fd565b50505050905090810190601f1680156101425780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561015c57600080fd5b506101966004803603604081101561017357600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610454565b604080519115158252519081900360200190f35b3480156101b657600080fd5b506101bf6104c7565b60408051918252519081900360200190f35b3480156101dd57600080fd5b50610196600480360360608110156101f457600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135811691602081013590911690604001356104cb565b34801561022d57600080fd5b506100c46004803603602081101561024457600080fd5b503561066b565b34801561025757600080fd5b50610260610700565b6040805160ff9092168252519081900360200190f35b34801561028257600080fd5b506101bf6004803603602081101561029957600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610709565b3480156102c257600080fd5b506100db61071b565b3480156102d757600080fd5b50610196600480360360408110156102ee57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610793565b34801561031d57600080fd5b506101bf6004803603604081101561033457600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160200135166107a7565b33600081815260036020908152604091829020805434908101909155825190815291517fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c9281900390910190a2565b6000805460408051602060026001851615610100027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190941693909304601f8101849004840282018401909252818152929183018282801561044c5780601f106104215761010080835404028352916020019161044c565b820191906000526020600020905b81548152906001019060200180831161042f57829003601f168201915b505050505081565b33600081815260046020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b4790565b73ffffffffffffffffffffffffffffffffffffffff83166000908152600360205260408120548211156104fd57600080fd5b73ffffffffffffffffffffffffffffffffffffffff84163314801590610573575073ffffffffffffffffffffffffffffffffffffffff841660009081526004602090815260408083203384529091529020547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff14155b156105ed5773ffffffffffffffffffffffffffffffffffffffff841660009081526004602090815260408083203384529091529020548211156105b557600080fd5b73ffffffffffffffffffffffffffffffffffffffff841660009081526004602090815260408083203384529091529020805483900390555b73ffffffffffffffffffffffffffffffffffffffff808516600081815260036020908152604080832080548890039055938716808352918490208054870190558351868152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35060019392505050565b3360009081526003602052604090205481111561068757600080fd5b33600081815260036020526040808220805485900390555183156108fc0291849190818181858888f193505050501580156106c6573d6000803e3d6000fd5b5060408051828152905133917f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65919081900360200190a250565b60025460ff1681565b60036020526000908152604090205481565b60018054604080516020600284861615610100027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190941693909304601f8101849004840282018401909252818152929183018282801561044c5780601f106104215761010080835404028352916020019161044c565b60006107a03384846104cb565b9392505050565b60046020908152600092835260408084209091529082529020548156fea265627a7a7231582091c18790e0cca5011d2518024840ee00fecc67e11f56fd746f2cf84d5b583e0064736f6c63430005110032"
        }
      ]
    }
  batch:
    interval: 1s
    maxInterval: 1s # if this is greater than batch.interval then we make batches more slowly when there are no transactions
    maxSize: 125952 # (128-5)kb - the size of the rollup minus overhead
  rollup:
    interval: 5s
    maxInterval: 120m # rollups will be produced after this time even if the data blob is not full
    maxSize: 131072 # 128kb - the size of a blob
  gas:
    minBaseFee: 100000000
    minGasPrice: 9999999
    paymentAddress: 0xd6C9230053f45F873Cb66D8A02439380a37A4fbF
    batchExecutionLimit: 300000000
    localExecutionCap: 300000000000 # 300 gwei
  l1:
    chainId: 1337
    blockTime: 15s
    rollupRetryDelay: 5s
    startHash: 0x0 # hash of the L1 block that Ten can safely start processing from to get entire L2 history
    contracts:
      networkConfig: 0x0 # L1 address of the Ten network config contract
      crossChain: 0x0 # L1 address of the Ten cross chain contract
      rollup: 0x0 # L1 address of the Ten rollup contract
      enclaveRegistry: 0x0 # L1 address of the Ten enclave registry contract
      messageBus: 0x0 # L1 address of the Ten message bus contract
      bridge: 0x0 # L1 address of the Ten bridge contract
  sequencer:
    p2pAddress: 0x0 # address of the sequencer's p2p server
    systemContractsUpgrader: 0x2 # L2 address of the EOA allowed to upgrade the system contract proxies
  crossChain:
    interval: 6s

node:
  nodeType: sequencer # sequencer or validator
  id: 0x0 # unique identifier for this node (currently based on its wallet eth address)
  hostAddress: 0x0 # address of the node's p2p server
  privateKey: 0x0 # private key for this node's eth account
  isGenesis: true # true only for the first sequencer on a fresh chain

host:
  db:
    useInMemory: true
    postgresHost: "" # host address for postgres db when used
    sqlitePath: "" # path to sqlite db, will use a throwaway temp file when empty
    historicalTxCount: 0
    historicalContractCount: 0
  debug:
    enableMetrics: true
    metricsPort: 14000
    enableProfiler: false
    enableDebugNamespace: false
  enclave:
    rpcAddresses: [ "127.0.0.1:11000" ] # list of enclave rpc addresses
    rpcTimeout: 10s
  l1:
    wsURL: ws://localhost:8546 # websocket URL for L1 RPC service
    beaconURL: eth2network:12600 # websocket URL for L1 beacon service
    blobArchiveURL: "" # URL for L1 blob archive service
    rpcTimeout: 15s
  log:
    level: 1
    path: sys_out # path to log file, will log to stdout when empty
  p2p:
    disableP2P: false
    bindAddress: 0.0.0.0:10000
    timeout: 10s
  rpc:
    address: 0.0.0.0
    enableHTTP: true
    httpPort: 80
    enableWS: true
    wsPort: 81

enclave:
  enableAttestation: false
  storeExecutedTransactions: true
  decompressionLimit: "10MB"
  db:
    useInMemory: true
    edgelessDBHost: "" # host address for postgres db when used
    sqlitePath: "" # path to sqlite db, will use a throwaway temp file when empty
  debug:
    enableDebugNamespace: false
    enableProfiler: false
  log:
    level: 1
    path: sys_out
  rpc:
    bindAddress: "0.0.0.0:11000"
    timeout: 5s
  attestation:
    signerID: "86b724901b8789b315be6d32a219506d16c98a1cda0f0c08d745d13715a7808e" # expected ID of the TEN signer
    edbSecurityVersion: 4 # default to original edgeless security version
    edbProductID: 16 # default to the original product ID edgeless use for EDB
deploy:
  debug: false # enable debug mode for deployer
  dockerImage: "testnetobscuronet.azurecr.io/obscuronet/hardhatdeployer:latest" # docker image for L1 contract deploys
  githubPAT: "" # optional GitHub personal access token for committing deployed contract addresses
  outputEnv: "" # path to output env file for L1 contract deploys (used in GH actions)
  networkName: "" # name of the testnet env, used as a prefix for KV keys for example
  l1:
    rpcAddress: "http://localhost:8545" # L1 RPC address for deploying contracts
    deployerPK: 0x0 # private key for the deployer account
    challengePeriod: 1 # challenge period for rollups in seconds
    initialSeqAddress: 0x0 # initial sequencer address for the L1 network, only address allowed to initialize the L2 network
    etherscanAPIKey: "" # optional Etherscan API key for verifying contracts on Etherscan
    maxGasGwei: 1.5 # max network gas price to proceed with L1 deployment (avoid deploying in spikes)
    checkGasPrice: false # flag to turn on maxGasGwei checks (for mainnet mostly)
    usdcAddress: "" # mainnet USDC token address
    usdtAddress: "" # mainnet USDT token address
    wethAddress: "" # mainnet WETH token address
  l2:
    rpcAddress: "localhost" # L2 RPC address for deploying contracts
    httpPort: 80 # L2 RPC port for deploying contracts
    wsPort: 81 # L2 RPC port for deploying contracts
    deployerPK: 0x0 # private key for the deployer account
    faucetPrefund: 0 # amount of ETH to pre-fund the faucet account (for non-sepolia testnets)
    sequencerURL: "" # sequencer URL to fetch its HA enclave IDs