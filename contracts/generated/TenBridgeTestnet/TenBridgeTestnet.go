// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package TenBridgeTestnet

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// TenBridgeTestnetMetaData contains all meta data concerning the TenBridgeTestnet contract.
var TenBridgeTestnetMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ERC20_TOKEN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NATIVE_TOKEN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SUSPENDED_ERC20_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UNPAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantPauserRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantUnpauserRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"messenger\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"messageBus\",\"outputs\":[{\"internalType\":\"contractIMessageBus\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"messenger\",\"outputs\":[{\"internalType\":\"contractICrossChainMessenger\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"pauseToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"promoteToAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"receiveAssets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"recoverTestnetFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"remoteBridgeAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokePauserRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeUnpauserRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"sendERC20\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"sendNative\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"bridge\",\"type\":\"address\"}],\"name\":\"setRemoteBridge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"multisig\",\"type\":\"address\"}],\"name\":\"transferUnpauserRoleToMultisig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"unpauseToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"whitelistToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]",
	Bin: "0x6080604052348015600e575f5ffd5b50612f608061001c5f395ff3fe608060405260043610610229575f3560e01c80636c11c21c11610131578063a217fddf116100ac578063d547741f1161007c578063e63ab1e911610062578063e63ab1e914610740578063f865af0814610773578063fb1bb9de14610792575f5ffd5b8063d547741f146106ee578063e4c3ebc71461070d575f5ffd5b8063a217fddf1461061e578063a381c8e214610631578063affed0e014610644578063c091a58b146106cf575f5ffd5b806383bece4d1161010157806391d14854116100e757806391d148541461058857806393b37442146105eb578063a1a227fa1461060a575f5ffd5b806383bece4d146105555780638456cb5914610574575f5ffd5b80636c11c21c146104c557806375b238fc146104e45780637920c986146105175780637c41ad2c14610536575f5ffd5b806336568abe116101c1578063485cc955116101915780635c975abb116101775780635c975abb146104295780635ccc96131461045f5780635d87297014610492575f5ffd5b8063485cc955146103eb578063498d82ab1461040a575f5ffd5b806336568abe146103785780633b3bff0f146103975780633cb747bf146103b65780633f4ba83a146103d7575f5ffd5b8063248a9ca3116101fc578063248a9ca3146102c15780632540e2da1461031b5780632f2ff15d1461033a5780633296878214610359575f5ffd5b806301ffc9a71461022d5780630f0a9a4b1461026257806316ce81491461028d5780631888d712146102ae575b5f5ffd5b348015610238575f5ffd5b5061024c610247366004612309565b6107c5565b6040516102599190612337565b60405180910390f35b34801561026d575f5ffd5b505f54610280906001600160a01b031681565b604051610259919061235e565b348015610298575f5ffd5b506102ac6102a7366004612380565b61082d565b005b6102ac6102bc366004612380565b6108e5565b3480156102cc575f5ffd5b5061030e6102db3660046123ae565b5f9081527f02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800602052604090206001015490565b60405161025991906123d1565b348015610326575f5ffd5b506102ac610335366004612380565b61095e565b348015610345575f5ffd5b506102ac6103543660046123df565b610997565b348015610364575f5ffd5b506102ac610373366004612380565b6109e0565b348015610383575f5ffd5b506102ac6103923660046123df565b610a14565b3480156103a2575f5ffd5b506102ac6103b1366004612380565b610a60565b3480156103c1575f5ffd5b506103ca610ab4565b6040516102599190612432565b3480156103e2575f5ffd5b506102ac610b3f565b3480156103f6575f5ffd5b506102ac610405366004612440565b610b74565b348015610415575f5ffd5b506102ac6104243660046124ac565b610d8b565b348015610434575f5ffd5b507fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f033005460ff1661024c565b34801561046a575f5ffd5b5061030e7fe08e2b666d5448741eeecf0d9bbc95ce21b6e73cca0d67afab4279e53c07cd3e81565b34801561049d575f5ffd5b5061030e7f9f225881f6e7ac8a885b63aa2269cbce78dd6a669864ccd2cd2517a8e709d73a81565b3480156104d0575f5ffd5b506102ac6104df366004612380565b610ed7565b3480156104ef575f5ffd5b5061030e7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177581565b348015610522575f5ffd5b506102ac610531366004612380565b610f0b565b348015610541575f5ffd5b506102ac610550366004612380565b610f90565b348015610560575f5ffd5b506102ac61056f366004612533565b61103a565b34801561057f575f5ffd5b506102ac611197565b348015610593575f5ffd5b5061024c6105a23660046123df565b5f9182527f02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800602090815260408084206001600160a01b0393909316845291905290205460ff1690565b3480156105f6575f5ffd5b506102ac610605366004612380565b6111c9565b348015610615575f5ffd5b506103ca61122b565b348015610629575f5ffd5b5061030e5f81565b6102ac61063f366004612533565b6112ab565b34801561064f575f5ffd5b5060408051808201909152601a81527f43726f7373436861696e456e61626c656454454e2e6e6f6e63650000000000006020909101527f896d106647b57d520a34062c7c0dde769b7551e327629f69d5e9844e20c864625f527fe7fbfe9855ab39eb2e984ddc0938c4134151cf94d8a54d4770b35b584ad4bd005461030e565b3480156106da575f5ffd5b506102ac6106e9366004612380565b6113f6565b3480156106f9575f5ffd5b506102ac6107083660046123df565b61153b565b348015610718575f5ffd5b5061030e7fd2fb17ceaa388942529b17e0006ffc4d559f040dd4f2157b8070f17ad211057881565b34801561074b575f5ffd5b5061030e7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b34801561077e575f5ffd5b506102ac61078d366004612380565b61157e565b34801561079d575f5ffd5b5061030e7f427da25fe773164f88948d3e215c94b6554e2ed5e5f203a821c9f2f6131cf75a81565b5f6001600160e01b031982167f7965db0b00000000000000000000000000000000000000000000000000000000148061082757507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b92915050565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775610857816115b2565b61085f6115bc565b6001600160a01b03821661088e5760405162461bcd60e51b8152600401610885906125ad565b60405180910390fd5b5f546001600160a01b0316156108b65760405162461bcd60e51b815260040161088590612617565b505f805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6108ed6115bc565b5f341161090c5760405162461bcd60e51b815260040161088590612659565b5f6040518060400160405280348152602001836001600160a01b031681525060405160200161093b9190612688565b60408051601f19818403018152919052905061095a8160025f5f61161a565b5050565b5f610968816115b2565b6109927f427da25fe773164f88948d3e215c94b6554e2ed5e5f203a821c9f2f6131cf75a83611725565b505050565b5f8281527f02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b62680060205260409020600101546109d0816115b2565b6109da83836117d2565b50505050565b5f6109ea816115b2565b6109927f427da25fe773164f88948d3e215c94b6554e2ed5e5f203a821c9f2f6131cf75a836117d2565b6001600160a01b0381163314610a56576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6109928282611725565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775610a8a816115b2565b6109927fe08e2b666d5448741eeecf0d9bbc95ce21b6e73cca0d67afab4279e53c07cd3e83611725565b60408051808201909152601e81527f43726f7373436861696e456e61626c656454454e2e6d657373656e67657200006020909101527fa8b5aada5c72138bb5566a3940e8fe06f59ef8af1e490446ba6ea7fa80395d525f9081527f3b49b3a570909bb4d324cb0ca029c61a2f4f7251edd27af783a6ad02851382005b546001600160a01b0316919050565b7f427da25fe773164f88948d3e215c94b6554e2ed5e5f203a821c9f2f6131cf75a610b69816115b2565b610b71611895565b50565b5f610b7d611901565b805490915060ff68010000000000000000820416159067ffffffffffffffff165f81158015610ba95750825b90505f8267ffffffffffffffff166001148015610bc55750303b155b905081158015610bd3575080155b15610c0a576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b845467ffffffffffffffff191660011785558315610c3e57845468ff00000000000000001916680100000000000000001785555b6001600160a01b038716610c645760405162461bcd60e51b8152600401610885906126c8565b6001600160a01b038616610c8a5760405162461bcd60e51b81526004016108859061270a565b610c9387611929565b610c9c86611b2a565b610ca65f876117d2565b50610cb15f306117d2565b50610cdc7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c217755f611ba2565b610d067fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775876117d2565b50610d317fd2fb17ceaa388942529b17e0006ffc4d559f040dd4f2157b8070f17ad21105785f6117d2565b508315610d8257845468ff0000000000000000191685556040517fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290610d7990600190612734565b60405180910390a15b50505050505050565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775610db5816115b2565b610dbd6115bc565b6001600160a01b038616610de35760405162461bcd60e51b815260040161088590612774565b6001600160a01b0386165f9081527fe0305390dd8de2e924991bcde8c43652df4370e71f9558170e600f8cd2fe1d57602052604090205460ff1615610e3a5760405162461bcd60e51b8152600401610885906127b6565b610e647f9f225881f6e7ac8a885b63aa2269cbce78dd6a669864ccd2cd2517a8e709d73a876117d2565b505f63458ffd6360e01b8787878787604051602401610e879594939291906127f1565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091525f54909150610d82906001600160a01b03168260015b5f5f5f611c43565b5f610ee1816115b2565b6109927f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a836117d2565b5f610f15816115b2565b6001600160a01b038216610f3b5760405162461bcd60e51b815260040161088590612864565b610f657f427da25fe773164f88948d3e215c94b6554e2ed5e5f203a821c9f2f6131cf75a33611725565b506109927f427da25fe773164f88948d3e215c94b6554e2ed5e5f203a821c9f2f6131cf75a836117d2565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775610fba816115b2565b6001600160a01b0382165f9081527fe0305390dd8de2e924991bcde8c43652df4370e71f9558170e600f8cd2fe1d57602052604090205460ff166110105760405162461bcd60e51b8152600401610885906128a6565b6109927fe08e2b666d5448741eeecf0d9bbc95ce21b6e73cca0d67afab4279e53c07cd3e836117d2565b5f546001600160a01b031661104d611dbd565b6110695760405162461bcd60e51b81526004016108859061290e565b806001600160a01b031661107b611ddf565b6001600160a01b0316146110a15760405162461bcd60e51b815260040161088590612976565b306110aa611e4c565b6001600160a01b0316146110d05760405162461bcd60e51b8152600401610885906129de565b6110d8611e90565b6110e06115bc565b6001600160a01b0384165f9081527fe0305390dd8de2e924991bcde8c43652df4370e71f9558170e600f8cd2fe1d57602052604090205460ff161561112f5761112a848484611f16565b61118f565b6001600160a01b0384165f9081527e5fd0bb0e17815069821c0eac859eb66a4da90a93d511d999ef71402d667e27602052604090205460ff16156111775761112a8284611f71565b60405162461bcd60e51b815260040161088590612a46565b6109da612023565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a6111c1816115b2565b610b7161204d565b5f6111d3816115b2565b6111db6115bc565b6001600160a01b0382166112015760405162461bcd60e51b815260040161088590612a88565b61095a7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177583610997565b60408051808201909152601f81527f43726f7373436861696e456e61626c656454454e2e6d657373616765427573006020909101527f3e1bb302f668bd876eab4a48b3759a1d614a1ecbcc67ee27a10c9a116878004e5f9081527f6c6664e79adefe2c614a8e3c94fc27135b7678c3722965a80d01e330dd948d00610b30565b6112b36115bc565b6001600160a01b0383165f9081527ff8f9f0c07f8f13fae35355825022a620ece4ae820bcc59c97dd7358124668dc9602052604090205460ff161561130a5760405162461bcd60e51b815260040161088590612aca565b5f82116113295760405162461bcd60e51b815260040161088590612b0c565b6001600160a01b0383165f9081527fe0305390dd8de2e924991bcde8c43652df4370e71f9558170e600f8cd2fe1d57602052604090205460ff1661137f5760405162461bcd60e51b815260040161088590612b1c565b61138b833330856120a8565b5f6383bece4d60e01b8484846040516024016113a993929190612ba3565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091525f80549192506109da916001600160a01b0316908390610ecf565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775611420816115b2565b6001600160a01b0382166114465760405162461bcd60e51b815260040161088590612c05565b4662aa36a71480611458575046610539145b6114745760405162461bcd60e51b815260040161088590612c6d565b478015610992575f836001600160a01b0316826040515f6040518083038185875af1925050503d805f81146114c4576040519150601f19603f3d011682016040523d82523d5f602084013e6114c9565b606091505b50509050806114ea5760405162461bcd60e51b815260040161088590612caf565b5f6001600160a01b0316846001600160a01b03167f2717ead6b9200dd235aad468c9809ea400fe33ac69b5bfaa6d3e90fc922b63988460405161152d91906123d1565b60405180910390a350505050565b5f8281527f02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b6268006020526040902060010154611574816115b2565b6109da8383611725565b5f611588816115b2565b6109927f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a83611725565b610b718133612102565b7fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f033005460ff1615611618576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b61162261122b565b60408051808201909152601a81527f43726f7373436861696e456e61626c656454454e2e6e6f6e63650000000000006020909101527f896d106647b57d520a34062c7c0dde769b7551e327629f69d5e9844e20c864625f526001600160a01b0316630d3fd67c837fe7fbfe9855ab39eb2e984ddc0938c4134151cf94d8a54d4770b35b584ad4bd008054905f6116b783612cec565b919050558688866040518663ffffffff1660e01b81526004016116dd9493929190612d65565b60206040518083038185885af11580156116f9573d5f5f3e3d5ffd5b50505050506040513d601f19601f8201168201806040525081019061171e9190612dc5565b5050505050565b5f8281527f02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800602081815260408084206001600160a01b038616855290915282205460ff16156117c9575f848152602082815260408083206001600160a01b0387168085529252808320805460ff1916905551339287917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a46001915050610827565b5f915050610827565b5f8281527f02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800602081815260408084206001600160a01b038616855290915282205460ff166117c9575f848152602082815260408083206001600160a01b03871684529091529020805460ff1916600117905561184b3390565b6001600160a01b0316836001600160a01b0316857f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a46001915050610827565b61189d612180565b7fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300805460ff191681557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516118f6919061235e565b60405180910390a150565b5f807ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00610827565b60408051808201909152601e81527f43726f7373436861696e456e61626c656454454e2e6d657373656e67657200006020909101527fa8b5aada5c72138bb5566a3940e8fe06f59ef8af1e490446ba6ea7fa80395d525f527f3b49b3a570909bb4d324cb0ca029c61a2f4f7251edd27af783a6ad0285138200805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383161790556119d0610ab4565b6001600160a01b031663a1a227fa6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611a0b573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611a2f9190612ded565b604080518082018252601f81527f43726f7373436861696e456e61626c656454454e2e6d657373616765427573006020918201527f6c6664e79adefe2c614a8e3c94fc27135b7678c3722965a80d01e330dd948d00805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0394909416939093179092558051808201909152601a81527f43726f7373436861696e456e61626c656454454e2e6e6f6e6365000000000000910152507f896d106647b57d520a34062c7c0dde769b7551e327629f69d5e9844e20c864625f9081527fe7fbfe9855ab39eb2e984ddc0938c4134151cf94d8a54d4770b35b584ad4bd0055565b611b326121db565b611b3a612219565b611b42612219565b611b4c5f826117d2565b50611b777f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a826117d2565b5061095a7f427da25fe773164f88948d3e215c94b6554e2ed5e5f203a821c9f2f6131cf75a826117d2565b7f02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b6268005f611bfb845f9081527f02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800602052604090206001015490565b5f85815260208490526040808220600101869055519192508491839187917fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9190a450505050565b6001600160a01b038616611c695760405162461bcd60e51b815260040161088590612e3c565b5f6040518060600160405280886001600160a01b0316815260200187815260200185815250604051602001611c9e9190612e94565b6040516020818303038152906040529050611cb761122b565b60408051808201909152601a81527f43726f7373436861696e456e61626c656454454e2e6e6f6e63650000000000006020909101527f896d106647b57d520a34062c7c0dde769b7551e327629f69d5e9844e20c864625f526001600160a01b0316630d3fd67c837fe7fbfe9855ab39eb2e984ddc0938c4134151cf94d8a54d4770b35b584ad4bd008054905f611d4c83612cec565b919050558885886040518663ffffffff1660e01b8152600401611d729493929190612d65565b60206040518083038185885af1158015611d8e573d5f5f3e3d5ffd5b50505050506040513d601f19601f82011682018060405250810190611db39190612dc5565b5050505050505050565b5f611dc6610ab4565b6001600160a01b0316336001600160a01b031614905090565b5f611de8610ab4565b6001600160a01b03166363012de56040518163ffffffff1660e01b8152600401602060405180830381865afa158015611e23573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611e479190612ded565b905090565b5f611e55610ab4565b6001600160a01b031663b859ce836040518163ffffffff1660e01b8152600401602060405180830381865afa158015611e23573d5f5f3e3d5ffd5b7f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f005c15611ee9576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61161860017f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f005b90612221565b611f21838284612228565b826001600160a01b0316816001600160a01b03167f2717ead6b9200dd235aad468c9809ea400fe33ac69b5bfaa6d3e90fc922b639884604051611f6491906123d1565b60405180910390a3505050565b5f826001600160a01b0316826040515f6040518083038185875af1925050503d805f8114611fba576040519150601f19603f3d011682016040523d82523d5f602084013e611fbf565b606091505b5050905080611fe05760405162461bcd60e51b815260040161088590612ed7565b5f6001600160a01b0316836001600160a01b03167f2717ead6b9200dd235aad468c9809ea400fe33ac69b5bfaa6d3e90fc922b639884604051611f6491906123d1565b6116185f7f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00611f10565b6120556115bc565b7fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300805460ff191660011781557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258336118e9565b6109da84856001600160a01b03166323b872dd8686866040516024016120d093929190612ee7565b604051602081830303815290604052915060e01b6020820180516001600160e01b03838183161783525050505061224e565b5f8281527f02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800602090815260408083206001600160a01b038516845290915290205460ff1661095a5780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401610885929190612f0f565b7fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f033005460ff16611618576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6121e36122ca565b611618576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6116186121db565b80825d5050565b61099283846001600160a01b031663a9059cbb85856040516024016120d0929190612f0f565b5f5f60205f8451602086015f885af18061226d576040513d5f823e3d81fd5b50505f513d91508115612284578060011415612291565b6001600160a01b0384163b155b156109da57836040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401610885919061235e565b5f6122d3611901565b5468010000000000000000900460ff16919050565b6001600160e01b031981165b8114610b71575f5ffd5b8035610827816122e8565b5f6020828403121561231c5761231c5f5ffd5b61232683836122fe565b9392505050565b8015155b82525050565b60208101610827828461232d565b5f6001600160a01b038216610827565b61233181612345565b602081016108278284612355565b6122f481612345565b80356108278161236c565b5f60208284031215612393576123935f5ffd5b6123268383612375565b806122f4565b80356108278161239d565b5f602082840312156123c1576123c15f5ffd5b61232683836123a3565b80612331565b6020810161082782846123cb565b5f5f604083850312156123f3576123f35f5ffd5b6123fd84846123a3565b915061240c8460208501612375565b90509250929050565b5f61082782612345565b5f61082782612415565b6123318161241f565b602081016108278284612429565b5f5f60408385031215612454576124545f5ffd5b6123fd8484612375565b5f5f83601f840112612471576124715f5ffd5b50813567ffffffffffffffff81111561248b5761248b5f5ffd5b6020830191508360018202830111156124a5576124a55f5ffd5b9250929050565b5f5f5f5f5f606086880312156124c3576124c35f5ffd5b6124cd8787612375565b9450602086013567ffffffffffffffff8111156124eb576124eb5f5ffd5b6124f78882890161245e565b9450945050604086013567ffffffffffffffff811115612518576125185f5ffd5b6125248882890161245e565b92509250509295509295909350565b5f5f5f60608486031215612548576125485f5ffd5b6125528585612375565b925061256185602086016123a3565b91506125708560408601612375565b90509250925092565b60148152602081017f4272696467652063616e6e6f7420626520307830000000000000000000000000815290505b60200190565b6020808252810161082781612579565b60228152602081017f52656d6f746520627269646765206164647265737320616c726561647920736581527f742e000000000000000000000000000000000000000000000000000000000000602082015290505b60400190565b60208082528101610827816125bd565b600f8152602081017f456d707479207472616e736665722e0000000000000000000000000000000000815290506125a7565b6020808252810161082781612627565b805161267583826123cb565b5060208101516109926020840182612355565b604081016108278284612669565b60178152602081017f4d657373656e6765722063616e6e6f7420626520307830000000000000000000815290506125a7565b6020808252810161082781612696565b60138152602081017f4f776e65722063616e6e6f742062652030783000000000000000000000000000815290506125a7565b60208082528101610827816126d8565b5f67ffffffffffffffff8216610827565b6123318161271a565b60208101610827828461272b565b60138152602081017f41737365742063616e6e6f742062652030783000000000000000000000000000815290506125a7565b6020808252810161082781612742565b60198152602081017f546f6b656e20616c72656164792077686974656c697374656400000000000000815290506125a7565b6020808252810161082781612784565b82818337505f910152565b8183526020830192506127e58284836127c6565b50601f01601f19160190565b606081016127ff8288612355565b81810360208301526128128186886127d1565b905081810360408301526128278184866127d1565b979650505050505050565b60188152602081017f496e76616c6964206d756c746973696720616464726573730000000000000000815290506125a7565b6020808252810161082781612832565b60188152602081017f546f6b656e206973206e6f742077686974656c69737465640000000000000000815290506125a7565b6020808252810161082781612874565b60308152602081017f436f6e74726163742063616c6c6572206973206e6f742074686520726567697381527f7465726564206d657373656e676572210000000000000000000000000000000060208201529050612611565b60208082528101610827816128b6565b60318152602081017f43726f737320636861696e206d65737361676520636f6d696e672066726f6d2081527f696e636f72726563742073656e6465722100000000000000000000000000000060208201529050612611565b602080825281016108278161291e565b60318152602081017f43726f737320636861696e206d65737361676520636f6d696e672066726f6d2081527f696e636f7272656374207461726765742100000000000000000000000000000060208201529050612611565b6020808252810161082781612986565b60258152602081017f417474656d7074696e6720746f20776974686472617720756e6b6e6f776e206181527f737365742e00000000000000000000000000000000000000000000000000000060208201529050612611565b60208082528101610827816129ee565b60178152602081017f4e65772061646d696e2063616e6e6f7420626520307830000000000000000000815290506125a7565b6020808252810161082781612a56565b60108152602081017f546f6b656e206973207061757365642e00000000000000000000000000000000815290506125a7565b6020808252810161082781612a98565b601a8152602081017f417474656d7074696e6720656d707479207472616e736665722e000000000000815290506125a7565b6020808252810161082781612ada565b6020808252810161082781604e81527f54686973206164647265737320686173206e6f74206265656e20676976656e2060208201527f61207479706520616e64206973207468757320636f6e73696465726564206e6f60408201527f742077686974656c69737465642e000000000000000000000000000000000000606082015260800190565b60608101612bb18286612355565b612bbe60208301856123cb565b612bcb6040830184612355565b949350505050565b60168152602081017f52656365697665722063616e6e6f742062652030783000000000000000000000815290506125a7565b6020808252810161082781612bd3565b602a8152602081017f5265636f76657279206f6e6c7920616c6c6f776564206f6e20617070726f766581527f6420746573746e6574730000000000000000000000000000000000000000000060208201529050612611565b6020808252810161082781612c15565b60178152602081017f4661696c656420746f207265636f766572204574686572000000000000000000815290506125a7565b6020808252810161082781612c7d565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f60018201612cfd57612cfd612cbf565b5060010190565b67ffffffffffffffff8116612331565b63ffffffff8116612331565b8281835e505f910152565b5f612d34825190565b808452602084019350612d4b818560208601612d20565b601f01601f19169290920192915050565b60ff8116612331565b60808101612d738287612d04565b612d806020830186612d14565b8181036040830152612d928185612d2b565b9050612da16060830184612d5c565b95945050505050565b67ffffffffffffffff81166122f4565b805161082781612daa565b5f60208284031215612dd857612dd85f5ffd5b6123268383612dba565b80516108278161236c565b5f60208284031215612e0057612e005f5ffd5b6123268383612de2565b60148152602081017f5461726765742063616e6e6f7420626520307830000000000000000000000000815290506125a7565b6020808252810161082781612e0a565b80515f906060840190612e5f8582612355565b5060208301518482036020860152612e778282612d2b565b9150506040830151612e8c60408601826123cb565b509392505050565b602080825281016123268184612e4c565b60148152602081017f4661696c656420746f2073656e64204574686572000000000000000000000000815290506125a7565b6020808252810161082781612ea5565b60608101612ef58286612355565b612f026020830185612355565b612bcb60408301846123cb565b60408101612f1d8285612355565b61232660208301846123cb56fea2646970667358221220149fbf16c4a600eeb77fef344c1cca04a78a9007dfabbe2905a8613a13bb351164736f6c634300081c0033",
}

// TenBridgeTestnetABI is the input ABI used to generate the binding from.
// Deprecated: Use TenBridgeTestnetMetaData.ABI instead.
var TenBridgeTestnetABI = TenBridgeTestnetMetaData.ABI

// TenBridgeTestnetBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use TenBridgeTestnetMetaData.Bin instead.
var TenBridgeTestnetBin = TenBridgeTestnetMetaData.Bin

// DeployTenBridgeTestnet deploys a new Ethereum contract, binding an instance of TenBridgeTestnet to it.
func DeployTenBridgeTestnet(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *TenBridgeTestnet, error) {
	parsed, err := TenBridgeTestnetMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(TenBridgeTestnetBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &TenBridgeTestnet{TenBridgeTestnetCaller: TenBridgeTestnetCaller{contract: contract}, TenBridgeTestnetTransactor: TenBridgeTestnetTransactor{contract: contract}, TenBridgeTestnetFilterer: TenBridgeTestnetFilterer{contract: contract}}, nil
}

// TenBridgeTestnet is an auto generated Go binding around an Ethereum contract.
type TenBridgeTestnet struct {
	TenBridgeTestnetCaller     // Read-only binding to the contract
	TenBridgeTestnetTransactor // Write-only binding to the contract
	TenBridgeTestnetFilterer   // Log filterer for contract events
}

// TenBridgeTestnetCaller is an auto generated read-only Go binding around an Ethereum contract.
type TenBridgeTestnetCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// TenBridgeTestnetTransactor is an auto generated write-only Go binding around an Ethereum contract.
type TenBridgeTestnetTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// TenBridgeTestnetFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type TenBridgeTestnetFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// TenBridgeTestnetSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type TenBridgeTestnetSession struct {
	Contract     *TenBridgeTestnet // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// TenBridgeTestnetCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type TenBridgeTestnetCallerSession struct {
	Contract *TenBridgeTestnetCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts           // Call options to use throughout this session
}

// TenBridgeTestnetTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type TenBridgeTestnetTransactorSession struct {
	Contract     *TenBridgeTestnetTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts           // Transaction auth options to use throughout this session
}

// TenBridgeTestnetRaw is an auto generated low-level Go binding around an Ethereum contract.
type TenBridgeTestnetRaw struct {
	Contract *TenBridgeTestnet // Generic contract binding to access the raw methods on
}

// TenBridgeTestnetCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type TenBridgeTestnetCallerRaw struct {
	Contract *TenBridgeTestnetCaller // Generic read-only contract binding to access the raw methods on
}

// TenBridgeTestnetTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type TenBridgeTestnetTransactorRaw struct {
	Contract *TenBridgeTestnetTransactor // Generic write-only contract binding to access the raw methods on
}

// NewTenBridgeTestnet creates a new instance of TenBridgeTestnet, bound to a specific deployed contract.
func NewTenBridgeTestnet(address common.Address, backend bind.ContractBackend) (*TenBridgeTestnet, error) {
	contract, err := bindTenBridgeTestnet(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &TenBridgeTestnet{TenBridgeTestnetCaller: TenBridgeTestnetCaller{contract: contract}, TenBridgeTestnetTransactor: TenBridgeTestnetTransactor{contract: contract}, TenBridgeTestnetFilterer: TenBridgeTestnetFilterer{contract: contract}}, nil
}

// NewTenBridgeTestnetCaller creates a new read-only instance of TenBridgeTestnet, bound to a specific deployed contract.
func NewTenBridgeTestnetCaller(address common.Address, caller bind.ContractCaller) (*TenBridgeTestnetCaller, error) {
	contract, err := bindTenBridgeTestnet(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &TenBridgeTestnetCaller{contract: contract}, nil
}

// NewTenBridgeTestnetTransactor creates a new write-only instance of TenBridgeTestnet, bound to a specific deployed contract.
func NewTenBridgeTestnetTransactor(address common.Address, transactor bind.ContractTransactor) (*TenBridgeTestnetTransactor, error) {
	contract, err := bindTenBridgeTestnet(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &TenBridgeTestnetTransactor{contract: contract}, nil
}

// NewTenBridgeTestnetFilterer creates a new log filterer instance of TenBridgeTestnet, bound to a specific deployed contract.
func NewTenBridgeTestnetFilterer(address common.Address, filterer bind.ContractFilterer) (*TenBridgeTestnetFilterer, error) {
	contract, err := bindTenBridgeTestnet(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &TenBridgeTestnetFilterer{contract: contract}, nil
}

// bindTenBridgeTestnet binds a generic wrapper to an already deployed contract.
func bindTenBridgeTestnet(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := TenBridgeTestnetMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_TenBridgeTestnet *TenBridgeTestnetRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _TenBridgeTestnet.Contract.TenBridgeTestnetCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_TenBridgeTestnet *TenBridgeTestnetRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _TenBridgeTestnet.Contract.TenBridgeTestnetTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_TenBridgeTestnet *TenBridgeTestnetRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _TenBridgeTestnet.Contract.TenBridgeTestnetTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_TenBridgeTestnet *TenBridgeTestnetCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _TenBridgeTestnet.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_TenBridgeTestnet *TenBridgeTestnetTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _TenBridgeTestnet.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_TenBridgeTestnet *TenBridgeTestnetTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _TenBridgeTestnet.Contract.contract.Transact(opts, method, params...)
}

// ADMINROLE is a free data retrieval call binding the contract method 0x75b238fc.
//
// Solidity: function ADMIN_ROLE() view returns(bytes32)
func (_TenBridgeTestnet *TenBridgeTestnetCaller) ADMINROLE(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _TenBridgeTestnet.contract.Call(opts, &out, "ADMIN_ROLE")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// ADMINROLE is a free data retrieval call binding the contract method 0x75b238fc.
//
// Solidity: function ADMIN_ROLE() view returns(bytes32)
func (_TenBridgeTestnet *TenBridgeTestnetSession) ADMINROLE() ([32]byte, error) {
	return _TenBridgeTestnet.Contract.ADMINROLE(&_TenBridgeTestnet.CallOpts)
}

// ADMINROLE is a free data retrieval call binding the contract method 0x75b238fc.
//
// Solidity: function ADMIN_ROLE() view returns(bytes32)
func (_TenBridgeTestnet *TenBridgeTestnetCallerSession) ADMINROLE() ([32]byte, error) {
	return _TenBridgeTestnet.Contract.ADMINROLE(&_TenBridgeTestnet.CallOpts)
}

// DEFAULTADMINROLE is a free data retrieval call binding the contract method 0xa217fddf.
//
// Solidity: function DEFAULT_ADMIN_ROLE() view returns(bytes32)
func (_TenBridgeTestnet *TenBridgeTestnetCaller) DEFAULTADMINROLE(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _TenBridgeTestnet.contract.Call(opts, &out, "DEFAULT_ADMIN_ROLE")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// DEFAULTADMINROLE is a free data retrieval call binding the contract method 0xa217fddf.
//
// Solidity: function DEFAULT_ADMIN_ROLE() view returns(bytes32)
func (_TenBridgeTestnet *TenBridgeTestnetSession) DEFAULTADMINROLE() ([32]byte, error) {
	return _TenBridgeTestnet.Contract.DEFAULTADMINROLE(&_TenBridgeTestnet.CallOpts)
}

// DEFAULTADMINROLE is a free data retrieval call binding the contract method 0xa217fddf.
//
// Solidity: function DEFAULT_ADMIN_ROLE() view returns(bytes32)
func (_TenBridgeTestnet *TenBridgeTestnetCallerSession) DEFAULTADMINROLE() ([32]byte, error) {
	return _TenBridgeTestnet.Contract.DEFAULTADMINROLE(&_TenBridgeTestnet.CallOpts)
}

// ERC20TOKENROLE is a free data retrieval call binding the contract method 0x5d872970.
//
// Solidity: function ERC20_TOKEN_ROLE() view returns(bytes32)
func (_TenBridgeTestnet *TenBridgeTestnetCaller) ERC20TOKENROLE(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _TenBridgeTestnet.contract.Call(opts, &out, "ERC20_TOKEN_ROLE")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// ERC20TOKENROLE is a free data retrieval call binding the contract method 0x5d872970.
//
// Solidity: function ERC20_TOKEN_ROLE() view returns(bytes32)
func (_TenBridgeTestnet *TenBridgeTestnetSession) ERC20TOKENROLE() ([32]byte, error) {
	return _TenBridgeTestnet.Contract.ERC20TOKENROLE(&_TenBridgeTestnet.CallOpts)
}

// ERC20TOKENROLE is a free data retrieval call binding the contract method 0x5d872970.
//
// Solidity: function ERC20_TOKEN_ROLE() view returns(bytes32)
func (_TenBridgeTestnet *TenBridgeTestnetCallerSession) ERC20TOKENROLE() ([32]byte, error) {
	return _TenBridgeTestnet.Contract.ERC20TOKENROLE(&_TenBridgeTestnet.CallOpts)
}

// NATIVETOKENROLE is a free data retrieval call binding the contract method 0xe4c3ebc7.
//
// Solidity: function NATIVE_TOKEN_ROLE() view returns(bytes32)
func (_TenBridgeTestnet *TenBridgeTestnetCaller) NATIVETOKENROLE(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _TenBridgeTestnet.contract.Call(opts, &out, "NATIVE_TOKEN_ROLE")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// NATIVETOKENROLE is a free data retrieval call binding the contract method 0xe4c3ebc7.
//
// Solidity: function NATIVE_TOKEN_ROLE() view returns(bytes32)
func (_TenBridgeTestnet *TenBridgeTestnetSession) NATIVETOKENROLE() ([32]byte, error) {
	return _TenBridgeTestnet.Contract.NATIVETOKENROLE(&_TenBridgeTestnet.CallOpts)
}

// NATIVETOKENROLE is a free data retrieval call binding the contract method 0xe4c3ebc7.
//
// Solidity: function NATIVE_TOKEN_ROLE() view returns(bytes32)
func (_TenBridgeTestnet *TenBridgeTestnetCallerSession) NATIVETOKENROLE() ([32]byte, error) {
	return _TenBridgeTestnet.Contract.NATIVETOKENROLE(&_TenBridgeTestnet.CallOpts)
}

// PAUSERROLE is a free data retrieval call binding the contract method 0xe63ab1e9.
//
// Solidity: function PAUSER_ROLE() view returns(bytes32)
func (_TenBridgeTestnet *TenBridgeTestnetCaller) PAUSERROLE(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _TenBridgeTestnet.contract.Call(opts, &out, "PAUSER_ROLE")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// PAUSERROLE is a free data retrieval call binding the contract method 0xe63ab1e9.
//
// Solidity: function PAUSER_ROLE() view returns(bytes32)
func (_TenBridgeTestnet *TenBridgeTestnetSession) PAUSERROLE() ([32]byte, error) {
	return _TenBridgeTestnet.Contract.PAUSERROLE(&_TenBridgeTestnet.CallOpts)
}

// PAUSERROLE is a free data retrieval call binding the contract method 0xe63ab1e9.
//
// Solidity: function PAUSER_ROLE() view returns(bytes32)
func (_TenBridgeTestnet *TenBridgeTestnetCallerSession) PAUSERROLE() ([32]byte, error) {
	return _TenBridgeTestnet.Contract.PAUSERROLE(&_TenBridgeTestnet.CallOpts)
}

// SUSPENDEDERC20ROLE is a free data retrieval call binding the contract method 0x5ccc9613.
//
// Solidity: function SUSPENDED_ERC20_ROLE() view returns(bytes32)
func (_TenBridgeTestnet *TenBridgeTestnetCaller) SUSPENDEDERC20ROLE(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _TenBridgeTestnet.contract.Call(opts, &out, "SUSPENDED_ERC20_ROLE")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// SUSPENDEDERC20ROLE is a free data retrieval call binding the contract method 0x5ccc9613.
//
// Solidity: function SUSPENDED_ERC20_ROLE() view returns(bytes32)
func (_TenBridgeTestnet *TenBridgeTestnetSession) SUSPENDEDERC20ROLE() ([32]byte, error) {
	return _TenBridgeTestnet.Contract.SUSPENDEDERC20ROLE(&_TenBridgeTestnet.CallOpts)
}

// SUSPENDEDERC20ROLE is a free data retrieval call binding the contract method 0x5ccc9613.
//
// Solidity: function SUSPENDED_ERC20_ROLE() view returns(bytes32)
func (_TenBridgeTestnet *TenBridgeTestnetCallerSession) SUSPENDEDERC20ROLE() ([32]byte, error) {
	return _TenBridgeTestnet.Contract.SUSPENDEDERC20ROLE(&_TenBridgeTestnet.CallOpts)
}

// UNPAUSERROLE is a free data retrieval call binding the contract method 0xfb1bb9de.
//
// Solidity: function UNPAUSER_ROLE() view returns(bytes32)
func (_TenBridgeTestnet *TenBridgeTestnetCaller) UNPAUSERROLE(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _TenBridgeTestnet.contract.Call(opts, &out, "UNPAUSER_ROLE")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// UNPAUSERROLE is a free data retrieval call binding the contract method 0xfb1bb9de.
//
// Solidity: function UNPAUSER_ROLE() view returns(bytes32)
func (_TenBridgeTestnet *TenBridgeTestnetSession) UNPAUSERROLE() ([32]byte, error) {
	return _TenBridgeTestnet.Contract.UNPAUSERROLE(&_TenBridgeTestnet.CallOpts)
}

// UNPAUSERROLE is a free data retrieval call binding the contract method 0xfb1bb9de.
//
// Solidity: function UNPAUSER_ROLE() view returns(bytes32)
func (_TenBridgeTestnet *TenBridgeTestnetCallerSession) UNPAUSERROLE() ([32]byte, error) {
	return _TenBridgeTestnet.Contract.UNPAUSERROLE(&_TenBridgeTestnet.CallOpts)
}

// GetRoleAdmin is a free data retrieval call binding the contract method 0x248a9ca3.
//
// Solidity: function getRoleAdmin(bytes32 role) view returns(bytes32)
func (_TenBridgeTestnet *TenBridgeTestnetCaller) GetRoleAdmin(opts *bind.CallOpts, role [32]byte) ([32]byte, error) {
	var out []interface{}
	err := _TenBridgeTestnet.contract.Call(opts, &out, "getRoleAdmin", role)

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// GetRoleAdmin is a free data retrieval call binding the contract method 0x248a9ca3.
//
// Solidity: function getRoleAdmin(bytes32 role) view returns(bytes32)
func (_TenBridgeTestnet *TenBridgeTestnetSession) GetRoleAdmin(role [32]byte) ([32]byte, error) {
	return _TenBridgeTestnet.Contract.GetRoleAdmin(&_TenBridgeTestnet.CallOpts, role)
}

// GetRoleAdmin is a free data retrieval call binding the contract method 0x248a9ca3.
//
// Solidity: function getRoleAdmin(bytes32 role) view returns(bytes32)
func (_TenBridgeTestnet *TenBridgeTestnetCallerSession) GetRoleAdmin(role [32]byte) ([32]byte, error) {
	return _TenBridgeTestnet.Contract.GetRoleAdmin(&_TenBridgeTestnet.CallOpts, role)
}

// HasRole is a free data retrieval call binding the contract method 0x91d14854.
//
// Solidity: function hasRole(bytes32 role, address account) view returns(bool)
func (_TenBridgeTestnet *TenBridgeTestnetCaller) HasRole(opts *bind.CallOpts, role [32]byte, account common.Address) (bool, error) {
	var out []interface{}
	err := _TenBridgeTestnet.contract.Call(opts, &out, "hasRole", role, account)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// HasRole is a free data retrieval call binding the contract method 0x91d14854.
//
// Solidity: function hasRole(bytes32 role, address account) view returns(bool)
func (_TenBridgeTestnet *TenBridgeTestnetSession) HasRole(role [32]byte, account common.Address) (bool, error) {
	return _TenBridgeTestnet.Contract.HasRole(&_TenBridgeTestnet.CallOpts, role, account)
}

// HasRole is a free data retrieval call binding the contract method 0x91d14854.
//
// Solidity: function hasRole(bytes32 role, address account) view returns(bool)
func (_TenBridgeTestnet *TenBridgeTestnetCallerSession) HasRole(role [32]byte, account common.Address) (bool, error) {
	return _TenBridgeTestnet.Contract.HasRole(&_TenBridgeTestnet.CallOpts, role, account)
}

// MessageBus is a free data retrieval call binding the contract method 0xa1a227fa.
//
// Solidity: function messageBus() view returns(address)
func (_TenBridgeTestnet *TenBridgeTestnetCaller) MessageBus(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _TenBridgeTestnet.contract.Call(opts, &out, "messageBus")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// MessageBus is a free data retrieval call binding the contract method 0xa1a227fa.
//
// Solidity: function messageBus() view returns(address)
func (_TenBridgeTestnet *TenBridgeTestnetSession) MessageBus() (common.Address, error) {
	return _TenBridgeTestnet.Contract.MessageBus(&_TenBridgeTestnet.CallOpts)
}

// MessageBus is a free data retrieval call binding the contract method 0xa1a227fa.
//
// Solidity: function messageBus() view returns(address)
func (_TenBridgeTestnet *TenBridgeTestnetCallerSession) MessageBus() (common.Address, error) {
	return _TenBridgeTestnet.Contract.MessageBus(&_TenBridgeTestnet.CallOpts)
}

// Messenger is a free data retrieval call binding the contract method 0x3cb747bf.
//
// Solidity: function messenger() view returns(address)
func (_TenBridgeTestnet *TenBridgeTestnetCaller) Messenger(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _TenBridgeTestnet.contract.Call(opts, &out, "messenger")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Messenger is a free data retrieval call binding the contract method 0x3cb747bf.
//
// Solidity: function messenger() view returns(address)
func (_TenBridgeTestnet *TenBridgeTestnetSession) Messenger() (common.Address, error) {
	return _TenBridgeTestnet.Contract.Messenger(&_TenBridgeTestnet.CallOpts)
}

// Messenger is a free data retrieval call binding the contract method 0x3cb747bf.
//
// Solidity: function messenger() view returns(address)
func (_TenBridgeTestnet *TenBridgeTestnetCallerSession) Messenger() (common.Address, error) {
	return _TenBridgeTestnet.Contract.Messenger(&_TenBridgeTestnet.CallOpts)
}

// Nonce is a free data retrieval call binding the contract method 0xaffed0e0.
//
// Solidity: function nonce() view returns(uint256)
func (_TenBridgeTestnet *TenBridgeTestnetCaller) Nonce(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _TenBridgeTestnet.contract.Call(opts, &out, "nonce")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// Nonce is a free data retrieval call binding the contract method 0xaffed0e0.
//
// Solidity: function nonce() view returns(uint256)
func (_TenBridgeTestnet *TenBridgeTestnetSession) Nonce() (*big.Int, error) {
	return _TenBridgeTestnet.Contract.Nonce(&_TenBridgeTestnet.CallOpts)
}

// Nonce is a free data retrieval call binding the contract method 0xaffed0e0.
//
// Solidity: function nonce() view returns(uint256)
func (_TenBridgeTestnet *TenBridgeTestnetCallerSession) Nonce() (*big.Int, error) {
	return _TenBridgeTestnet.Contract.Nonce(&_TenBridgeTestnet.CallOpts)
}

// Paused is a free data retrieval call binding the contract method 0x5c975abb.
//
// Solidity: function paused() view returns(bool)
func (_TenBridgeTestnet *TenBridgeTestnetCaller) Paused(opts *bind.CallOpts) (bool, error) {
	var out []interface{}
	err := _TenBridgeTestnet.contract.Call(opts, &out, "paused")

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// Paused is a free data retrieval call binding the contract method 0x5c975abb.
//
// Solidity: function paused() view returns(bool)
func (_TenBridgeTestnet *TenBridgeTestnetSession) Paused() (bool, error) {
	return _TenBridgeTestnet.Contract.Paused(&_TenBridgeTestnet.CallOpts)
}

// Paused is a free data retrieval call binding the contract method 0x5c975abb.
//
// Solidity: function paused() view returns(bool)
func (_TenBridgeTestnet *TenBridgeTestnetCallerSession) Paused() (bool, error) {
	return _TenBridgeTestnet.Contract.Paused(&_TenBridgeTestnet.CallOpts)
}

// RemoteBridgeAddress is a free data retrieval call binding the contract method 0x0f0a9a4b.
//
// Solidity: function remoteBridgeAddress() view returns(address)
func (_TenBridgeTestnet *TenBridgeTestnetCaller) RemoteBridgeAddress(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _TenBridgeTestnet.contract.Call(opts, &out, "remoteBridgeAddress")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// RemoteBridgeAddress is a free data retrieval call binding the contract method 0x0f0a9a4b.
//
// Solidity: function remoteBridgeAddress() view returns(address)
func (_TenBridgeTestnet *TenBridgeTestnetSession) RemoteBridgeAddress() (common.Address, error) {
	return _TenBridgeTestnet.Contract.RemoteBridgeAddress(&_TenBridgeTestnet.CallOpts)
}

// RemoteBridgeAddress is a free data retrieval call binding the contract method 0x0f0a9a4b.
//
// Solidity: function remoteBridgeAddress() view returns(address)
func (_TenBridgeTestnet *TenBridgeTestnetCallerSession) RemoteBridgeAddress() (common.Address, error) {
	return _TenBridgeTestnet.Contract.RemoteBridgeAddress(&_TenBridgeTestnet.CallOpts)
}

// SupportsInterface is a free data retrieval call binding the contract method 0x01ffc9a7.
//
// Solidity: function supportsInterface(bytes4 interfaceId) view returns(bool)
func (_TenBridgeTestnet *TenBridgeTestnetCaller) SupportsInterface(opts *bind.CallOpts, interfaceId [4]byte) (bool, error) {
	var out []interface{}
	err := _TenBridgeTestnet.contract.Call(opts, &out, "supportsInterface", interfaceId)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// SupportsInterface is a free data retrieval call binding the contract method 0x01ffc9a7.
//
// Solidity: function supportsInterface(bytes4 interfaceId) view returns(bool)
func (_TenBridgeTestnet *TenBridgeTestnetSession) SupportsInterface(interfaceId [4]byte) (bool, error) {
	return _TenBridgeTestnet.Contract.SupportsInterface(&_TenBridgeTestnet.CallOpts, interfaceId)
}

// SupportsInterface is a free data retrieval call binding the contract method 0x01ffc9a7.
//
// Solidity: function supportsInterface(bytes4 interfaceId) view returns(bool)
func (_TenBridgeTestnet *TenBridgeTestnetCallerSession) SupportsInterface(interfaceId [4]byte) (bool, error) {
	return _TenBridgeTestnet.Contract.SupportsInterface(&_TenBridgeTestnet.CallOpts, interfaceId)
}

// GrantPauserRole is a paid mutator transaction binding the contract method 0x6c11c21c.
//
// Solidity: function grantPauserRole(address account) returns()
func (_TenBridgeTestnet *TenBridgeTestnetTransactor) GrantPauserRole(opts *bind.TransactOpts, account common.Address) (*types.Transaction, error) {
	return _TenBridgeTestnet.contract.Transact(opts, "grantPauserRole", account)
}

// GrantPauserRole is a paid mutator transaction binding the contract method 0x6c11c21c.
//
// Solidity: function grantPauserRole(address account) returns()
func (_TenBridgeTestnet *TenBridgeTestnetSession) GrantPauserRole(account common.Address) (*types.Transaction, error) {
	return _TenBridgeTestnet.Contract.GrantPauserRole(&_TenBridgeTestnet.TransactOpts, account)
}

// GrantPauserRole is a paid mutator transaction binding the contract method 0x6c11c21c.
//
// Solidity: function grantPauserRole(address account) returns()
func (_TenBridgeTestnet *TenBridgeTestnetTransactorSession) GrantPauserRole(account common.Address) (*types.Transaction, error) {
	return _TenBridgeTestnet.Contract.GrantPauserRole(&_TenBridgeTestnet.TransactOpts, account)
}

// GrantRole is a paid mutator transaction binding the contract method 0x2f2ff15d.
//
// Solidity: function grantRole(bytes32 role, address account) returns()
func (_TenBridgeTestnet *TenBridgeTestnetTransactor) GrantRole(opts *bind.TransactOpts, role [32]byte, account common.Address) (*types.Transaction, error) {
	return _TenBridgeTestnet.contract.Transact(opts, "grantRole", role, account)
}

// GrantRole is a paid mutator transaction binding the contract method 0x2f2ff15d.
//
// Solidity: function grantRole(bytes32 role, address account) returns()
func (_TenBridgeTestnet *TenBridgeTestnetSession) GrantRole(role [32]byte, account common.Address) (*types.Transaction, error) {
	return _TenBridgeTestnet.Contract.GrantRole(&_TenBridgeTestnet.TransactOpts, role, account)
}

// GrantRole is a paid mutator transaction binding the contract method 0x2f2ff15d.
//
// Solidity: function grantRole(bytes32 role, address account) returns()
func (_TenBridgeTestnet *TenBridgeTestnetTransactorSession) GrantRole(role [32]byte, account common.Address) (*types.Transaction, error) {
	return _TenBridgeTestnet.Contract.GrantRole(&_TenBridgeTestnet.TransactOpts, role, account)
}

// GrantUnpauserRole is a paid mutator transaction binding the contract method 0x32968782.
//
// Solidity: function grantUnpauserRole(address account) returns()
func (_TenBridgeTestnet *TenBridgeTestnetTransactor) GrantUnpauserRole(opts *bind.TransactOpts, account common.Address) (*types.Transaction, error) {
	return _TenBridgeTestnet.contract.Transact(opts, "grantUnpauserRole", account)
}

// GrantUnpauserRole is a paid mutator transaction binding the contract method 0x32968782.
//
// Solidity: function grantUnpauserRole(address account) returns()
func (_TenBridgeTestnet *TenBridgeTestnetSession) GrantUnpauserRole(account common.Address) (*types.Transaction, error) {
	return _TenBridgeTestnet.Contract.GrantUnpauserRole(&_TenBridgeTestnet.TransactOpts, account)
}

// GrantUnpauserRole is a paid mutator transaction binding the contract method 0x32968782.
//
// Solidity: function grantUnpauserRole(address account) returns()
func (_TenBridgeTestnet *TenBridgeTestnetTransactorSession) GrantUnpauserRole(account common.Address) (*types.Transaction, error) {
	return _TenBridgeTestnet.Contract.GrantUnpauserRole(&_TenBridgeTestnet.TransactOpts, account)
}

// Initialize is a paid mutator transaction binding the contract method 0x485cc955.
//
// Solidity: function initialize(address messenger, address _owner) returns()
func (_TenBridgeTestnet *TenBridgeTestnetTransactor) Initialize(opts *bind.TransactOpts, messenger common.Address, _owner common.Address) (*types.Transaction, error) {
	return _TenBridgeTestnet.contract.Transact(opts, "initialize", messenger, _owner)
}

// Initialize is a paid mutator transaction binding the contract method 0x485cc955.
//
// Solidity: function initialize(address messenger, address _owner) returns()
func (_TenBridgeTestnet *TenBridgeTestnetSession) Initialize(messenger common.Address, _owner common.Address) (*types.Transaction, error) {
	return _TenBridgeTestnet.Contract.Initialize(&_TenBridgeTestnet.TransactOpts, messenger, _owner)
}

// Initialize is a paid mutator transaction binding the contract method 0x485cc955.
//
// Solidity: function initialize(address messenger, address _owner) returns()
func (_TenBridgeTestnet *TenBridgeTestnetTransactorSession) Initialize(messenger common.Address, _owner common.Address) (*types.Transaction, error) {
	return _TenBridgeTestnet.Contract.Initialize(&_TenBridgeTestnet.TransactOpts, messenger, _owner)
}

// Pause is a paid mutator transaction binding the contract method 0x8456cb59.
//
// Solidity: function pause() returns()
func (_TenBridgeTestnet *TenBridgeTestnetTransactor) Pause(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _TenBridgeTestnet.contract.Transact(opts, "pause")
}

// Pause is a paid mutator transaction binding the contract method 0x8456cb59.
//
// Solidity: function pause() returns()
func (_TenBridgeTestnet *TenBridgeTestnetSession) Pause() (*types.Transaction, error) {
	return _TenBridgeTestnet.Contract.Pause(&_TenBridgeTestnet.TransactOpts)
}

// Pause is a paid mutator transaction binding the contract method 0x8456cb59.
//
// Solidity: function pause() returns()
func (_TenBridgeTestnet *TenBridgeTestnetTransactorSession) Pause() (*types.Transaction, error) {
	return _TenBridgeTestnet.Contract.Pause(&_TenBridgeTestnet.TransactOpts)
}

// PauseToken is a paid mutator transaction binding the contract method 0x7c41ad2c.
//
// Solidity: function pauseToken(address asset) returns()
func (_TenBridgeTestnet *TenBridgeTestnetTransactor) PauseToken(opts *bind.TransactOpts, asset common.Address) (*types.Transaction, error) {
	return _TenBridgeTestnet.contract.Transact(opts, "pauseToken", asset)
}

// PauseToken is a paid mutator transaction binding the contract method 0x7c41ad2c.
//
// Solidity: function pauseToken(address asset) returns()
func (_TenBridgeTestnet *TenBridgeTestnetSession) PauseToken(asset common.Address) (*types.Transaction, error) {
	return _TenBridgeTestnet.Contract.PauseToken(&_TenBridgeTestnet.TransactOpts, asset)
}

// PauseToken is a paid mutator transaction binding the contract method 0x7c41ad2c.
//
// Solidity: function pauseToken(address asset) returns()
func (_TenBridgeTestnet *TenBridgeTestnetTransactorSession) PauseToken(asset common.Address) (*types.Transaction, error) {
	return _TenBridgeTestnet.Contract.PauseToken(&_TenBridgeTestnet.TransactOpts, asset)
}

// PromoteToAdmin is a paid mutator transaction binding the contract method 0x93b37442.
//
// Solidity: function promoteToAdmin(address newAdmin) returns()
func (_TenBridgeTestnet *TenBridgeTestnetTransactor) PromoteToAdmin(opts *bind.TransactOpts, newAdmin common.Address) (*types.Transaction, error) {
	return _TenBridgeTestnet.contract.Transact(opts, "promoteToAdmin", newAdmin)
}

// PromoteToAdmin is a paid mutator transaction binding the contract method 0x93b37442.
//
// Solidity: function promoteToAdmin(address newAdmin) returns()
func (_TenBridgeTestnet *TenBridgeTestnetSession) PromoteToAdmin(newAdmin common.Address) (*types.Transaction, error) {
	return _TenBridgeTestnet.Contract.PromoteToAdmin(&_TenBridgeTestnet.TransactOpts, newAdmin)
}

// PromoteToAdmin is a paid mutator transaction binding the contract method 0x93b37442.
//
// Solidity: function promoteToAdmin(address newAdmin) returns()
func (_TenBridgeTestnet *TenBridgeTestnetTransactorSession) PromoteToAdmin(newAdmin common.Address) (*types.Transaction, error) {
	return _TenBridgeTestnet.Contract.PromoteToAdmin(&_TenBridgeTestnet.TransactOpts, newAdmin)
}

// ReceiveAssets is a paid mutator transaction binding the contract method 0x83bece4d.
//
// Solidity: function receiveAssets(address asset, uint256 amount, address receiver) returns()
func (_TenBridgeTestnet *TenBridgeTestnetTransactor) ReceiveAssets(opts *bind.TransactOpts, asset common.Address, amount *big.Int, receiver common.Address) (*types.Transaction, error) {
	return _TenBridgeTestnet.contract.Transact(opts, "receiveAssets", asset, amount, receiver)
}

// ReceiveAssets is a paid mutator transaction binding the contract method 0x83bece4d.
//
// Solidity: function receiveAssets(address asset, uint256 amount, address receiver) returns()
func (_TenBridgeTestnet *TenBridgeTestnetSession) ReceiveAssets(asset common.Address, amount *big.Int, receiver common.Address) (*types.Transaction, error) {
	return _TenBridgeTestnet.Contract.ReceiveAssets(&_TenBridgeTestnet.TransactOpts, asset, amount, receiver)
}

// ReceiveAssets is a paid mutator transaction binding the contract method 0x83bece4d.
//
// Solidity: function receiveAssets(address asset, uint256 amount, address receiver) returns()
func (_TenBridgeTestnet *TenBridgeTestnetTransactorSession) ReceiveAssets(asset common.Address, amount *big.Int, receiver common.Address) (*types.Transaction, error) {
	return _TenBridgeTestnet.Contract.ReceiveAssets(&_TenBridgeTestnet.TransactOpts, asset, amount, receiver)
}

// RecoverTestnetFunds is a paid mutator transaction binding the contract method 0xc091a58b.
//
// Solidity: function recoverTestnetFunds(address receiver) returns()
func (_TenBridgeTestnet *TenBridgeTestnetTransactor) RecoverTestnetFunds(opts *bind.TransactOpts, receiver common.Address) (*types.Transaction, error) {
	return _TenBridgeTestnet.contract.Transact(opts, "recoverTestnetFunds", receiver)
}

// RecoverTestnetFunds is a paid mutator transaction binding the contract method 0xc091a58b.
//
// Solidity: function recoverTestnetFunds(address receiver) returns()
func (_TenBridgeTestnet *TenBridgeTestnetSession) RecoverTestnetFunds(receiver common.Address) (*types.Transaction, error) {
	return _TenBridgeTestnet.Contract.RecoverTestnetFunds(&_TenBridgeTestnet.TransactOpts, receiver)
}

// RecoverTestnetFunds is a paid mutator transaction binding the contract method 0xc091a58b.
//
// Solidity: function recoverTestnetFunds(address receiver) returns()
func (_TenBridgeTestnet *TenBridgeTestnetTransactorSession) RecoverTestnetFunds(receiver common.Address) (*types.Transaction, error) {
	return _TenBridgeTestnet.Contract.RecoverTestnetFunds(&_TenBridgeTestnet.TransactOpts, receiver)
}

// RenounceRole is a paid mutator transaction binding the contract method 0x36568abe.
//
// Solidity: function renounceRole(bytes32 role, address callerConfirmation) returns()
func (_TenBridgeTestnet *TenBridgeTestnetTransactor) RenounceRole(opts *bind.TransactOpts, role [32]byte, callerConfirmation common.Address) (*types.Transaction, error) {
	return _TenBridgeTestnet.contract.Transact(opts, "renounceRole", role, callerConfirmation)
}

// RenounceRole is a paid mutator transaction binding the contract method 0x36568abe.
//
// Solidity: function renounceRole(bytes32 role, address callerConfirmation) returns()
func (_TenBridgeTestnet *TenBridgeTestnetSession) RenounceRole(role [32]byte, callerConfirmation common.Address) (*types.Transaction, error) {
	return _TenBridgeTestnet.Contract.RenounceRole(&_TenBridgeTestnet.TransactOpts, role, callerConfirmation)
}

// RenounceRole is a paid mutator transaction binding the contract method 0x36568abe.
//
// Solidity: function renounceRole(bytes32 role, address callerConfirmation) returns()
func (_TenBridgeTestnet *TenBridgeTestnetTransactorSession) RenounceRole(role [32]byte, callerConfirmation common.Address) (*types.Transaction, error) {
	return _TenBridgeTestnet.Contract.RenounceRole(&_TenBridgeTestnet.TransactOpts, role, callerConfirmation)
}

// RevokePauserRole is a paid mutator transaction binding the contract method 0xf865af08.
//
// Solidity: function revokePauserRole(address account) returns()
func (_TenBridgeTestnet *TenBridgeTestnetTransactor) RevokePauserRole(opts *bind.TransactOpts, account common.Address) (*types.Transaction, error) {
	return _TenBridgeTestnet.contract.Transact(opts, "revokePauserRole", account)
}

// RevokePauserRole is a paid mutator transaction binding the contract method 0xf865af08.
//
// Solidity: function revokePauserRole(address account) returns()
func (_TenBridgeTestnet *TenBridgeTestnetSession) RevokePauserRole(account common.Address) (*types.Transaction, error) {
	return _TenBridgeTestnet.Contract.RevokePauserRole(&_TenBridgeTestnet.TransactOpts, account)
}

// RevokePauserRole is a paid mutator transaction binding the contract method 0xf865af08.
//
// Solidity: function revokePauserRole(address account) returns()
func (_TenBridgeTestnet *TenBridgeTestnetTransactorSession) RevokePauserRole(account common.Address) (*types.Transaction, error) {
	return _TenBridgeTestnet.Contract.RevokePauserRole(&_TenBridgeTestnet.TransactOpts, account)
}

// RevokeRole is a paid mutator transaction binding the contract method 0xd547741f.
//
// Solidity: function revokeRole(bytes32 role, address account) returns()
func (_TenBridgeTestnet *TenBridgeTestnetTransactor) RevokeRole(opts *bind.TransactOpts, role [32]byte, account common.Address) (*types.Transaction, error) {
	return _TenBridgeTestnet.contract.Transact(opts, "revokeRole", role, account)
}

// RevokeRole is a paid mutator transaction binding the contract method 0xd547741f.
//
// Solidity: function revokeRole(bytes32 role, address account) returns()
func (_TenBridgeTestnet *TenBridgeTestnetSession) RevokeRole(role [32]byte, account common.Address) (*types.Transaction, error) {
	return _TenBridgeTestnet.Contract.RevokeRole(&_TenBridgeTestnet.TransactOpts, role, account)
}

// RevokeRole is a paid mutator transaction binding the contract method 0xd547741f.
//
// Solidity: function revokeRole(bytes32 role, address account) returns()
func (_TenBridgeTestnet *TenBridgeTestnetTransactorSession) RevokeRole(role [32]byte, account common.Address) (*types.Transaction, error) {
	return _TenBridgeTestnet.Contract.RevokeRole(&_TenBridgeTestnet.TransactOpts, role, account)
}

// RevokeUnpauserRole is a paid mutator transaction binding the contract method 0x2540e2da.
//
// Solidity: function revokeUnpauserRole(address account) returns()
func (_TenBridgeTestnet *TenBridgeTestnetTransactor) RevokeUnpauserRole(opts *bind.TransactOpts, account common.Address) (*types.Transaction, error) {
	return _TenBridgeTestnet.contract.Transact(opts, "revokeUnpauserRole", account)
}

// RevokeUnpauserRole is a paid mutator transaction binding the contract method 0x2540e2da.
//
// Solidity: function revokeUnpauserRole(address account) returns()
func (_TenBridgeTestnet *TenBridgeTestnetSession) RevokeUnpauserRole(account common.Address) (*types.Transaction, error) {
	return _TenBridgeTestnet.Contract.RevokeUnpauserRole(&_TenBridgeTestnet.TransactOpts, account)
}

// RevokeUnpauserRole is a paid mutator transaction binding the contract method 0x2540e2da.
//
// Solidity: function revokeUnpauserRole(address account) returns()
func (_TenBridgeTestnet *TenBridgeTestnetTransactorSession) RevokeUnpauserRole(account common.Address) (*types.Transaction, error) {
	return _TenBridgeTestnet.Contract.RevokeUnpauserRole(&_TenBridgeTestnet.TransactOpts, account)
}

// SendERC20 is a paid mutator transaction binding the contract method 0xa381c8e2.
//
// Solidity: function sendERC20(address asset, uint256 amount, address receiver) payable returns()
func (_TenBridgeTestnet *TenBridgeTestnetTransactor) SendERC20(opts *bind.TransactOpts, asset common.Address, amount *big.Int, receiver common.Address) (*types.Transaction, error) {
	return _TenBridgeTestnet.contract.Transact(opts, "sendERC20", asset, amount, receiver)
}

// SendERC20 is a paid mutator transaction binding the contract method 0xa381c8e2.
//
// Solidity: function sendERC20(address asset, uint256 amount, address receiver) payable returns()
func (_TenBridgeTestnet *TenBridgeTestnetSession) SendERC20(asset common.Address, amount *big.Int, receiver common.Address) (*types.Transaction, error) {
	return _TenBridgeTestnet.Contract.SendERC20(&_TenBridgeTestnet.TransactOpts, asset, amount, receiver)
}

// SendERC20 is a paid mutator transaction binding the contract method 0xa381c8e2.
//
// Solidity: function sendERC20(address asset, uint256 amount, address receiver) payable returns()
func (_TenBridgeTestnet *TenBridgeTestnetTransactorSession) SendERC20(asset common.Address, amount *big.Int, receiver common.Address) (*types.Transaction, error) {
	return _TenBridgeTestnet.Contract.SendERC20(&_TenBridgeTestnet.TransactOpts, asset, amount, receiver)
}

// SendNative is a paid mutator transaction binding the contract method 0x1888d712.
//
// Solidity: function sendNative(address receiver) payable returns()
func (_TenBridgeTestnet *TenBridgeTestnetTransactor) SendNative(opts *bind.TransactOpts, receiver common.Address) (*types.Transaction, error) {
	return _TenBridgeTestnet.contract.Transact(opts, "sendNative", receiver)
}

// SendNative is a paid mutator transaction binding the contract method 0x1888d712.
//
// Solidity: function sendNative(address receiver) payable returns()
func (_TenBridgeTestnet *TenBridgeTestnetSession) SendNative(receiver common.Address) (*types.Transaction, error) {
	return _TenBridgeTestnet.Contract.SendNative(&_TenBridgeTestnet.TransactOpts, receiver)
}

// SendNative is a paid mutator transaction binding the contract method 0x1888d712.
//
// Solidity: function sendNative(address receiver) payable returns()
func (_TenBridgeTestnet *TenBridgeTestnetTransactorSession) SendNative(receiver common.Address) (*types.Transaction, error) {
	return _TenBridgeTestnet.Contract.SendNative(&_TenBridgeTestnet.TransactOpts, receiver)
}

// SetRemoteBridge is a paid mutator transaction binding the contract method 0x16ce8149.
//
// Solidity: function setRemoteBridge(address bridge) returns()
func (_TenBridgeTestnet *TenBridgeTestnetTransactor) SetRemoteBridge(opts *bind.TransactOpts, bridge common.Address) (*types.Transaction, error) {
	return _TenBridgeTestnet.contract.Transact(opts, "setRemoteBridge", bridge)
}

// SetRemoteBridge is a paid mutator transaction binding the contract method 0x16ce8149.
//
// Solidity: function setRemoteBridge(address bridge) returns()
func (_TenBridgeTestnet *TenBridgeTestnetSession) SetRemoteBridge(bridge common.Address) (*types.Transaction, error) {
	return _TenBridgeTestnet.Contract.SetRemoteBridge(&_TenBridgeTestnet.TransactOpts, bridge)
}

// SetRemoteBridge is a paid mutator transaction binding the contract method 0x16ce8149.
//
// Solidity: function setRemoteBridge(address bridge) returns()
func (_TenBridgeTestnet *TenBridgeTestnetTransactorSession) SetRemoteBridge(bridge common.Address) (*types.Transaction, error) {
	return _TenBridgeTestnet.Contract.SetRemoteBridge(&_TenBridgeTestnet.TransactOpts, bridge)
}

// TransferUnpauserRoleToMultisig is a paid mutator transaction binding the contract method 0x7920c986.
//
// Solidity: function transferUnpauserRoleToMultisig(address multisig) returns()
func (_TenBridgeTestnet *TenBridgeTestnetTransactor) TransferUnpauserRoleToMultisig(opts *bind.TransactOpts, multisig common.Address) (*types.Transaction, error) {
	return _TenBridgeTestnet.contract.Transact(opts, "transferUnpauserRoleToMultisig", multisig)
}

// TransferUnpauserRoleToMultisig is a paid mutator transaction binding the contract method 0x7920c986.
//
// Solidity: function transferUnpauserRoleToMultisig(address multisig) returns()
func (_TenBridgeTestnet *TenBridgeTestnetSession) TransferUnpauserRoleToMultisig(multisig common.Address) (*types.Transaction, error) {
	return _TenBridgeTestnet.Contract.TransferUnpauserRoleToMultisig(&_TenBridgeTestnet.TransactOpts, multisig)
}

// TransferUnpauserRoleToMultisig is a paid mutator transaction binding the contract method 0x7920c986.
//
// Solidity: function transferUnpauserRoleToMultisig(address multisig) returns()
func (_TenBridgeTestnet *TenBridgeTestnetTransactorSession) TransferUnpauserRoleToMultisig(multisig common.Address) (*types.Transaction, error) {
	return _TenBridgeTestnet.Contract.TransferUnpauserRoleToMultisig(&_TenBridgeTestnet.TransactOpts, multisig)
}

// Unpause is a paid mutator transaction binding the contract method 0x3f4ba83a.
//
// Solidity: function unpause() returns()
func (_TenBridgeTestnet *TenBridgeTestnetTransactor) Unpause(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _TenBridgeTestnet.contract.Transact(opts, "unpause")
}

// Unpause is a paid mutator transaction binding the contract method 0x3f4ba83a.
//
// Solidity: function unpause() returns()
func (_TenBridgeTestnet *TenBridgeTestnetSession) Unpause() (*types.Transaction, error) {
	return _TenBridgeTestnet.Contract.Unpause(&_TenBridgeTestnet.TransactOpts)
}

// Unpause is a paid mutator transaction binding the contract method 0x3f4ba83a.
//
// Solidity: function unpause() returns()
func (_TenBridgeTestnet *TenBridgeTestnetTransactorSession) Unpause() (*types.Transaction, error) {
	return _TenBridgeTestnet.Contract.Unpause(&_TenBridgeTestnet.TransactOpts)
}

// UnpauseToken is a paid mutator transaction binding the contract method 0x3b3bff0f.
//
// Solidity: function unpauseToken(address asset) returns()
func (_TenBridgeTestnet *TenBridgeTestnetTransactor) UnpauseToken(opts *bind.TransactOpts, asset common.Address) (*types.Transaction, error) {
	return _TenBridgeTestnet.contract.Transact(opts, "unpauseToken", asset)
}

// UnpauseToken is a paid mutator transaction binding the contract method 0x3b3bff0f.
//
// Solidity: function unpauseToken(address asset) returns()
func (_TenBridgeTestnet *TenBridgeTestnetSession) UnpauseToken(asset common.Address) (*types.Transaction, error) {
	return _TenBridgeTestnet.Contract.UnpauseToken(&_TenBridgeTestnet.TransactOpts, asset)
}

// UnpauseToken is a paid mutator transaction binding the contract method 0x3b3bff0f.
//
// Solidity: function unpauseToken(address asset) returns()
func (_TenBridgeTestnet *TenBridgeTestnetTransactorSession) UnpauseToken(asset common.Address) (*types.Transaction, error) {
	return _TenBridgeTestnet.Contract.UnpauseToken(&_TenBridgeTestnet.TransactOpts, asset)
}

// WhitelistToken is a paid mutator transaction binding the contract method 0x498d82ab.
//
// Solidity: function whitelistToken(address asset, string name, string symbol) returns()
func (_TenBridgeTestnet *TenBridgeTestnetTransactor) WhitelistToken(opts *bind.TransactOpts, asset common.Address, name string, symbol string) (*types.Transaction, error) {
	return _TenBridgeTestnet.contract.Transact(opts, "whitelistToken", asset, name, symbol)
}

// WhitelistToken is a paid mutator transaction binding the contract method 0x498d82ab.
//
// Solidity: function whitelistToken(address asset, string name, string symbol) returns()
func (_TenBridgeTestnet *TenBridgeTestnetSession) WhitelistToken(asset common.Address, name string, symbol string) (*types.Transaction, error) {
	return _TenBridgeTestnet.Contract.WhitelistToken(&_TenBridgeTestnet.TransactOpts, asset, name, symbol)
}

// WhitelistToken is a paid mutator transaction binding the contract method 0x498d82ab.
//
// Solidity: function whitelistToken(address asset, string name, string symbol) returns()
func (_TenBridgeTestnet *TenBridgeTestnetTransactorSession) WhitelistToken(asset common.Address, name string, symbol string) (*types.Transaction, error) {
	return _TenBridgeTestnet.Contract.WhitelistToken(&_TenBridgeTestnet.TransactOpts, asset, name, symbol)
}

// TenBridgeTestnetInitializedIterator is returned from FilterInitialized and is used to iterate over the raw logs and unpacked data for Initialized events raised by the TenBridgeTestnet contract.
type TenBridgeTestnetInitializedIterator struct {
	Event *TenBridgeTestnetInitialized // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *TenBridgeTestnetInitializedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(TenBridgeTestnetInitialized)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(TenBridgeTestnetInitialized)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *TenBridgeTestnetInitializedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *TenBridgeTestnetInitializedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// TenBridgeTestnetInitialized represents a Initialized event raised by the TenBridgeTestnet contract.
type TenBridgeTestnetInitialized struct {
	Version uint64
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterInitialized is a free log retrieval operation binding the contract event 0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2.
//
// Solidity: event Initialized(uint64 version)
func (_TenBridgeTestnet *TenBridgeTestnetFilterer) FilterInitialized(opts *bind.FilterOpts) (*TenBridgeTestnetInitializedIterator, error) {

	logs, sub, err := _TenBridgeTestnet.contract.FilterLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return &TenBridgeTestnetInitializedIterator{contract: _TenBridgeTestnet.contract, event: "Initialized", logs: logs, sub: sub}, nil
}

// WatchInitialized is a free log subscription operation binding the contract event 0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2.
//
// Solidity: event Initialized(uint64 version)
func (_TenBridgeTestnet *TenBridgeTestnetFilterer) WatchInitialized(opts *bind.WatchOpts, sink chan<- *TenBridgeTestnetInitialized) (event.Subscription, error) {

	logs, sub, err := _TenBridgeTestnet.contract.WatchLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(TenBridgeTestnetInitialized)
				if err := _TenBridgeTestnet.contract.UnpackLog(event, "Initialized", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseInitialized is a log parse operation binding the contract event 0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2.
//
// Solidity: event Initialized(uint64 version)
func (_TenBridgeTestnet *TenBridgeTestnetFilterer) ParseInitialized(log types.Log) (*TenBridgeTestnetInitialized, error) {
	event := new(TenBridgeTestnetInitialized)
	if err := _TenBridgeTestnet.contract.UnpackLog(event, "Initialized", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// TenBridgeTestnetPausedIterator is returned from FilterPaused and is used to iterate over the raw logs and unpacked data for Paused events raised by the TenBridgeTestnet contract.
type TenBridgeTestnetPausedIterator struct {
	Event *TenBridgeTestnetPaused // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *TenBridgeTestnetPausedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(TenBridgeTestnetPaused)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(TenBridgeTestnetPaused)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *TenBridgeTestnetPausedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *TenBridgeTestnetPausedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// TenBridgeTestnetPaused represents a Paused event raised by the TenBridgeTestnet contract.
type TenBridgeTestnetPaused struct {
	Account common.Address
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterPaused is a free log retrieval operation binding the contract event 0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258.
//
// Solidity: event Paused(address account)
func (_TenBridgeTestnet *TenBridgeTestnetFilterer) FilterPaused(opts *bind.FilterOpts) (*TenBridgeTestnetPausedIterator, error) {

	logs, sub, err := _TenBridgeTestnet.contract.FilterLogs(opts, "Paused")
	if err != nil {
		return nil, err
	}
	return &TenBridgeTestnetPausedIterator{contract: _TenBridgeTestnet.contract, event: "Paused", logs: logs, sub: sub}, nil
}

// WatchPaused is a free log subscription operation binding the contract event 0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258.
//
// Solidity: event Paused(address account)
func (_TenBridgeTestnet *TenBridgeTestnetFilterer) WatchPaused(opts *bind.WatchOpts, sink chan<- *TenBridgeTestnetPaused) (event.Subscription, error) {

	logs, sub, err := _TenBridgeTestnet.contract.WatchLogs(opts, "Paused")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(TenBridgeTestnetPaused)
				if err := _TenBridgeTestnet.contract.UnpackLog(event, "Paused", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParsePaused is a log parse operation binding the contract event 0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258.
//
// Solidity: event Paused(address account)
func (_TenBridgeTestnet *TenBridgeTestnetFilterer) ParsePaused(log types.Log) (*TenBridgeTestnetPaused, error) {
	event := new(TenBridgeTestnetPaused)
	if err := _TenBridgeTestnet.contract.UnpackLog(event, "Paused", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// TenBridgeTestnetRoleAdminChangedIterator is returned from FilterRoleAdminChanged and is used to iterate over the raw logs and unpacked data for RoleAdminChanged events raised by the TenBridgeTestnet contract.
type TenBridgeTestnetRoleAdminChangedIterator struct {
	Event *TenBridgeTestnetRoleAdminChanged // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *TenBridgeTestnetRoleAdminChangedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(TenBridgeTestnetRoleAdminChanged)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(TenBridgeTestnetRoleAdminChanged)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *TenBridgeTestnetRoleAdminChangedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *TenBridgeTestnetRoleAdminChangedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// TenBridgeTestnetRoleAdminChanged represents a RoleAdminChanged event raised by the TenBridgeTestnet contract.
type TenBridgeTestnetRoleAdminChanged struct {
	Role              [32]byte
	PreviousAdminRole [32]byte
	NewAdminRole      [32]byte
	Raw               types.Log // Blockchain specific contextual infos
}

// FilterRoleAdminChanged is a free log retrieval operation binding the contract event 0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff.
//
// Solidity: event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)
func (_TenBridgeTestnet *TenBridgeTestnetFilterer) FilterRoleAdminChanged(opts *bind.FilterOpts, role [][32]byte, previousAdminRole [][32]byte, newAdminRole [][32]byte) (*TenBridgeTestnetRoleAdminChangedIterator, error) {

	var roleRule []interface{}
	for _, roleItem := range role {
		roleRule = append(roleRule, roleItem)
	}
	var previousAdminRoleRule []interface{}
	for _, previousAdminRoleItem := range previousAdminRole {
		previousAdminRoleRule = append(previousAdminRoleRule, previousAdminRoleItem)
	}
	var newAdminRoleRule []interface{}
	for _, newAdminRoleItem := range newAdminRole {
		newAdminRoleRule = append(newAdminRoleRule, newAdminRoleItem)
	}

	logs, sub, err := _TenBridgeTestnet.contract.FilterLogs(opts, "RoleAdminChanged", roleRule, previousAdminRoleRule, newAdminRoleRule)
	if err != nil {
		return nil, err
	}
	return &TenBridgeTestnetRoleAdminChangedIterator{contract: _TenBridgeTestnet.contract, event: "RoleAdminChanged", logs: logs, sub: sub}, nil
}

// WatchRoleAdminChanged is a free log subscription operation binding the contract event 0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff.
//
// Solidity: event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)
func (_TenBridgeTestnet *TenBridgeTestnetFilterer) WatchRoleAdminChanged(opts *bind.WatchOpts, sink chan<- *TenBridgeTestnetRoleAdminChanged, role [][32]byte, previousAdminRole [][32]byte, newAdminRole [][32]byte) (event.Subscription, error) {

	var roleRule []interface{}
	for _, roleItem := range role {
		roleRule = append(roleRule, roleItem)
	}
	var previousAdminRoleRule []interface{}
	for _, previousAdminRoleItem := range previousAdminRole {
		previousAdminRoleRule = append(previousAdminRoleRule, previousAdminRoleItem)
	}
	var newAdminRoleRule []interface{}
	for _, newAdminRoleItem := range newAdminRole {
		newAdminRoleRule = append(newAdminRoleRule, newAdminRoleItem)
	}

	logs, sub, err := _TenBridgeTestnet.contract.WatchLogs(opts, "RoleAdminChanged", roleRule, previousAdminRoleRule, newAdminRoleRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(TenBridgeTestnetRoleAdminChanged)
				if err := _TenBridgeTestnet.contract.UnpackLog(event, "RoleAdminChanged", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseRoleAdminChanged is a log parse operation binding the contract event 0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff.
//
// Solidity: event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)
func (_TenBridgeTestnet *TenBridgeTestnetFilterer) ParseRoleAdminChanged(log types.Log) (*TenBridgeTestnetRoleAdminChanged, error) {
	event := new(TenBridgeTestnetRoleAdminChanged)
	if err := _TenBridgeTestnet.contract.UnpackLog(event, "RoleAdminChanged", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// TenBridgeTestnetRoleGrantedIterator is returned from FilterRoleGranted and is used to iterate over the raw logs and unpacked data for RoleGranted events raised by the TenBridgeTestnet contract.
type TenBridgeTestnetRoleGrantedIterator struct {
	Event *TenBridgeTestnetRoleGranted // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *TenBridgeTestnetRoleGrantedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(TenBridgeTestnetRoleGranted)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(TenBridgeTestnetRoleGranted)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *TenBridgeTestnetRoleGrantedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *TenBridgeTestnetRoleGrantedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// TenBridgeTestnetRoleGranted represents a RoleGranted event raised by the TenBridgeTestnet contract.
type TenBridgeTestnetRoleGranted struct {
	Role    [32]byte
	Account common.Address
	Sender  common.Address
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterRoleGranted is a free log retrieval operation binding the contract event 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d.
//
// Solidity: event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)
func (_TenBridgeTestnet *TenBridgeTestnetFilterer) FilterRoleGranted(opts *bind.FilterOpts, role [][32]byte, account []common.Address, sender []common.Address) (*TenBridgeTestnetRoleGrantedIterator, error) {

	var roleRule []interface{}
	for _, roleItem := range role {
		roleRule = append(roleRule, roleItem)
	}
	var accountRule []interface{}
	for _, accountItem := range account {
		accountRule = append(accountRule, accountItem)
	}
	var senderRule []interface{}
	for _, senderItem := range sender {
		senderRule = append(senderRule, senderItem)
	}

	logs, sub, err := _TenBridgeTestnet.contract.FilterLogs(opts, "RoleGranted", roleRule, accountRule, senderRule)
	if err != nil {
		return nil, err
	}
	return &TenBridgeTestnetRoleGrantedIterator{contract: _TenBridgeTestnet.contract, event: "RoleGranted", logs: logs, sub: sub}, nil
}

// WatchRoleGranted is a free log subscription operation binding the contract event 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d.
//
// Solidity: event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)
func (_TenBridgeTestnet *TenBridgeTestnetFilterer) WatchRoleGranted(opts *bind.WatchOpts, sink chan<- *TenBridgeTestnetRoleGranted, role [][32]byte, account []common.Address, sender []common.Address) (event.Subscription, error) {

	var roleRule []interface{}
	for _, roleItem := range role {
		roleRule = append(roleRule, roleItem)
	}
	var accountRule []interface{}
	for _, accountItem := range account {
		accountRule = append(accountRule, accountItem)
	}
	var senderRule []interface{}
	for _, senderItem := range sender {
		senderRule = append(senderRule, senderItem)
	}

	logs, sub, err := _TenBridgeTestnet.contract.WatchLogs(opts, "RoleGranted", roleRule, accountRule, senderRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(TenBridgeTestnetRoleGranted)
				if err := _TenBridgeTestnet.contract.UnpackLog(event, "RoleGranted", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseRoleGranted is a log parse operation binding the contract event 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d.
//
// Solidity: event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)
func (_TenBridgeTestnet *TenBridgeTestnetFilterer) ParseRoleGranted(log types.Log) (*TenBridgeTestnetRoleGranted, error) {
	event := new(TenBridgeTestnetRoleGranted)
	if err := _TenBridgeTestnet.contract.UnpackLog(event, "RoleGranted", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// TenBridgeTestnetRoleRevokedIterator is returned from FilterRoleRevoked and is used to iterate over the raw logs and unpacked data for RoleRevoked events raised by the TenBridgeTestnet contract.
type TenBridgeTestnetRoleRevokedIterator struct {
	Event *TenBridgeTestnetRoleRevoked // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *TenBridgeTestnetRoleRevokedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(TenBridgeTestnetRoleRevoked)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(TenBridgeTestnetRoleRevoked)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *TenBridgeTestnetRoleRevokedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *TenBridgeTestnetRoleRevokedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// TenBridgeTestnetRoleRevoked represents a RoleRevoked event raised by the TenBridgeTestnet contract.
type TenBridgeTestnetRoleRevoked struct {
	Role    [32]byte
	Account common.Address
	Sender  common.Address
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterRoleRevoked is a free log retrieval operation binding the contract event 0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b.
//
// Solidity: event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)
func (_TenBridgeTestnet *TenBridgeTestnetFilterer) FilterRoleRevoked(opts *bind.FilterOpts, role [][32]byte, account []common.Address, sender []common.Address) (*TenBridgeTestnetRoleRevokedIterator, error) {

	var roleRule []interface{}
	for _, roleItem := range role {
		roleRule = append(roleRule, roleItem)
	}
	var accountRule []interface{}
	for _, accountItem := range account {
		accountRule = append(accountRule, accountItem)
	}
	var senderRule []interface{}
	for _, senderItem := range sender {
		senderRule = append(senderRule, senderItem)
	}

	logs, sub, err := _TenBridgeTestnet.contract.FilterLogs(opts, "RoleRevoked", roleRule, accountRule, senderRule)
	if err != nil {
		return nil, err
	}
	return &TenBridgeTestnetRoleRevokedIterator{contract: _TenBridgeTestnet.contract, event: "RoleRevoked", logs: logs, sub: sub}, nil
}

// WatchRoleRevoked is a free log subscription operation binding the contract event 0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b.
//
// Solidity: event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)
func (_TenBridgeTestnet *TenBridgeTestnetFilterer) WatchRoleRevoked(opts *bind.WatchOpts, sink chan<- *TenBridgeTestnetRoleRevoked, role [][32]byte, account []common.Address, sender []common.Address) (event.Subscription, error) {

	var roleRule []interface{}
	for _, roleItem := range role {
		roleRule = append(roleRule, roleItem)
	}
	var accountRule []interface{}
	for _, accountItem := range account {
		accountRule = append(accountRule, accountItem)
	}
	var senderRule []interface{}
	for _, senderItem := range sender {
		senderRule = append(senderRule, senderItem)
	}

	logs, sub, err := _TenBridgeTestnet.contract.WatchLogs(opts, "RoleRevoked", roleRule, accountRule, senderRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(TenBridgeTestnetRoleRevoked)
				if err := _TenBridgeTestnet.contract.UnpackLog(event, "RoleRevoked", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseRoleRevoked is a log parse operation binding the contract event 0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b.
//
// Solidity: event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)
func (_TenBridgeTestnet *TenBridgeTestnetFilterer) ParseRoleRevoked(log types.Log) (*TenBridgeTestnetRoleRevoked, error) {
	event := new(TenBridgeTestnetRoleRevoked)
	if err := _TenBridgeTestnet.contract.UnpackLog(event, "RoleRevoked", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// TenBridgeTestnetUnpausedIterator is returned from FilterUnpaused and is used to iterate over the raw logs and unpacked data for Unpaused events raised by the TenBridgeTestnet contract.
type TenBridgeTestnetUnpausedIterator struct {
	Event *TenBridgeTestnetUnpaused // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *TenBridgeTestnetUnpausedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(TenBridgeTestnetUnpaused)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(TenBridgeTestnetUnpaused)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *TenBridgeTestnetUnpausedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *TenBridgeTestnetUnpausedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// TenBridgeTestnetUnpaused represents a Unpaused event raised by the TenBridgeTestnet contract.
type TenBridgeTestnetUnpaused struct {
	Account common.Address
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterUnpaused is a free log retrieval operation binding the contract event 0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa.
//
// Solidity: event Unpaused(address account)
func (_TenBridgeTestnet *TenBridgeTestnetFilterer) FilterUnpaused(opts *bind.FilterOpts) (*TenBridgeTestnetUnpausedIterator, error) {

	logs, sub, err := _TenBridgeTestnet.contract.FilterLogs(opts, "Unpaused")
	if err != nil {
		return nil, err
	}
	return &TenBridgeTestnetUnpausedIterator{contract: _TenBridgeTestnet.contract, event: "Unpaused", logs: logs, sub: sub}, nil
}

// WatchUnpaused is a free log subscription operation binding the contract event 0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa.
//
// Solidity: event Unpaused(address account)
func (_TenBridgeTestnet *TenBridgeTestnetFilterer) WatchUnpaused(opts *bind.WatchOpts, sink chan<- *TenBridgeTestnetUnpaused) (event.Subscription, error) {

	logs, sub, err := _TenBridgeTestnet.contract.WatchLogs(opts, "Unpaused")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(TenBridgeTestnetUnpaused)
				if err := _TenBridgeTestnet.contract.UnpackLog(event, "Unpaused", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseUnpaused is a log parse operation binding the contract event 0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa.
//
// Solidity: event Unpaused(address account)
func (_TenBridgeTestnet *TenBridgeTestnetFilterer) ParseUnpaused(log types.Log) (*TenBridgeTestnetUnpaused, error) {
	event := new(TenBridgeTestnetUnpaused)
	if err := _TenBridgeTestnet.contract.UnpackLog(event, "Unpaused", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// TenBridgeTestnetWithdrawalIterator is returned from FilterWithdrawal and is used to iterate over the raw logs and unpacked data for Withdrawal events raised by the TenBridgeTestnet contract.
type TenBridgeTestnetWithdrawalIterator struct {
	Event *TenBridgeTestnetWithdrawal // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *TenBridgeTestnetWithdrawalIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(TenBridgeTestnetWithdrawal)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(TenBridgeTestnetWithdrawal)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *TenBridgeTestnetWithdrawalIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *TenBridgeTestnetWithdrawalIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// TenBridgeTestnetWithdrawal represents a Withdrawal event raised by the TenBridgeTestnet contract.
type TenBridgeTestnetWithdrawal struct {
	Receiver common.Address
	Asset    common.Address
	Amount   *big.Int
	Raw      types.Log // Blockchain specific contextual infos
}

// FilterWithdrawal is a free log retrieval operation binding the contract event 0x2717ead6b9200dd235aad468c9809ea400fe33ac69b5bfaa6d3e90fc922b6398.
//
// Solidity: event Withdrawal(address indexed receiver, address indexed asset, uint256 amount)
func (_TenBridgeTestnet *TenBridgeTestnetFilterer) FilterWithdrawal(opts *bind.FilterOpts, receiver []common.Address, asset []common.Address) (*TenBridgeTestnetWithdrawalIterator, error) {

	var receiverRule []interface{}
	for _, receiverItem := range receiver {
		receiverRule = append(receiverRule, receiverItem)
	}
	var assetRule []interface{}
	for _, assetItem := range asset {
		assetRule = append(assetRule, assetItem)
	}

	logs, sub, err := _TenBridgeTestnet.contract.FilterLogs(opts, "Withdrawal", receiverRule, assetRule)
	if err != nil {
		return nil, err
	}
	return &TenBridgeTestnetWithdrawalIterator{contract: _TenBridgeTestnet.contract, event: "Withdrawal", logs: logs, sub: sub}, nil
}

// WatchWithdrawal is a free log subscription operation binding the contract event 0x2717ead6b9200dd235aad468c9809ea400fe33ac69b5bfaa6d3e90fc922b6398.
//
// Solidity: event Withdrawal(address indexed receiver, address indexed asset, uint256 amount)
func (_TenBridgeTestnet *TenBridgeTestnetFilterer) WatchWithdrawal(opts *bind.WatchOpts, sink chan<- *TenBridgeTestnetWithdrawal, receiver []common.Address, asset []common.Address) (event.Subscription, error) {

	var receiverRule []interface{}
	for _, receiverItem := range receiver {
		receiverRule = append(receiverRule, receiverItem)
	}
	var assetRule []interface{}
	for _, assetItem := range asset {
		assetRule = append(assetRule, assetItem)
	}

	logs, sub, err := _TenBridgeTestnet.contract.WatchLogs(opts, "Withdrawal", receiverRule, assetRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(TenBridgeTestnetWithdrawal)
				if err := _TenBridgeTestnet.contract.UnpackLog(event, "Withdrawal", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseWithdrawal is a log parse operation binding the contract event 0x2717ead6b9200dd235aad468c9809ea400fe33ac69b5bfaa6d3e90fc922b6398.
//
// Solidity: event Withdrawal(address indexed receiver, address indexed asset, uint256 amount)
func (_TenBridgeTestnet *TenBridgeTestnetFilterer) ParseWithdrawal(log types.Log) (*TenBridgeTestnetWithdrawal, error) {
	event := new(TenBridgeTestnetWithdrawal)
	if err := _TenBridgeTestnet.contract.UnpackLog(event, "Withdrawal", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
