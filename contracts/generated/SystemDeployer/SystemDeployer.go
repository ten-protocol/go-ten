// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package SystemDeployer

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// SystemDeployerMetaData contains all meta data concerning the SystemDeployer contract.
var SystemDeployerMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"eoaAdmin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"SystemContractDeployed\",\"type\":\"event\"}]",
	Bin: "0x608060405234801561000f575f5ffd5b506040516158b13803806158b183398101604081905261002e916103c4565b6100378161005e565b5f6100428282610114565b905061004e82826101d2565b6100578261028b565b5050610585565b5f60405161006b90610352565b604051809103905ff080158015610084573d5f5f3e3d5ffd5b5090505f63c4d66de860e01b836040516024016100a191906103f7565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b03838183161783525050505090505f6100e883858461031260201b60201c565b90505f5160206158915f395f51905f52816040516101069190610439565b60405180910390a150505050565b5f5f6040516101229061035f565b604051809103905ff08015801561013b573d5f5f3e3d5ffd5b5090505f63da35a26f60e01b848660405160240161015a92919061045e565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b03838183161783525050505090505f6101a183878461031260201b60201c565b90505f5160206158915f395f51905f52816040516101bf9190610492565b60405180910390a1925050505b92915050565b5f6040516101df9061036c565b604051809103905ff0801580156101f8573d5f5f3e3d5ffd5b5090505f63485cc95560e01b84846040516024016102179291906104a2565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b03838183161783525050505090505f61025e83868461031260201b60201c565b90505f5160206158915f395f51905f528160405161027c91906104cf565b60405180910390a15050505050565b5f60405161029890610379565b604051809103905ff0801580156102b1573d5f5f3e3d5ffd5b506040805160048152602481019091526020810180516001600160e01b0390811663204a7f0760e21b17909152919250905f906102f49084908690859061031216565b90505f5160206158915f395f51905f52816040516101069190610503565b5f5f84848460405161032390610386565b61032f9392919061054f565b604051809103905ff080158015610348573d5f5f3e3d5ffd5b5095945050505050565b610db5806105cf83390190565b61073e8061138483390190565b611b7e80611ac283390190565b61107d8061364083390190565b6111d4806146bd83390190565b5f6001600160a01b0382166101cc565b6103ac81610393565b81146103b6575f5ffd5b50565b80516101cc816103a3565b5f602082840312156103d7576103d75f5ffd5b6103e183836103b9565b9392505050565b6103f181610393565b82525050565b602081016101cc82846103e8565b60198152602081017f5472616e73616374696f6e73506f737450726f636573736f7200000000000000815290505b60200190565b6040808252810161044981610405565b90506101cc60208301846103e8565b806103f1565b6040810161046c8285610458565b6103e160208301846103e8565b6004815260208101634665657360e01b81529050610433565b6040808252810161044981610479565b6040810161046c82856103e8565b600a815260208101694d65737361676542757360b01b81529050610433565b60408082528101610449816104b0565b600f8152602081016e5075626c696343616c6c6261636b7360881b81529050610433565b60408082528101610449816104df565b8281835e505f910152565b5f610527825190565b80845260208401935061053e818560208601610513565b601f01601f19169290920192915050565b6060810161055d82866103e8565b61056a60208301856103e8565b818103604083015261057c818461051e565b95945050505050565b603e806105915f395ff3fe60806040525f5ffdfea2646970667358221220df3d96f9cd08f22262519b908438cebdff7e64f83f846dd5e509519841b2ec3364736f6c634300081c00336080604052348015600e575f5ffd5b50610d998061001c5f395ff3fe608060405234801561000f575f5ffd5b50600436106100c4575f3560e01c806364c55a9d1161007d578063c4d66de811610058578063c4d66de8146101bf578063d547741f146101d2578063ee546fd8146101e5575f5ffd5b806364c55a9d1461016f57806391d1485414610182578063a217fddf146101b8575f5ffd5b80632f2ff15d116100ad5780632f2ff15d1461012057806336568abe14610135578063508a50f414610148575f5ffd5b806301ffc9a7146100c8578063248a9ca3146100f1575b5f5ffd5b6100db6100d63660046107dc565b61025b565b6040516100e8919061080a565b60405180910390f35b6101136100ff366004610829565b5f9081526020819052604090206001015490565b6040516100e8919061084c565b61013361012e36600461087e565b6102f3565b005b61013361014336600461087e565b61031d565b6101137ff16bb8781ef1311f8fe06747bcbe481e695502acdcb0cb8c03aa03899e39a59881565b61013361017d366004610902565b61036e565b6100db61019036600461087e565b5f918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b6101135f81565b6101336101cd366004610947565b61047c565b6101336101e036600461087e565b6105e9565b6101336101f3366004610947565b6001805480820182555f919091527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082167f7965db0b0000000000000000000000000000000000000000000000000000000014806102ed57507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b5f8281526020819052604090206001015461030d8161060d565b610317838361061a565b50505050565b6001600160a01b038116331461035f576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61036982826106c1565b505050565b5f61037a600130610978565b9050336001600160a01b038216146103ad5760405162461bcd60e51b81526004016103a4906109cf565b60405180910390fd5b5f8290036103cd5760405162461bcd60e51b81526004016103a490610a11565b5f5b600154811015610317575f600182815481106103ed576103ed610a21565b5f918252602090912001546040517f9f9976af0000000000000000000000000000000000000000000000000000000081526001600160a01b0390911691508190639f9976af906104439088908890600401610d06565b5f604051808303815f87803b15801561045a575f5ffd5b505af115801561046c573d5f5f3e3d5ffd5b50505050508060010190506103cf565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000810460ff16159067ffffffffffffffff165f811580156104c65750825b90505f8267ffffffffffffffff1660011480156104e25750303b155b9050811580156104f0575080155b15610527576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561055b57845468ff00000000000000001916680100000000000000001785555b6105655f8761061a565b506105907ff16bb8781ef1311f8fe06747bcbe481e695502acdcb0cb8c03aa03899e39a5988761061a565b5083156105e157845468ff0000000000000000191685556040517fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2906105d890600190610d3a565b60405180910390a15b505050505050565b5f828152602081905260409020600101546106038161060d565b61031783836106c1565b6106178133610742565b50565b5f828152602081815260408083206001600160a01b038516845290915281205460ff166106ba575f838152602081815260408083206001600160a01b03861684529091529020805460ff191660011790556106723390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45060016102ed565b505f6102ed565b5f828152602081815260408083206001600160a01b038516845290915281205460ff16156106ba575f838152602081815260408083206001600160a01b0386168085529252808320805460ff1916905551339286917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45060016102ed565b5f828152602081815260408083206001600160a01b038516845290915290205460ff1661079f5780826040517fe2517d3f0000000000000000000000000000000000000000000000000000000081526004016103a4929190610d48565b5050565b7fffffffff0000000000000000000000000000000000000000000000000000000081165b8114610617575f5ffd5b80356102ed816107a3565b5f602082840312156107ef576107ef5f5ffd5b6107f983836107d1565b9392505050565b8015155b82525050565b602081016102ed8284610800565b806107c7565b80356102ed81610818565b5f6020828403121561083c5761083c5f5ffd5b6107f9838361081e565b80610804565b602081016102ed8284610846565b5f6001600160a01b0382166102ed565b6107c78161085a565b80356102ed8161086a565b5f5f60408385031215610892576108925f5ffd5b61089c848461081e565b91506108ab8460208501610873565b90509250929050565b5f5f83601f8401126108c7576108c75f5ffd5b50813567ffffffffffffffff8111156108e1576108e15f5ffd5b6020830191508360208202830111156108fb576108fb5f5ffd5b9250929050565b5f5f60208385031215610916576109165f5ffd5b823567ffffffffffffffff81111561092f5761092f5f5ffd5b61093b858286016108b4565b92509250509250929050565b5f6020828403121561095a5761095a5f5ffd5b6107f98383610873565b634e487b7160e01b5f52601160045260245ffd5b6001600160a01b039182169190811690828203908111156102ed576102ed610964565b60088152602081017f4e6f742073656c66000000000000000000000000000000000000000000000000815290505b60200190565b602080825281016102ed8161099b565b601a8152602081017f4e6f207472616e73616374696f6e7320746f20636f6e76657274000000000000815290506109c9565b602080825281016102ed816109df565b634e487b7160e01b5f52603260045260245ffd5b60ff81166107c7565b80356102ed81610a35565b505f6102ed6020830183610a3e565b60ff8116610804565b505f6102ed602083018361081e565b505f6102ed6020830183610873565b6108048161085a565b5f808335601e1936859003018112610aa157610aa15f5ffd5b830160208101925035905067ffffffffffffffff811115610ac357610ac35f5ffd5b368190038213156108fb576108fb5f5ffd5b82818337505f910152565b818352602083019250610af4828483610ad5565b50601f01601f19160190565b8015156107c7565b80356102ed81610b00565b505f6102ed6020830183610b08565b67ffffffffffffffff81166107c7565b80356102ed81610b22565b505f6102ed6020830183610b32565b67ffffffffffffffff8116610804565b5f6101408301610b6c8380610a49565b610b768582610a58565b50610b846020840184610a61565b610b916020860182610846565b50610b9f6040840184610a61565b610bac6040860182610846565b50610bba6060840184610a61565b610bc76060860182610846565b50610bd56080840184610a70565b610be26080860182610a7f565b50610bf060a0840184610a61565b610bfd60a0860182610846565b50610c0b60c0840184610a88565b85830360c0870152610c1e838284610ae0565b92505050610c2f60e0840184610a70565b610c3c60e0860182610a7f565b50610c4b610100840184610b13565b610c59610100860182610800565b50610c68610120840184610b3d565b610c76610120860182610b4c565b509392505050565b5f6107f98383610b5c565b5f823561013e1936849003018112610ca257610ca25f5ffd5b90910192915050565b8183526020830192505f8360208402810183805f5b87811015610cf9578484038952610cd78284610c89565b610ce18582610c7e565b94505060208201602099909901989150600101610cc0565b5091979650505050505050565b60208082528101610d18818486610cab565b949350505050565b5f67ffffffffffffffff82166102ed565b61080481610d20565b602081016102ed8284610d31565b60408101610d568285610a7f565b6107f9602083018461084656fea26469706673582212205bb91c1eb46eeb7749491854f0432244fc7416fed1242686e68150c694c4591f64736f6c634300081c00336080604052348015600e575f5ffd5b5060156019565b60c9565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff161560685760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b039081161460c65780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b610668806100d65f395ff3fe60806040526004361061007c575f3560e01c80639003adfe1161004c5780639003adfe14610125578063afe997ea14610137578063da35a26f1461014b578063f2fde38b1461016a575f5ffd5b80631a90a2191461008757806323aa2a9d146100ac578063715018a6146100cd5780638da5cb5b146100e1575f5ffd5b3661008357005b5f5ffd5b348015610092575f5ffd5b505f545b6040516100a3919061052d565b60405180910390f35b3480156100b7575f5ffd5b506100cb6100c6366004610558565b610189565b005b3480156100d8575f5ffd5b506100cb610195565b3480156100ec575f5ffd5b507f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b03166040516100a39190610595565b348015610130575f5ffd5b5047610096565b348015610142575f5ffd5b506100cb6101a8565b348015610156575f5ffd5b506100cb6101653660046105b7565b610208565b348015610175575f5ffd5b506100cb6101843660046105ed565b61034d565b6101916103a9565b5f55565b61019d6103a9565b6101a65f61041d565b565b6101b06103a9565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546040516001600160a01b03909116904780156108fc02915f818181858888f19350505050158015610205573d5f5f3e3d5ffd5b50565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000810460ff16159067ffffffffffffffff165f811580156102525750825b90505f8267ffffffffffffffff16600114801561026e5750303b155b90508115801561027c575080155b156102b3576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b845467ffffffffffffffff1916600117855583156102e757845468ff00000000000000001916680100000000000000001785555b6102f0866104a5565b5f879055831561034457845468ff0000000000000000191685556040517fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29061033b90600190610624565b60405180910390a15b50505050505050565b6103556103a9565b6001600160a01b0381166103a0575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016103979190610595565b60405180910390fd5b6102058161041d565b336103db7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b0316146101a657336040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016103979190610595565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080547fffffffffffffffffffffffff000000000000000000000000000000000000000081166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b6104ad6104b6565b6102058161051d565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005468010000000000000000900460ff166101a6576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103556104b6565b805b82525050565b6020810161053b8284610525565b92915050565b805b8114610205575f5ffd5b803561053b81610541565b5f6020828403121561056b5761056b5f5ffd5b610575838361054d565b9392505050565b5f6001600160a01b03821661053b565b6105278161057c565b6020810161053b828461058c565b6105438161057c565b803561053b816105a3565b5f5f604083850312156105cb576105cb5f5ffd5b6105d5848461054d565b91506105e484602085016105ac565b90509250929050565b5f60208284031215610600576106005f5ffd5b61057583836105ac565b5f67ffffffffffffffff821661053b565b6105278161060a565b6020810161053b828461061b56fea26469706673582212202ac6541a6ad6e40a75ff88a75267e7463ad7d320d54b52023e0dc0b8a3a41f4c64736f6c634300081c00336080604052348015600e575f5ffd5b50601633601a565b608a565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b611ae7806100975f395ff3fe6080604052600436106100d4575f3560e01c8063715018a61161007e57806399a3ad211161005857806399a3ad21146102a2578063ab53bddc146102c1578063b1454caa146102e0578063f2fde38b1461030057610144565b8063715018a61461022b5780638da5cb5b1461023f5780639730886d1461028357610144565b8063346633fb116100af578063346633fb146101da57806336d2da90146101ed578063485cc9551461020c57610144565b8062a1b815146101655780630fcfbd111461018f57806333a88c72146101ae57610144565b36610144576040517f346633fb000000000000000000000000000000000000000000000000000000008152309063346633fb9034906101199033908390600401610dbb565b5f604051808303818588803b158015610130575f5ffd5b505af1158015610142573d5f5f3e3d5ffd5b005b60405162461bcd60e51b815260040161015c90610e0a565b60405180910390fd5b348015610170575f5ffd5b5061017961031f565b6040516101869190610e1a565b60405180910390f35b34801561019a575f5ffd5b506101796101a9366004610e41565b6103a8565b3480156101b9575f5ffd5b506101cd6101c8366004610e41565b610405565b6040516101869190610e81565b6101426101e8366004610ebe565b610455565b3480156101f8575f5ffd5b50610142610207366004610ef4565b61059e565b348015610217575f5ffd5b50610142610226366004610f11565b610619565b348015610236575f5ffd5b50610142610782565b34801561024a575f5ffd5b507f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b03166040516101869190610f3e565b34801561028e575f5ffd5b5061014261029d366004610f4c565b610795565b3480156102ad575f5ffd5b506101426102bc366004610ebe565b6108fa565b3480156102cc575f5ffd5b506101426102db366004610ebe565b61090c565b6102f36102ee36600461100e565b6109d4565b6040516101869190611096565b34801561030b575f5ffd5b5061014261031a366004610ef4565b610adc565b600354604080517f1a90a21900000000000000000000000000000000000000000000000000000000815290515f926001600160a01b031691631a90a2199160048083019260209291908290030181865afa15801561037f573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103a391906110af565b905090565b5f5f826040516020016103bb9190611261565b60408051601f1981840301815291815281516020928301205f81815292839052912054909150806103fe5760405162461bcd60e51b815260040161015c906112cc565b9392505050565b5f5f826040516020016104189190611261565b60408051601f1981840301815291815281516020928301205f81815292839052912054909150801580159061044d5750428111155b949350505050565b5f3411801561046357508034145b61047f5760405162461bcd60e51b815260040161015c90611334565b60035434906001600160a01b03161561053f575f61049b61031f565b9050803410156104bd5760405162461bcd60e51b815260040161015c90611374565b6104c78134611398565b6003546040519193505f916001600160a01b039091169083908381818185875af1925050503d805f8114610516576040519150601f19603f3d011682016040523d82523d5f602084013e61051b565b606091505b505090508061053c5760405162461bcd60e51b815260040161015c90611403565b50505b5f61054933610b32565b9050836001600160a01b0316336001600160a01b03167f50c536ac33a920f00755865b831d17bf4cff0b2e0345f65b16d52bfc004068b68484604051610590929190611413565b60405180910390a350505050565b6105a6610b8f565b5f816001600160a01b0316476040515f6040518083038185875af1925050503d805f81146105ef576040519150601f19603f3d011682016040523d82523d5f602084013e6105f4565b606091505b50509050806106155760405162461bcd60e51b815260040161015c90611460565b5050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000810460ff16159067ffffffffffffffff165f811580156106635750825b90505f8267ffffffffffffffff16600114801561067f5750303b155b90508115801561068d575080155b156106c4576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b845467ffffffffffffffff1916600117855583156106f857845468ff00000000000000001916680100000000000000001785555b61070187610c03565b6003805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038816179055831561077957845468ff0000000000000000191685556040517fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29061077090600190611493565b60405180910390a15b50505050505050565b61078a610b8f565b6107935f610c14565b565b5f6107a16001306114a1565b90506107d47f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b0316336001600160a01b031614806107fb5750336001600160a01b038216145b6108175760405162461bcd60e51b815260040161015c906114f6565b5f6108228342611506565b90505f846040516020016108369190611261565b60408051601f1981840301815291815281516020928301205f81815292839052912054909150156108795760405162461bcd60e51b815260040161015c90611571565b5f8181526020818152604082208490556001919061089990880188610ef4565b6001600160a01b0316815260208101919091526040015f908120906108c46080880160608901611581565b63ffffffff1681526020808201929092526040015f908120805460018101825590825291902086916004020161077982826119b8565b610902610b8f565b6106158282610c91565b5f6109186001306114a1565b905061094b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b0316336001600160a01b031614806109725750336001600160a01b038216145b61098e5760405162461bcd60e51b815260040161015c906114f6565b826001600160a01b03167fcd9850463422a7449c406a036e35e5edb6fbe35a64c9f12a2354be98a750c0d3836040516109c79190610e1a565b60405180910390a2505050565b6003545f906001600160a01b031615610a85575f6109f061031f565b905080341015610a125760405162461bcd60e51b815260040161015c90611a1a565b6003546040515f916001600160a01b03169083908381818185875af1925050503d805f8114610a5c576040519150601f19603f3d011682016040523d82523d5f602084013e610a61565b606091505b5050905080610a825760405162461bcd60e51b815260040161015c90611403565b50505b610a8e33610b32565b90507fb93c37389233beb85a3a726c3f15c2d15533ee74cb602f20f490dfffef77593733828888888888604051610acb9796959493929190611a2a565b60405180910390a195945050505050565b610ae4610b8f565b6001600160a01b038116610b26575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161015c9190610f3e565b610b2f81610c14565b50565b6001600160a01b0381165f908152600260205260408120805467ffffffffffffffff169160019190610b648385611a8d565b92506101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550919050565b33610bc17f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b03161461079357336040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161015c9190610f3e565b610c0b610d25565b610b2f81610d8c565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300805473ffffffffffffffffffffffffffffffffffffffff1981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b80471015610cb15760405162461bcd60e51b815260040161015c90611374565b5f826001600160a01b0316826040515f6040518083038185875af1925050503d805f8114610cfa576040519150601f19603f3d011682016040523d82523d5f602084013e610cff565b606091505b5050905080610d205760405162461bcd60e51b815260040161015c90611460565b505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005468010000000000000000900460ff16610793576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610ae4610d25565b5f6001600160a01b0382165b92915050565b610daf81610d94565b82525050565b80610daf565b60408101610dc98285610da6565b6103fe6020830184610db5565b600b8152602081017f756e737570706f72746564000000000000000000000000000000000000000000815290505b60200190565b60208082528101610da081610dd6565b60208101610da08284610db5565b5f60c08284031215610e3b57610e3b5f5ffd5b50919050565b5f60208284031215610e5457610e545f5ffd5b813567ffffffffffffffff811115610e6d57610e6d5f5ffd5b61044d84828501610e28565b801515610daf565b60208101610da08284610e79565b610e9881610d94565b8114610b2f575f5ffd5b8035610da081610e8f565b80610e98565b8035610da081610ead565b5f5f60408385031215610ed257610ed25f5ffd5b610edc8484610ea2565b9150610eeb8460208501610eb3565b90509250929050565b5f60208284031215610f0757610f075f5ffd5b6103fe8383610ea2565b5f5f60408385031215610f2557610f255f5ffd5b610f2f8484610ea2565b9150610eeb8460208501610ea2565b60208101610da08284610da6565b5f5f60408385031215610f6057610f605f5ffd5b823567ffffffffffffffff811115610f7957610f795f5ffd5b610f8585828601610e28565b925050610eeb8460208501610eb3565b63ffffffff8116610e98565b8035610da081610f95565b5f5f83601f840112610fbf57610fbf5f5ffd5b50813567ffffffffffffffff811115610fd957610fd95f5ffd5b602083019150836001820283011115610ff357610ff35f5ffd5b9250929050565b60ff8116610e98565b8035610da081610ffa565b5f5f5f5f5f60808688031215611025576110255f5ffd5b61102f8787610fa1565b945061103e8760208801610fa1565b9350604086013567ffffffffffffffff81111561105c5761105c5f5ffd5b61106888828901610fac565b935093505061107a8760608801611003565b90509295509295909350565b67ffffffffffffffff8116610daf565b60208101610da08284611086565b8051610da081610ead565b5f602082840312156110c2576110c25f5ffd5b6103fe83836110a4565b505f610da06020830183610ea2565b67ffffffffffffffff8116610e98565b8035610da0816110db565b505f610da060208301836110eb565b505f610da06020830183610fa1565b63ffffffff8116610daf565b5f808335601e1936859003018112611139576111395f5ffd5b830160208101925035905067ffffffffffffffff81111561115b5761115b5f5ffd5b36819003821315610ff357610ff35f5ffd5b82818337505f910152565b81835260208301925061118c82848361116d565b50601f01601f19160190565b505f610da06020830183611003565b60ff8116610daf565b5f60c083016111bf83806110cc565b6111c98582610da6565b506111d760208401846110f6565b6111e46020860182611086565b506111f26040840184611105565b6111ff6040860182611114565b5061120d6060840184611105565b61121a6060860182611114565b506112286080840184611120565b858303608087015261123b838284611178565b9250505061124c60a0840184611198565b61125960a08601826111a7565b509392505050565b602080825281016103fe81846111b0565b60218152602081017f54686973206d65737361676520776173206e65766572207375626d697474656481527f2e00000000000000000000000000000000000000000000000000000000000000602082015290505b60400190565b60208082528101610da081611272565b60308152602081017f417474656d7074696e6720746f2073656e642076616c756520776974686f757481527f2070726f766964696e6720457468657200000000000000000000000000000000602082015290506112c6565b60208082528101610da0816112dc565b60208082527f496e73756666696369656e742066756e647320746f2073656e642076616c75659101908152610e04565b60208082528101610da081611344565b634e487b7160e01b5f52601160045260245ffd5b81810381811115610da057610da0611384565b60248152602081017f4661696c656420746f2073656e64206665657320746f206665657320636f6e7481527f7261637400000000000000000000000000000000000000000000000000000000602082015290506112c6565b60208082528101610da0816113ab565b604081016114218285610db5565b6103fe6020830184611086565b60148152602081017f6661696c65642073656e64696e672076616c756500000000000000000000000081529050610e04565b60208082528101610da08161142e565b5f610da08261147d565b90565b67ffffffffffffffff1690565b610daf81611470565b60208101610da0828461148a565b6001600160a01b03918216919081169082820390811115610da057610da0611384565b60118152602081017f4e6f74206f776e6572206f722073656c6600000000000000000000000000000081529050610e04565b60208082528101610da0816114c4565b80820180821115610da057610da0611384565b60218152602081017f4d657373616765207375626d6974746564206d6f7265207468616e206f6e636581527f2100000000000000000000000000000000000000000000000000000000000000602082015290506112c6565b60208082528101610da081611519565b5f60208284031215611594576115945f5ffd5b6103fe8383610fa1565b5f8135610da081610e8f565b5f6001600160a01b03835b81169019929092169190911792915050565b5f6001600160a01b038216610da0565b5f610da0826115c7565b5f610da0826115d7565b6115f4826115e1565b6115ff8183546115aa565b8255505050565b5f8135610da0816110db565b5f7bffffffffffffffff00000000000000000000000000000000000000006115b58460a01b90565b5f610da067ffffffffffffffff831661147d565b6116578261163a565b6115ff818354611612565b5f8135610da081610f95565b5f7fffffffff000000000000000000000000000000000000000000000000000000006115b58460e01b90565b5f63ffffffff8216610da0565b6116b08261169a565b6115ff81835461166e565b5f63ffffffff836115b5565b6116d08261169a565b6115ff8183546116bb565b5f808335601e19368590030181126116f4576116f45f5ffd5b8301915050803567ffffffffffffffff811115611712576117125f5ffd5b602082019150600181023603821315610ff357610ff35f5ffd5b634e487b7160e01b5f52604160045260245ffd5b634e487b7160e01b5f52602260045260245ffd5b60028104600182168061176857607f821691505b602082108103610e3b57610e3b611740565b5f610da061147a8381565b61178e8361177a565b81545f1960089490940293841b1916921b91909117905550565b5f610d20818484611785565b81811015610615576117c65f826117a8565b6001016117b4565b601f821115610d20575f818152602090206020601f850104810160208510156117f45750805b6118066020601f8601048301826117b4565b5050505050565b8267ffffffffffffffff8111156118265761182661172c565b6118308254611754565b61183b8282856117ce565b505f601f82116001811461186d575f83156118565750848201355b5f19600885021c19811660028502178555506118c4565b5f84815260208120601f198516915b8281101561189c578785013582556020948501946001909201910161187c565b50848210156118b8575f196008601f8716021c19878501351681555b50506001600284020184555b505050505050565b610d2083838361180d565b5f8135610da081610ffa565b5f60ff8216610da0565b6118f6826118e3565b815460ff191660ff8216176115ff565b8082806119128161159e565b905061191e81846115eb565b5050602083018061192e82611606565b905061193a818461164e565b5050604083018061194a82611662565b905061195681846116a7565b505050606082018061196782611662565b905061197681600185016116c7565b505061198560808301836116db565b6119938183600286016118cc565b505060a08201806119a3826118d7565b90506119b281600385016118ed565b50505050565b6106158282611906565b60258152602081017f496e73756666696369656e742066756e647320746f207075626c697368206d6581527f7373616765000000000000000000000000000000000000000000000000000000602082015290506112c6565b60208082528101610da0816119c2565b60c08101611a38828a610da6565b611a456020830189611086565b611a526040830188611114565b611a5f6060830187611114565b8181036080830152611a72818587611178565b9050611a8160a08301846111a7565b98975050505050505050565b67ffffffffffffffff918216919081169082820190811115610da057610da061138456fea2646970667358221220c836c0f8d512a3dd221c59b55724483dcafe9d398f730a9a6c742eb58bba83e864736f6c634300081c00336080604052348015600e575f5ffd5b5060156019565b60c9565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff161560685760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b039081161460c65780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b610fa7806100d65f395ff3fe608060405260043610610057575f3560e01c806382fbdc9c1161004157806382fbdc9c146100a9578063929d34e9146100c9578063a67e1760146100e8575f5ffd5b8062e0d3b51461005b5780638129fc1c14610093575b5f5ffd5b348015610066575f5ffd5b5061007a610075366004610a43565b6100fc565b60405161008a9493929190610ac1565b60405180910390f35b34801561009e575f5ffd5b506100a76101b4565b005b6100bc6100b7366004610b54565b6102f3565b60405161008a9190610b99565b3480156100d4575f5ffd5b506100a76100e3366004610a43565b61035a565b3480156100f3575f5ffd5b506100a76104f4565b5f60208190529081526040902080546001820180546001600160a01b03909216929161012790610bbb565b80601f016020809104026020016040519081016040528092919081815260200182805461015390610bbb565b801561019e5780601f106101755761010080835404028352916020019161019e565b820191905f5260205f20905b81548152906001019060200180831161018157829003601f168201915b5050505050908060020154908060030154905084565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000810460ff16159067ffffffffffffffff165f811580156101fe5750825b90505f8267ffffffffffffffff16600114801561021a5750303b155b905081158015610228575080155b1561025f576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561029357845468ff00000000000000001916680100000000000000001785555b5f600181905560025583156102ec57845468ff0000000000000000191685556040517fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2906102e390600190610c0a565b60405180910390a15b5050505050565b5f5f341161031c5760405162461bcd60e51b815260040161031390610c4c565b60405180910390fd5b61520861032834610545565b116103455760405162461bcd60e51b815260040161031390610c5c565b61035133848434610550565b90505b92915050565b5f8181526020818152604080832081516080810190925280546001600160a01b03168252600181018054929391929184019161039590610bbb565b80601f01602080910402602001604051908101604052809291908181526020018280546103c190610bbb565b801561040c5780601f106103e35761010080835404028352916020019161040c565b820191905f5260205f20905b8154815290600101906020018083116103ef57829003601f168201915b505050505081526020016002820154815260200160038201548152505090505f815f01516001600160a01b0316826020015160405161044b9190610cde565b5f604051808303815f865af19150503d805f8114610484576040519150601f19603f3d011682016040523d82523d5f602084013e610489565b606091505b50509050806104aa5760405162461bcd60e51b815260040161031390610d1a565b5f838152602081905260408120805473ffffffffffffffffffffffffffffffffffffffff19168155906104e060018301826109f2565b505f60028201819055600390910155505050565b5f610500600130610d3e565b9050336001600160a01b0382161461052a5760405162461bcd60e51b815260040161031390610d93565b600254600154146105425761053d610637565b61052a565b50565b5f6103544883610db7565b5f60015490506040518060800160405280866001600160a01b0316815260200185858080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201829052509385525050506020820185905248604090920191909152600180548291826105c883610dca565b9091555081526020808201929092526040015f208251815473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b039091161781559082015160018201906106189082610e8b565b5060408201516002820155606090910151600390910155949350505050565b6002546001540361064457565b5f5f61064e610754565b915091505f826060015190505f81846040015161066b9190610db7565b90505f5a90505f855f01516001600160a01b03168387602001516040516106929190610cde565b5f604051808303815f8787f1925050503d805f81146106cc576040519150601f19603f3d011682016040523d82523d5f602084013e6106d1565b606091505b505090505f5a90505f6106e48285610f47565b90505f8186111561070757866106fa8388610f47565b6107049190610f5a565b90505b5f818a604001516107189190610f47565b8a51909150851561072b5761072b610866565b6107336108b0565b61073e83828c6108c6565b610747826109a0565b5050505050505050505050565b61078560405180608001604052805f6001600160a01b03168152602001606081526020015f81526020015f81525090565b6002545f8181526020818152604080832081516080810190925280546001600160a01b03168252600181018054949591949193859290840191906107c890610bbb565b80601f01602080910402602001604051908101604052809291908181526020018280546107f490610bbb565b801561083f5780601f106108165761010080835404028352916020019161083f565b820191905f5260205f20905b81548152906001019060200180831161082257829003601f168201915b50505050508152602001600282015481526020016003820154815250509150915091509091565b6002545f908152602081905260408120805473ffffffffffffffffffffffffffffffffffffffff191681559061089f60018301826109f2565b505f60028201819055600390910155565b60028054905f6108bf83610dca565b9190505550565b5f816040516024016108d89190610b99565b60408051601f198184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f5ea3955800000000000000000000000000000000000000000000000000000000179052519091505f906001600160a01b0385169061afc8908790610952908690610cde565b5f60405180830381858888f193505050503d805f811461098d576040519150601f19603f3d011682016040523d82523d5f602084013e610992565b606091505b50509050806102ec576102ec855b805f036109aa5750565b604051419082905f81818185875af1925050503d805f81146109e7576040519150601f19603f3d011682016040523d82523d5f602084013e6109ec565b606091505b50505050565b5080546109fe90610bbb565b5f825580601f10610a0d575050565b601f0160209004905f5260205f209081019061054291905b80821115610a38575f8155600101610a25565b5090565b8035610354565b5f60208284031215610a5657610a565f5ffd5b6103518383610a3c565b5f6001600160a01b038216610354565b610a7981610a60565b82525050565b8281835e505f910152565b5f610a93825190565b808452602084019350610aaa818560208601610a7f565b601f01601f19169290920192915050565b80610a79565b60808101610acf8287610a70565b8181036020830152610ae18186610a8a565b9050610af06040830185610abb565b610afd6060830184610abb565b95945050505050565b5f5f83601f840112610b1957610b195f5ffd5b50813567ffffffffffffffff811115610b3357610b335f5ffd5b602083019150836001820283011115610b4d57610b4d5f5ffd5b9250929050565b5f5f60208385031215610b6857610b685f5ffd5b823567ffffffffffffffff811115610b8157610b815f5ffd5b610b8d85828601610b06565b92509250509250929050565b602081016103548284610abb565b634e487b7160e01b5f52602260045260245ffd5b600281046001821680610bcf57607f821691505b602082108103610be157610be1610ba7565b50919050565b5f61035482610bf4565b90565b67ffffffffffffffff1690565b610a7981610be7565b602081016103548284610c01565b600d8152602081017f4e6f2076616c75652073656e7400000000000000000000000000000000000000815290505b60200190565b6020808252810161035481610c18565b6020808252810161035481602481527f47617320746f6f206c6f7720636f6d706172656420746f20636f7374206f662060208201527f63616c6c00000000000000000000000000000000000000000000000000000000604082015260600190565b5f610cc6825190565b610cd4818560208601610a7f565b9290920192915050565b6103548183610cbd565b60198152602081017f43616c6c6261636b20657865637574696f6e206661696c65640000000000000081529050610c46565b6020808252810161035481610ce8565b634e487b7160e01b5f52601160045260245ffd5b6001600160a01b0391821691908116908282039081111561035457610354610d2a565b60088152602081017f4e6f742073656c6600000000000000000000000000000000000000000000000081529050610c46565b6020808252810161035481610d61565b634e487b7160e01b5f52601260045260245ffd5b5f82610dc557610dc5610da3565b500490565b5f60018201610ddb57610ddb610d2a565b5060010190565b634e487b7160e01b5f52604160045260245ffd5b5f610354610bf18381565b610e0a83610df6565b81545f1960089490940293841b1916921b91909117905550565b5f610e30818484610e01565b505050565b81811015610e4f57610e475f82610e24565b600101610e35565b5050565b601f821115610e30575f818152602090206020601f85010481016020851015610e795750805b6102ec6020601f860104830182610e35565b815167ffffffffffffffff811115610ea557610ea5610de2565b610eaf8254610bbb565b610eba828285610e53565b506020601f821160018114610eed575f8315610ed65750848201515b5f19600885021c19811660028502178555506102ec565b5f84815260208120601f198516915b82811015610f1c5787850151825560209485019460019092019101610efc565b5084821015610f3857838701515f19601f87166008021c191681555b50505050600202600101905550565b8181038181111561035457610354610d2a565b818102811582820484141761035457610354610d2a56fea2646970667358221220f710903f919fc52f31bee58088cd0d533ca4b00203bc31f30192f8284194557a64736f6c634300081c003360a06040526040516111d43803806111d48339810160408190526100229161043b565b828161002e8282610086565b50508160405161003d90610311565b61004791906104ac565b604051809103905ff080158015610060573d5f5f3e3d5ffd5b506001600160a01b031660805261007e61007960805190565b6100e4565b505050610500565b61008f82610146565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a28051156100d8576100d382826101bf565b505050565b6100e0610234565b5050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6101235f5160206111b45f395f51905f52546001600160a01b031690565b826040516101329291906104ba565b60405180910390a161014381610255565b50565b806001600160a01b03163b5f0361017b5780604051634c9c8ce360e01b815260040161017291906104ac565b60405180910390fd5b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5b80546001600160a01b0319166001600160a01b039290921691909117905550565b60605f5f846001600160a01b0316846040516101db91906104f6565b5f60405180830381855af49150503d805f8114610213576040519150601f19603f3d011682016040523d82523d5f602084013e610218565b606091505b509092509050610229858383610292565b925050505b92915050565b34156102535760405163b398979f60e01b815260040160405180910390fd5b565b6001600160a01b03811661027e575f604051633173bdd160e11b815260040161017291906104ac565b805f5160206111b45f395f51905f5261019e565b6060826102a7576102a2826102e8565b6102e1565b81511580156102be57506001600160a01b0384163b155b156102de5783604051639996b31560e01b815260040161017291906104ac565b50805b9392505050565b8051156102f85780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b6106a680610b0e83390190565b5f6001600160a01b03821661022e565b6103378161031e565b8114610143575f5ffd5b805161022e8161032e565b634e487b7160e01b5f52604160045260245ffd5b601f19601f83011681016001600160401b03811182821017156103855761038561034c565b6040525050565b5f61039660405190565b90506103a28282610360565b919050565b5f6001600160401b038211156103bf576103bf61034c565b601f19601f83011660200192915050565b8281835e505f910152565b5f6103ed6103e8846103a7565b61038c565b9050828152838383011115610403576104035f5ffd5b6102e18360208301846103d0565b5f82601f830112610423576104235f5ffd5b81516104338482602086016103db565b949350505050565b5f5f5f60608486031215610450576104505f5ffd5b61045a8585610341565b92506104698560208601610341565b60408501519092506001600160401b03811115610487576104875f5ffd5b61049386828701610411565b9150509250925092565b6104a68161031e565b82525050565b6020810161022e828461049d565b604081016104c8828561049d565b6102e1602083018461049d565b5f6104de825190565b6104ec8185602086016103d0565b9290920192915050565b61022e81836104d5565b6080516105f76105175f395f601001526105f75ff3fe608060405261000c61000e565b005b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633036100c4575f357fffffffff00000000000000000000000000000000000000000000000000000000167f4f1ef28600000000000000000000000000000000000000000000000000000000146100ba576040517fd2b576ec00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6100c26100cc565b565b6100c26100fa565b5f806100db36600481846103c0565b8101906100e8919061051c565b915091506100f6828261010a565b5050565b6100c2610105610164565b61019b565b610113826101b9565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a280511561015c576101578282610260565b505050565b6100f66102d4565b5f6101967f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b365f5f375f5f365f845af43d5f5f3e8080156101b5573d5ff35b3d5ffd5b806001600160a01b03163b5f0361020757806040517f4c9c8ce30000000000000000000000000000000000000000000000000000000081526004016101fe919061057d565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b60605f5f846001600160a01b03168460405161027c91906105b7565b5f60405180830381855af49150503d805f81146102b4576040519150601f19603f3d011682016040523d82523d5f602084013e6102b9565b606091505b50915091506102c985838361030c565b925050505b92915050565b34156100c2576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6060826103215761031c8261037b565b610374565b815115801561033857506001600160a01b0384163b155b1561037157836040517f9996b3150000000000000000000000000000000000000000000000000000000081526004016101fe919061057d565b50805b9392505050565b80511561038b5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b5f5f858511156103d1576103d15f5ffd5b838611156103e0576103e05f5ffd5b5050820193919092039150565b5f6001600160a01b0382166102ce565b610406816103ed565b81146103bd575f5ffd5b80356102ce816103fd565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b601f19601f830116810181811067ffffffffffffffff8211171561046e5761046e61041b565b6040525050565b5f61047f60405190565b905061048b8282610448565b919050565b5f67ffffffffffffffff8211156104a9576104a961041b565b601f19601f83011660200192915050565b82818337505f910152565b5f6104d76104d284610490565b610475565b90508281528383830111156104ed576104ed5f5ffd5b6103748360208301846104ba565b5f82601f83011261050d5761050d5f5ffd5b610374838335602085016104c5565b5f5f60408385031215610530576105305f5ffd5b61053a8484610410565b9150602083013567ffffffffffffffff811115610558576105585f5ffd5b610564858286016104fb565b9150509250929050565b610577816103ed565b82525050565b602081016102ce828461056e565b8281835e505f910152565b5f61059f825190565b6105ad81856020860161058b565b9290920192915050565b6102ce818361059656fea2646970667358221220ef8defc17bb0b61d9786ae4bf6a8bae264cd148835fbd62548b5d583020e977364736f6c634300081c0033608060405234801561000f575f5ffd5b506040516106a63803806106a683398101604081905261002e916100f3565b806001600160a01b038116610061575f604051631e4fbdf760e01b81526004016100589190610126565b60405180910390fd5b61006a81610071565b5050610134565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f6001600160a01b0382165b92915050565b6100db816100c0565b81146100e5575f5ffd5b50565b80516100cc816100d2565b5f60208284031215610106576101065f5ffd5b61011083836100e8565b9392505050565b610120816100c0565b82525050565b602081016100cc8284610117565b610565806101415f395ff3fe608060405260043610610058575f3560e01c80639623609d116100415780639623609d1461009f578063ad3cb1cc146100b2578063f2fde38b14610107575f5ffd5b8063715018a61461005c5780638da5cb5b14610072575b5f5ffd5b348015610067575f5ffd5b50610070610126565b005b34801561007d575f5ffd5b505f546001600160a01b031660405161009691906102e9565b60405180910390f35b6100706100ad36600461043b565b610139565b3480156100bd575f5ffd5b506100fa6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b60405161009691906104d9565b348015610112575f5ffd5b506100706101213660046104ea565b6101bd565b61012e61021c565b6101375f610261565b565b61014161021c565b6040517f4f1ef2860000000000000000000000000000000000000000000000000000000081526001600160a01b03841690634f1ef28690349061018a9086908690600401610507565b5f604051808303818588803b1580156101a1575f5ffd5b505af11580156101b3573d5f5f3e3d5ffd5b5050505050505050565b6101c561021c565b6001600160a01b038116610210575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161020791906102e9565b60405180910390fd5b61021981610261565b50565b5f546001600160a01b0316331461013757336040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161020791906102e9565b5f80546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f6001600160a01b0382165b92915050565b6102e3816102c8565b82525050565b602081016102d482846102da565b5f6102d4826102c8565b61030a816102f7565b8114610219575f5ffd5b80356102d481610301565b61030a816102c8565b80356102d48161031f565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b601f19601f830116810181811067ffffffffffffffff8211171561038657610386610333565b6040525050565b5f61039760405190565b90506103a38282610360565b919050565b5f67ffffffffffffffff8211156103c1576103c1610333565b601f19601f83011660200192915050565b82818337505f910152565b5f6103ef6103ea846103a8565b61038d565b9050828152838383011115610405576104055f5ffd5b6104138360208301846103d2565b9392505050565b5f82601f83011261042c5761042c5f5ffd5b610413838335602085016103dd565b5f5f5f60608486031215610450576104505f5ffd5b61045a8585610314565b92506104698560208601610328565b9150604084013567ffffffffffffffff811115610487576104875f5ffd5b6104938682870161041a565b9150509250925092565b8281835e505f910152565b5f6104b1825190565b8084526020840193506104c881856020860161049d565b601f01601f19169290920192915050565b6020808252810161041381846104a8565b5f602082840312156104fd576104fd5f5ffd5b6104138383610328565b6040810161051582856102da565b818103602083015261052781846104a8565b94935050505056fea2646970667358221220825046736e9ba7da84b283bda1535f423544d9a64889ef23b00a31fa58c37ed964736f6c634300081c0033b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103bd64e14789a915ea657e42f2dbf0b973227708fa64b58766287637985d1ade69",
}

// SystemDeployerABI is the input ABI used to generate the binding from.
// Deprecated: Use SystemDeployerMetaData.ABI instead.
var SystemDeployerABI = SystemDeployerMetaData.ABI

// SystemDeployerBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use SystemDeployerMetaData.Bin instead.
var SystemDeployerBin = SystemDeployerMetaData.Bin

// DeploySystemDeployer deploys a new Ethereum contract, binding an instance of SystemDeployer to it.
func DeploySystemDeployer(auth *bind.TransactOpts, backend bind.ContractBackend, eoaAdmin common.Address) (common.Address, *types.Transaction, *SystemDeployer, error) {
	parsed, err := SystemDeployerMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(SystemDeployerBin), backend, eoaAdmin)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &SystemDeployer{SystemDeployerCaller: SystemDeployerCaller{contract: contract}, SystemDeployerTransactor: SystemDeployerTransactor{contract: contract}, SystemDeployerFilterer: SystemDeployerFilterer{contract: contract}}, nil
}

// SystemDeployer is an auto generated Go binding around an Ethereum contract.
type SystemDeployer struct {
	SystemDeployerCaller     // Read-only binding to the contract
	SystemDeployerTransactor // Write-only binding to the contract
	SystemDeployerFilterer   // Log filterer for contract events
}

// SystemDeployerCaller is an auto generated read-only Go binding around an Ethereum contract.
type SystemDeployerCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SystemDeployerTransactor is an auto generated write-only Go binding around an Ethereum contract.
type SystemDeployerTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SystemDeployerFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type SystemDeployerFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SystemDeployerSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type SystemDeployerSession struct {
	Contract     *SystemDeployer   // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// SystemDeployerCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type SystemDeployerCallerSession struct {
	Contract *SystemDeployerCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts         // Call options to use throughout this session
}

// SystemDeployerTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type SystemDeployerTransactorSession struct {
	Contract     *SystemDeployerTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts         // Transaction auth options to use throughout this session
}

// SystemDeployerRaw is an auto generated low-level Go binding around an Ethereum contract.
type SystemDeployerRaw struct {
	Contract *SystemDeployer // Generic contract binding to access the raw methods on
}

// SystemDeployerCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type SystemDeployerCallerRaw struct {
	Contract *SystemDeployerCaller // Generic read-only contract binding to access the raw methods on
}

// SystemDeployerTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type SystemDeployerTransactorRaw struct {
	Contract *SystemDeployerTransactor // Generic write-only contract binding to access the raw methods on
}

// NewSystemDeployer creates a new instance of SystemDeployer, bound to a specific deployed contract.
func NewSystemDeployer(address common.Address, backend bind.ContractBackend) (*SystemDeployer, error) {
	contract, err := bindSystemDeployer(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &SystemDeployer{SystemDeployerCaller: SystemDeployerCaller{contract: contract}, SystemDeployerTransactor: SystemDeployerTransactor{contract: contract}, SystemDeployerFilterer: SystemDeployerFilterer{contract: contract}}, nil
}

// NewSystemDeployerCaller creates a new read-only instance of SystemDeployer, bound to a specific deployed contract.
func NewSystemDeployerCaller(address common.Address, caller bind.ContractCaller) (*SystemDeployerCaller, error) {
	contract, err := bindSystemDeployer(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &SystemDeployerCaller{contract: contract}, nil
}

// NewSystemDeployerTransactor creates a new write-only instance of SystemDeployer, bound to a specific deployed contract.
func NewSystemDeployerTransactor(address common.Address, transactor bind.ContractTransactor) (*SystemDeployerTransactor, error) {
	contract, err := bindSystemDeployer(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &SystemDeployerTransactor{contract: contract}, nil
}

// NewSystemDeployerFilterer creates a new log filterer instance of SystemDeployer, bound to a specific deployed contract.
func NewSystemDeployerFilterer(address common.Address, filterer bind.ContractFilterer) (*SystemDeployerFilterer, error) {
	contract, err := bindSystemDeployer(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &SystemDeployerFilterer{contract: contract}, nil
}

// bindSystemDeployer binds a generic wrapper to an already deployed contract.
func bindSystemDeployer(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := SystemDeployerMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_SystemDeployer *SystemDeployerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _SystemDeployer.Contract.SystemDeployerCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_SystemDeployer *SystemDeployerRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _SystemDeployer.Contract.SystemDeployerTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_SystemDeployer *SystemDeployerRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _SystemDeployer.Contract.SystemDeployerTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_SystemDeployer *SystemDeployerCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _SystemDeployer.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_SystemDeployer *SystemDeployerTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _SystemDeployer.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_SystemDeployer *SystemDeployerTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _SystemDeployer.Contract.contract.Transact(opts, method, params...)
}

// SystemDeployerSystemContractDeployedIterator is returned from FilterSystemContractDeployed and is used to iterate over the raw logs and unpacked data for SystemContractDeployed events raised by the SystemDeployer contract.
type SystemDeployerSystemContractDeployedIterator struct {
	Event *SystemDeployerSystemContractDeployed // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *SystemDeployerSystemContractDeployedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(SystemDeployerSystemContractDeployed)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(SystemDeployerSystemContractDeployed)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *SystemDeployerSystemContractDeployedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *SystemDeployerSystemContractDeployedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// SystemDeployerSystemContractDeployed represents a SystemContractDeployed event raised by the SystemDeployer contract.
type SystemDeployerSystemContractDeployed struct {
	Name            string
	ContractAddress common.Address
	Raw             types.Log // Blockchain specific contextual infos
}

// FilterSystemContractDeployed is a free log retrieval operation binding the contract event 0xbd64e14789a915ea657e42f2dbf0b973227708fa64b58766287637985d1ade69.
//
// Solidity: event SystemContractDeployed(string name, address contractAddress)
func (_SystemDeployer *SystemDeployerFilterer) FilterSystemContractDeployed(opts *bind.FilterOpts) (*SystemDeployerSystemContractDeployedIterator, error) {

	logs, sub, err := _SystemDeployer.contract.FilterLogs(opts, "SystemContractDeployed")
	if err != nil {
		return nil, err
	}
	return &SystemDeployerSystemContractDeployedIterator{contract: _SystemDeployer.contract, event: "SystemContractDeployed", logs: logs, sub: sub}, nil
}

// WatchSystemContractDeployed is a free log subscription operation binding the contract event 0xbd64e14789a915ea657e42f2dbf0b973227708fa64b58766287637985d1ade69.
//
// Solidity: event SystemContractDeployed(string name, address contractAddress)
func (_SystemDeployer *SystemDeployerFilterer) WatchSystemContractDeployed(opts *bind.WatchOpts, sink chan<- *SystemDeployerSystemContractDeployed) (event.Subscription, error) {

	logs, sub, err := _SystemDeployer.contract.WatchLogs(opts, "SystemContractDeployed")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(SystemDeployerSystemContractDeployed)
				if err := _SystemDeployer.contract.UnpackLog(event, "SystemContractDeployed", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseSystemContractDeployed is a log parse operation binding the contract event 0xbd64e14789a915ea657e42f2dbf0b973227708fa64b58766287637985d1ade69.
//
// Solidity: event SystemContractDeployed(string name, address contractAddress)
func (_SystemDeployer *SystemDeployerFilterer) ParseSystemContractDeployed(log types.Log) (*SystemDeployerSystemContractDeployed, error) {
	event := new(SystemDeployerSystemContractDeployed)
	if err := _SystemDeployer.contract.UnpackLog(event, "SystemContractDeployed", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
