# Decommission an L1 TEN network on Azure for UAT and Dev Testnet
#

name: '[M] Decommission Testnet L1'
run-name: '[M] Decommission Testnet L1 ( ${{ github.event.inputs.testnet_type }} )'
on:
  workflow_dispatch:
    inputs:
      testnet_type:
        description: 'Testnet Type'
        required: true
        default: 'dev-testnet'
        type: choice
        options:
          - 'dev-testnet'
          - 'uat-testnet'
      confirmation:
        description: 'Must enter "confirm" to allow workflow to run'
        required: false
        type: string

jobs:
  decom:
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.event.inputs.testnet_type }}

    steps:
      - name: 'Check confirmation'
        run: |
          if [[ "${{ github.event.inputs.confirmation }}" != "confirm" ]]; then
            echo "Confirmation field must say 'confirm' to continue"
            exit 1
          fi

      - name: 'Print GitHub variables'
        run: |
          echo "GitHub Variables = ${{ toJSON(vars) }}"

      - name: 'Login via Azure CLI'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: 'Print out resource list'
        uses: azure/CLI@v1
        with:
          inlineScript: |
            if [ -n "${{ vars.AZURE_DEPLOY_GROUP_L1 }}" ]; then
              az resource list --tag ${{ vars.AZURE_DEPLOY_GROUP_L1 }}=true --query '[]."id"' -o tsv 
            else
              echo "Warning filter condition is blank or empty"
              exit 1  
            fi

      - name: 'Add a cool off sleep period if cancel needed'
        run: |
          sleep 20

      # This will fail some deletions due to resource dependencies (i.e. you must first delete the vm before deleting the disk)
      - name: 'Delete deployed VMs'
        uses: azure/CLI@v1
        continue-on-error: true
        with:
          inlineScript: |
            if [ -n "${{ vars.AZURE_DEPLOY_GROUP_L1 }}" ]; then
              $(az resource list --tag ${{ vars.AZURE_DEPLOY_GROUP_L1 }}=true --query '[]."id"' -o tsv | xargs -n1 az resource delete --verbose -g Testnet --ids) || true
            fi

      # This will clean up any lingering dependencies - might fail if there are no resources to clean up
      - name: 'Delete VMs dependencies'
        uses: azure/CLI@v1
        continue-on-error: true
        with:
          inlineScript: |
            if [ -n "${{ vars.AZURE_DEPLOY_GROUP_L1 }}" ]; then
              $(az resource list --tag ${{ vars.AZURE_DEPLOY_GROUP_L1 }}=true --query '[]."id"' -o tsv | xargs -n1 az resource delete --verbose -g Testnet --ids) || true
            fi