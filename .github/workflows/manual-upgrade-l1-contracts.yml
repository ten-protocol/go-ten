name: '[M] Upgrade L1 Contracts'
run-name: '[M] Upgrade L1 Contracts ( ${{ github.event.inputs.testnet_type }} )'
on:
  workflow_dispatch:
    inputs:
      testnet_type:
        description: 'Testnet Type'
        required: true
        default: 'dev-testnet'
        type: choice
        options:
          - 'dev-testnet'
          - 'uat-testnet'
          - 'sepolia-testnet'
          - 'mainnet'
      upgrade_script:
        description: 'Type the name of the script file to run (e.g. "all_contracts_upgrade.ts")'
        required: true
        type: string
      confirmation:
        description: 'Type "confirm" if upgrading sepolia or mainnet'
        required: false
        type: string

jobs:
  upgrade:
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.event.inputs.testnet_type }}

    steps:
      - name: 'Check confirmation'
        run: |
          if [[ ("${{ github.event.inputs.testnet_type }}" == "sepolia-testnet" || "${{ github.event.inputs.testnet_type }}" == "mainnet") && "${{ github.event.inputs.confirmation }}" != "confirm" ]]; then
            echo "Confirmation field must say 'confirm' to upgrade sepolia or mainnet to avoid accidental upgrades"
            exit 1
          fi

      - uses: actions/checkout@v4

        # checkout the repo that **contains the YAML** under ./cfg/
      -  uses: actions/checkout@v4
         with:
           repository: ten-protocol/ten-apps
           token: ${{ secrets.DEPLOY_ACTIONS_PAT }}
           path: cfg


      -  name: 'Prepare testnet short name'
         id: prepareTestnetShortName
         shell: bash
         env:
           TESTNET_TYPE: ${{ github.event.inputs.testnet_type }}
         run: |
           # strip the -testnet suffix from the testnet type
           short_name=${TESTNET_TYPE%-testnet}
           echo "TESTNET_SHORT_NAME=$short_name" >> $GITHUB_OUTPUT

      -  name: Install yq
         run: |
           sudo wget -qO /usr/local/bin/yq \
             https://github.com/mikefarah/yq/releases/download/v4.44.1/yq_linux_amd64
           sudo chmod +x /usr/local/bin/yq

# parse YAML and emit outputs
      -  name: Parse l1-config.yaml
         id: parse
         env:
           TESTNET_SHORT_NAME: ${{ steps.prepareTestnetShortName.outputs.TESTNET_SHORT_NAME }}
         run: |
           CFG=cfg/nonprod-argocd-config/apps/envs/$TESTNET_SHORT_NAME/valuesFile/l1-values.yaml
           
           echo "network_config=$(yq -r '.l1Config.networkConfig'     "$CFG")"   >> $GITHUB_OUTPUT

      - uses: actions/setup-go@v5
        with:
          go-version: 1.25.1

      - name: 'Login to Azure docker registry'
        uses: azure/docker-login@v1
        with:
          login-server: testnetobscuronet.azurecr.io
          username: testnetobscuronet
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: 'Build and push hardhat deployer image'
        run: |
          DOCKER_BUILDKIT=1 docker build -t ${{ vars.DOCKER_BUILD_TAG_L2_HARDHAT_DEPLOYER }} -f tools/hardhatdeployer/Dockerfile .
          docker push ${{ vars.DOCKER_BUILD_TAG_L2_HARDHAT_DEPLOYER }}

      - name: 'Upgrade L1 Contracts'
        id: upgradeContracts
        shell: bash
        env:
          DOCKER_API_VERSION: "1.45"
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        run: |
          # Extract the environment prefix from the input
          TESTNET_TYPE_RAW="${{ github.event.inputs.testnet_type }}"
          if [[ "$TESTNET_TYPE_RAW" == "mainnet" ]]; then
            TESTNET_TYPE="mainnet"
          else
            # Strip the "-testnet" suffix from testnet environments
            TESTNET_TYPE=${TESTNET_TYPE_RAW%-testnet}
          fi
  
          # Run upgrade script
          go run ./testnet/launcher/l1upgrade/cmd \
          -upgrade_script="${{ github.event.inputs.upgrade_script }}" \
          -l1_http_url=${{ secrets.L1_HTTP_URL }} \
          -private_key=${{ secrets.ACCOUNT_PK_WORKER }} \
          -docker_image=${{ vars.DOCKER_BUILD_TAG_L2_HARDHAT_DEPLOYER }} \
          -network_config_addr="${{ steps.parse.outputs.network_config }}"

      - name: 'Save upgrade container logs'
        run: |
          docker logs `docker ps -aqf "name=upgrade-contracts"` > upgrade-contracts.out 2>&1

      - name: 'Upload upgrade container logs'
        uses: actions/upload-artifact@v4
        with:
          name: upgrade-contracts
          path: |
            upgrade-contracts.out
          retention-days: 7 